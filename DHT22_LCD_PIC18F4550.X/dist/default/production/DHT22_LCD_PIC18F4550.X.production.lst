

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jul 18 11:57:03 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48  0000                     
    49                           ; Version 2.40
    50                           ; Generated 17/11/2021 GMT
    51                           ; 
    52                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	smallconst
    86  000800                     __psmallconst:
    87                           	callstack 0
    88  000800  00                 	db	0
    89  000801                     __powers_:
    90                           	callstack 0
    91  000801  00                 	db	0
    92  000802  80                 	db	128
    93  000803  3F                 	db	63
    94  000804  00                 	db	0
    95  000805  20                 	db	32
    96  000806  41                 	db	65
    97  000807  00                 	db	0
    98  000808  C8                 	db	200
    99  000809  42                 	db	66
   100  00080A  00                 	db	0
   101  00080B  7A                 	db	122
   102  00080C  44                 	db	68
   103  00080D  40                 	db	64
   104  00080E  1C                 	db	28
   105  00080F  46                 	db	70
   106  000810  50                 	db	80
   107  000811  C3                 	db	195
   108  000812  47                 	db	71
   109  000813  24                 	db	36
   110  000814  74                 	db	116
   111  000815  49                 	db	73
   112  000816  97                 	db	151
   113  000817  18                 	db	24
   114  000818  4B                 	db	75
   115  000819  BC                 	db	188
   116  00081A  BE                 	db	190
   117  00081B  4C                 	db	76
   118  00081C  6B                 	db	107
   119  00081D  6E                 	db	110
   120  00081E  4E                 	db	78
   121  00081F  03                 	db	3
   122  000820  15                 	db	21
   123  000821  50                 	db	80
   124  000822  79                 	db	121
   125  000823  AD                 	db	173
   126  000824  60                 	db	96
   127  000825  F3                 	db	243
   128  000826  49                 	db	73
   129  000827  71                 	db	113
   130  000828                     __end_of__powers_:
   131                           	callstack 0
   132  000828                     __npowers_:
   133                           	callstack 0
   134  000828  00                 	db	0
   135  000829  80                 	db	128
   136  00082A  3F                 	db	63
   137  00082B  CD                 	db	205
   138  00082C  CC                 	db	204
   139  00082D  3D                 	db	61
   140  00082E  D7                 	db	215
   141  00082F  23                 	db	35
   142  000830  3C                 	db	60
   143  000831  12                 	db	18
   144  000832  83                 	db	131
   145  000833  3A                 	db	58
   146  000834  B7                 	db	183
   147  000835  D1                 	db	209
   148  000836  38                 	db	56
   149  000837  C6                 	db	198
   150  000838  27                 	db	39
   151  000839  37                 	db	55
   152  00083A  38                 	db	56
   153  00083B  86                 	db	134
   154  00083C  35                 	db	53
   155  00083D  C0                 	db	192
   156  00083E  D6                 	db	214
   157  00083F  33                 	db	51
   158  000840  CC                 	db	204
   159  000841  2B                 	db	43
   160  000842  32                 	db	50
   161  000843  70                 	db	112
   162  000844  89                 	db	137
   163  000845  30                 	db	48
   164  000846  E7                 	db	231
   165  000847  DB                 	db	219
   166  000848  2E                 	db	46
   167  000849  E5                 	db	229
   168  00084A  3C                 	db	60
   169  00084B  1E                 	db	30
   170  00084C  42                 	db	66
   171  00084D  A2                 	db	162
   172  00084E  0D                 	db	13
   173  00084F                     __end_of__npowers_:
   174                           	callstack 0
   175  00084F                     _dpowers:
   176                           	callstack 0
   177  00084F  0001               	dw	1
   178  000851  0000               	dw	0
   179  000853  000A               	dw	10
   180  000855  0000               	dw	0
   181  000857  0064               	dw	100
   182  000859  0000               	dw	0
   183  00085B  03E8               	dw	1000
   184  00085D  0000               	dw	0
   185  00085F  2710               	dw	10000
   186  000861  0000               	dw	0
   187  000863  86A0               	dw	34464
   188  000865  0001               	dw	1
   189  000867  4240               	dw	16960
   190  000869  000F               	dw	15
   191  00086B  9680               	dw	38528
   192  00086D  0098               	dw	152
   193  00086F  E100               	dw	57600
   194  000871  05F5               	dw	1525
   195  000873  CA00               	dw	51712
   196  000875  3B9A               	dw	15258
   197  000877                     __end_of_dpowers:
   198                           	callstack 0
   199  0000                     _PORTCbits	set	3970
   200  0000                     _LATCbits	set	3979
   201  0000                     _TRISCbits	set	3988
   202  0000                     _TRISDbits	set	3989
   203  0000                     _OSCCON	set	4051
   204  0000                     _LATDbits	set	3980
   205  000877                     STR_2:
   206  000877  20                 	db	32
   207  000878  20                 	db	32
   208  000879  48                 	db	72	;'H'
   209  00087A  75                 	db	117	;'u'
   210  00087B  6D                 	db	109	;'m'
   211  00087C  65                 	db	101	;'e'
   212  00087D  2E                 	db	46
   213  00087E  20                 	db	32
   214  00087F  25                 	db	37
   215  000880  32                 	db	50	;'2'
   216  000881  2E                 	db	46
   217  000882  32                 	db	50	;'2'
   218  000883  66                 	db	102	;'f'
   219  000884  00                 	db	0
   220  000885                     STR_1:
   221  000885  20                 	db	32
   222  000886  20                 	db	32
   223  000887  54                 	db	84	;'T'
   224  000888  65                 	db	101	;'e'
   225  000889  6D                 	db	109	;'m'
   226  00088A  70                 	db	112	;'p'
   227  00088B  2E                 	db	46
   228  00088C  20                 	db	32
   229  00088D  25                 	db	37
   230  00088E  32                 	db	50	;'2'
   231  00088F  2E                 	db	46
   232  000890  32                 	db	50	;'2'
   233  000891  66                 	db	102	;'f'
   234  000892  00                 	db	0
   235  000893                     STR_3:
   236  000893  65                 	db	101	;'e'
   237  000894  72                 	db	114	;'r'
   238  000895  72                 	db	114	;'r'
   239  000896  6F                 	db	111	;'o'
   240  000897  72                 	db	114	;'r'
   241  000898  00                 	db	0
   242  000899  00                 	db	0	; dummy byte at the end
   243  0000                     
   244                           ; #config settings
   245                           
   246                           	psect	cinit
   247  002506                     __pcinit:
   248                           	callstack 0
   249  002506                     start_initialization:
   250                           	callstack 0
   251  002506                     __initialization:
   252                           	callstack 0
   253                           
   254                           ; Clear objects allocated to BANK0 (8 bytes)
   255  002506  EE00  F079         	lfsr	0,__pbssBANK0
   256  00250A  0E08               	movlw	8
   257  00250C                     clear_0:
   258  00250C  6AEE               	clrf	postinc0,c
   259  00250E  06E8               	decf	wreg,f,c
   260  002510  E1FD               	bnz	clear_0
   261  002512                     end_of_initialization:
   262                           	callstack 0
   263  002512                     __end_of__initialization:
   264                           	callstack 0
   265  002512  0E00               	movlw	low (__Lmediumconst shr (0+16))
   266  002514  6EF8               	movwf	tblptru,c
   267  002516  0100               	movlb	0
   268  002518  EFAB  F00F         	goto	_main	;jump to C main() function
   269                           
   270                           	psect	bssBANK0
   271  000079                     __pbssBANK0:
   272                           	callstack 0
   273  000079                     	ds	8
   274                           
   275                           	psect	cstackBANK0
   276  000060                     __pcstackBANK0:
   277                           	callstack 0
   278  000060                     _printf$1102:
   279                           	callstack 0
   280                           
   281                           ; 3 bytes @ 0x0
   282  000060                     	ds	3
   283  000063                     printf@ap:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x3
   287  000063                     	ds	2
   288  000065                     printf@val:
   289                           	callstack 0
   290                           
   291                           ; 4 bytes @ 0x5
   292  000065                     	ds	4
   293  000069                     printf@flag:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x9
   297  000069                     	ds	2
   298  00006B                     printf@width:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0xB
   302  00006B                     	ds	2
   303  00006D                     printf@tmpval:
   304                           	callstack 0
   305                           
   306                           ; 4 bytes @ 0xD
   307  00006D                     	ds	4
   308  000071                     printf@eexp:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x11
   312  000071                     	ds	2
   313  000073                     printf@fval:
   314                           	callstack 0
   315                           
   316                           ; 3 bytes @ 0x13
   317  000073                     	ds	3
   318  000076                     printf@prec:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x16
   322  000076                     	ds	2
   323  000078                     printf@c:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x18
   327  000078                     	ds	1
   328                           
   329                           	psect	cstackCOMRAM
   330  000001                     __pcstackCOMRAM:
   331                           	callstack 0
   332  000001                     ??_isdigit:
   333  000001                     ?___awmod:
   334                           	callstack 0
   335  000001                     ?___lwmod:
   336                           	callstack 0
   337  000001                     ?___ftpack:
   338                           	callstack 0
   339  000001                     ?___ftneg:
   340                           	callstack 0
   341  000001                     ?__tdiv_to_l_:
   342                           	callstack 0
   343  000001                     ?__div_to_l_:
   344                           	callstack 0
   345  000001                     ?___lldiv:
   346                           	callstack 0
   347  000001                     ?___llmod:
   348                           	callstack 0
   349  000001                     LCD_write@dato:
   350                           	callstack 0
   351  000001                     ___awmod@dividend:
   352                           	callstack 0
   353  000001                     ___lwmod@dividend:
   354                           	callstack 0
   355  000001                     __div_to_l_@f1:
   356                           	callstack 0
   357  000001                     ___ftpack@arg:
   358                           	callstack 0
   359  000001                     __tdiv_to_l_@f1:
   360                           	callstack 0
   361  000001                     ___ftge@ff1:
   362                           	callstack 0
   363  000001                     ___ftneg@f1:
   364                           	callstack 0
   365  000001                     ___lldiv@dividend:
   366                           	callstack 0
   367  000001                     ___llmod@dividend:
   368                           	callstack 0
   369                           
   370                           ; 4 bytes @ 0x0
   371  000001                     	ds	1
   372  000002                     LCD_cmd@dato:
   373                           	callstack 0
   374  000002                     LCD_dato@dato:
   375                           	callstack 0
   376  000002                     _isdigit$882:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x1
   380  000002                     	ds	1
   381  000003                     ??_LCD_init:
   382  000003                     ??_LCD_clear:
   383  000003                     putch@dato:
   384                           	callstack 0
   385  000003                     isdigit@c:
   386                           	callstack 0
   387  000003                     LCD_printf@dato:
   388                           	callstack 0
   389  000003                     ___awmod@divisor:
   390                           	callstack 0
   391  000003                     ___lwmod@divisor:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x2
   395  000003                     	ds	1
   396  000004                     ___ftpack@exp:
   397                           	callstack 0
   398  000004                     __div_to_l_@f2:
   399                           	callstack 0
   400  000004                     __tdiv_to_l_@f2:
   401                           	callstack 0
   402  000004                     ___ftge@ff2:
   403                           	callstack 0
   404                           
   405                           ; 3 bytes @ 0x3
   406  000004                     	ds	1
   407  000005                     ___awmod@counter:
   408                           	callstack 0
   409  000005                     ___ftpack@sign:
   410                           	callstack 0
   411  000005                     ___lwmod@counter:
   412                           	callstack 0
   413  000005                     ___lldiv@divisor:
   414                           	callstack 0
   415  000005                     ___llmod@divisor:
   416                           	callstack 0
   417                           
   418                           ; 4 bytes @ 0x4
   419  000005                     	ds	1
   420  000006                     ??___ftpack:
   421  000006                     ?___lwdiv:
   422                           	callstack 0
   423  000006                     ___awmod@sign:
   424                           	callstack 0
   425  000006                     ___lwdiv@dividend:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x5
   429  000006                     	ds	1
   430  000007                     ??__tdiv_to_l_:
   431  000007                     ??___ftge:
   432  000007                     ?___awdiv:
   433                           	callstack 0
   434  000007                     ___awdiv@dividend:
   435                           	callstack 0
   436  000007                     __div_to_l_@quot:
   437                           	callstack 0
   438                           
   439                           ; 4 bytes @ 0x6
   440  000007                     	ds	1
   441  000008                     ___lwdiv@divisor:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x7
   445  000008                     	ds	1
   446  000009                     ?___lltoft:
   447                           	callstack 0
   448  000009                     ?___lwtoft:
   449                           	callstack 0
   450  000009                     ___llmod@counter:
   451                           	callstack 0
   452  000009                     ___awdiv@divisor:
   453                           	callstack 0
   454  000009                     ___lwtoft@c:
   455                           	callstack 0
   456  000009                     ___lldiv@quotient:
   457                           	callstack 0
   458  000009                     ___lltoft@c:
   459                           	callstack 0
   460                           
   461                           ; 4 bytes @ 0x8
   462  000009                     	ds	1
   463  00000A                     ___lwdiv@quotient:
   464                           	callstack 0
   465  00000A                     __tdiv_to_l_@quot:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x9
   469  00000A                     	ds	1
   470  00000B                     ___awdiv@counter:
   471                           	callstack 0
   472  00000B                     __div_to_l_@cntr:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0xA
   476  00000B                     	ds	1
   477  00000C                     ?___ftdiv:
   478                           	callstack 0
   479  00000C                     ___awdiv@sign:
   480                           	callstack 0
   481  00000C                     __div_to_l_@exp1:
   482                           	callstack 0
   483  00000C                     ___lwdiv@counter:
   484                           	callstack 0
   485  00000C                     ___ftdiv@f1:
   486                           	callstack 0
   487                           
   488                           ; 3 bytes @ 0xB
   489  00000C                     	ds	1
   490  00000D                     ??___lltoft:
   491  00000D                     ?___wmul:
   492                           	callstack 0
   493  00000D                     ___lldiv@counter:
   494                           	callstack 0
   495  00000D                     ___wmul@multiplier:
   496                           	callstack 0
   497  00000D                     ___awdiv@quotient:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0xC
   501  00000D                     	ds	1
   502  00000E                     __tdiv_to_l_@cntr:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0xD
   506  00000E                     	ds	1
   507  00000F                     __tdiv_to_l_@exp1:
   508                           	callstack 0
   509  00000F                     ___wmul@multiplicand:
   510                           	callstack 0
   511  00000F                     ___ftdiv@f2:
   512                           	callstack 0
   513                           
   514                           ; 3 bytes @ 0xE
   515  00000F                     	ds	2
   516  000011                     ___lltoft@exp:
   517                           	callstack 0
   518  000011                     ___wmul@product:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x10
   522  000011                     	ds	1
   523  000012                     ??___ftdiv:
   524                           
   525                           ; 1 bytes @ 0x11
   526  000012                     	ds	3
   527  000015                     ___ftdiv@cntr:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x14
   531  000015                     	ds	1
   532  000016                     ___ftdiv@f3:
   533                           	callstack 0
   534                           
   535                           ; 3 bytes @ 0x15
   536  000016                     	ds	3
   537  000019                     ___ftdiv@exp:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x18
   541  000019                     	ds	1
   542  00001A                     ___ftdiv@sign:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x19
   546  00001A                     	ds	1
   547  00001B                     ?___ftmul:
   548                           	callstack 0
   549  00001B                     ___ftmul@f1:
   550                           	callstack 0
   551                           
   552                           ; 3 bytes @ 0x1A
   553  00001B                     	ds	3
   554  00001E                     ___ftmul@f2:
   555                           	callstack 0
   556                           
   557                           ; 3 bytes @ 0x1D
   558  00001E                     	ds	3
   559  000021                     ??___ftmul:
   560                           
   561                           ; 1 bytes @ 0x20
   562  000021                     	ds	3
   563  000024                     ___ftmul@exp:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x23
   567  000024                     	ds	1
   568  000025                     ___ftmul@f3_as_product:
   569                           	callstack 0
   570                           
   571                           ; 3 bytes @ 0x24
   572  000025                     	ds	3
   573  000028                     ___ftmul@cntr:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x27
   577  000028                     	ds	1
   578  000029                     ___ftmul@sign:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x28
   582  000029                     	ds	1
   583  00002A                     ?_fround:
   584                           	callstack 0
   585  00002A                     ?_scale:
   586                           	callstack 0
   587  00002A                     DHT22_read@dht_temperatura:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x29
   591  00002A                     	ds	2
   592  00002C                     DHT22_read@dht_humedad:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x2B
   596  00002C                     	ds	1
   597  00002D                     _fround$1100:
   598                           	callstack 0
   599  00002D                     _scale$1101:
   600                           	callstack 0
   601                           
   602                           ; 3 bytes @ 0x2C
   603  00002D                     	ds	1
   604  00002E                     ??_DHT22_read:
   605                           
   606                           ; 1 bytes @ 0x2D
   607  00002E                     	ds	2
   608  000030                     scale@scl:
   609                           	callstack 0
   610  000030                     DHT22_read@rawhumidity:
   611                           	callstack 0
   612  000030                     _fround$1099:
   613                           	callstack 0
   614                           
   615                           ; 3 bytes @ 0x2F
   616  000030                     	ds	1
   617  000031                     ?___fttol:
   618                           	callstack 0
   619  000031                     ___fttol@f1:
   620                           	callstack 0
   621                           
   622                           ; 3 bytes @ 0x30
   623  000031                     	ds	1
   624  000032                     DHT22_read@result:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x31
   628  000032                     	ds	1
   629  000033                     fround@prec:
   630                           	callstack 0
   631  000033                     DHT22_read@bits:
   632                           	callstack 0
   633                           
   634                           ; 5 bytes @ 0x32
   635  000033                     	ds	1
   636  000034                     ?___ftadd:
   637                           	callstack 0
   638  000034                     ___ftadd@f1:
   639                           	callstack 0
   640                           
   641                           ; 3 bytes @ 0x33
   642  000034                     	ds	1
   643  000035                     ??___fttol:
   644                           
   645                           ; 1 bytes @ 0x34
   646  000035                     	ds	2
   647  000037                     ___ftadd@f2:
   648                           	callstack 0
   649                           
   650                           ; 3 bytes @ 0x36
   651  000037                     	ds	1
   652  000038                     DHT22_read@rawtemperature:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x37
   656  000038                     	ds	2
   657  00003A                     ??___ftadd:
   658  00003A                     DHT22_read@i:
   659                           	callstack 0
   660  00003A                     ___fttol@sign1:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x39
   664  00003A                     	ds	1
   665  00003B                     DHT22_read@j:
   666                           	callstack 0
   667  00003B                     ___fttol@lval:
   668                           	callstack 0
   669                           
   670                           ; 4 bytes @ 0x3A
   671  00003B                     	ds	2
   672  00003D                     ___ftadd@sign:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x3C
   676  00003D                     	ds	1
   677  00003E                     ___ftadd@exp2:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x3D
   681  00003E                     	ds	1
   682  00003F                     ___ftadd@exp1:
   683                           	callstack 0
   684  00003F                     ___fttol@exp1:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0x3E
   688  00003F                     	ds	1
   689  000040                     ?___ftsub:
   690                           	callstack 0
   691  000040                     ___ftsub@f1:
   692                           	callstack 0
   693                           
   694                           ; 3 bytes @ 0x3F
   695  000040                     	ds	3
   696  000043                     ___ftsub@f2:
   697                           	callstack 0
   698                           
   699                           ; 3 bytes @ 0x42
   700  000043                     	ds	3
   701  000046                     ?_printf:
   702                           	callstack 0
   703  000046                     printf@f:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x45
   707  000046                     	ds	5
   708  00004B                     ??_printf:
   709                           
   710                           ; 1 bytes @ 0x4A
   711  00004B                     	ds	6
   712  000051                     ??_main:
   713                           
   714                           ; 1 bytes @ 0x50
   715  000051                     	ds	2
   716  000053                     main@status:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x52
   720  000053                     	ds	1
   721  000054                     main@humedad:
   722                           	callstack 0
   723                           
   724                           ; 3 bytes @ 0x53
   725  000054                     	ds	3
   726  000057                     main@temperatura:
   727                           	callstack 0
   728                           
   729                           ; 3 bytes @ 0x56
   730  000057                     	ds	3
   731                           
   732 ;;
   733 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   734 ;;
   735 ;; *************** function _main *****************
   736 ;; Defined at:
   737 ;;		line 70 in file "main.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;  status          1   82[COMRAM] unsigned char 
   742 ;;  temperatura     3   86[COMRAM] float 
   743 ;;  humedad         3   83[COMRAM] float 
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   753 ;;      Params:         0       0       0       0       0       0       0       0       0
   754 ;;      Locals:         7       0       0       0       0       0       0       0       0
   755 ;;      Temps:          2       0       0       0       0       0       0       0       0
   756 ;;      Totals:         9       0       0       0       0       0       0       0       0
   757 ;;Total ram usage:        9 bytes
   758 ;; Hardware stack levels required when called: 4
   759 ;; This function calls:
   760 ;;		_DHT22_init
   761 ;;		_DHT22_read
   762 ;;		_LCD_clear
   763 ;;		_LCD_init
   764 ;;		_LCD_printf
   765 ;;		_LCD_segunda_linea
   766 ;;		_printf
   767 ;; This function is called by:
   768 ;;		Startup code after reset
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text0
   773  001F56                     __ptext0:
   774                           	callstack 0
   775  001F56                     _main:
   776                           	callstack 27
   777                           
   778                           ;main.c: 72: float temperatura;;main.c: 73: float humedad;;main.c: 75: OSCCON = 0x72;
   779                           
   780                           ;incstack = 0
   781  001F56  0E72               	movlw	114
   782  001F58  6ED3               	movwf	211,c	;volatile
   783                           
   784                           ;main.c: 76: DHT22_init();
   785  001F5A  ECA3  F012         	call	_DHT22_init	;wreg free
   786                           
   787                           ;main.c: 77: LCD_init();
   788  001F5E  EC11  F012         	call	_LCD_init	;wreg free
   789  001F62                     l3195:
   790                           
   791                           ;main.c: 83: uint8_t status = DHT22_read(&temperatura, &humedad);
   792  001F62  0E57               	movlw	low main@temperatura
   793  001F64  6E2A               	movwf	DHT22_read@dht_temperatura^0,c
   794  001F66  0E00               	movlw	high main@temperatura
   795  001F68  6E2B               	movwf	(DHT22_read@dht_temperatura+1)^0,c
   796  001F6A  0E54               	movlw	low main@humedad
   797  001F6C  6E2C               	movwf	DHT22_read@dht_humedad^0,c
   798  001F6E  0E00               	movlw	high main@humedad
   799  001F70  6E2D               	movwf	(DHT22_read@dht_humedad+1)^0,c
   800  001F72  EC58  F00B         	call	_DHT22_read	;wreg free
   801  001F76  6E53               	movwf	main@status^0,c
   802                           
   803                           ;main.c: 84: if(status==1){
   804  001F78  0453               	decf	main@status^0,w,c
   805  001F7A  A4D8               	btfss	status,2,c
   806  001F7C  D01D               	goto	l3205
   807                           
   808                           ;main.c: 85: LCD_clear();
   809  001F7E  EC77  F012         	call	_LCD_clear	;wreg free
   810                           
   811                           ;main.c: 86: printf("  Temp. %2.2f", temperatura);
   812  001F82  0E85               	movlw	low STR_1
   813  001F84  6E46               	movwf	printf@f^0,c
   814  001F86  0E08               	movlw	high STR_1
   815  001F88  6E47               	movwf	(printf@f+1)^0,c
   816  001F8A  C057  F048         	movff	main@temperatura,?_printf+2
   817  001F8E  C058  F049         	movff	main@temperatura+1,?_printf+3
   818  001F92  C059  F04A         	movff	main@temperatura+2,?_printf+4
   819  001F96  EC4D  F004         	call	_printf	;wreg free
   820                           
   821                           ;main.c: 87: LCD_segunda_linea();
   822  001F9A  EC9F  F012         	call	_LCD_segunda_linea	;wreg free
   823                           
   824                           ;main.c: 88: printf("  Hume. %2.2f", humedad);
   825  001F9E  0E77               	movlw	low STR_2
   826  001FA0  6E46               	movwf	printf@f^0,c
   827  001FA2  0E08               	movlw	high STR_2
   828  001FA4  6E47               	movwf	(printf@f+1)^0,c
   829  001FA6  C054  F048         	movff	main@humedad,?_printf+2
   830  001FAA  C055  F049         	movff	main@humedad+1,?_printf+3
   831  001FAE  C056  F04A         	movff	main@humedad+2,?_printf+4
   832  001FB2  EC4D  F004         	call	_printf	;wreg free
   833                           
   834                           ;main.c: 90: }else{
   835  001FB6  D008               	goto	l3209
   836  001FB8                     l3205:
   837                           
   838                           ;main.c: 91: LCD_clear();
   839  001FB8  EC77  F012         	call	_LCD_clear	;wreg free
   840                           
   841                           ;main.c: 92: LCD_printf("error");
   842  001FBC  0E93               	movlw	low STR_3
   843  001FBE  6E03               	movwf	LCD_printf@dato^0,c
   844  001FC0  0E08               	movlw	high STR_3
   845  001FC2  6E04               	movwf	(LCD_printf@dato+1)^0,c
   846  001FC4  ECA7  F011         	call	_LCD_printf	;wreg free
   847  001FC8                     l3209:
   848                           
   849                           ;main.c: 93: };main.c: 94: _delay((unsigned long)((2000)*(8000000/4000.0)));
   850  001FC8  0E15               	movlw	21
   851  001FCA  6E52               	movwf	(??_main+1)^0,c
   852  001FCC  0E4B               	movlw	75
   853  001FCE  6E51               	movwf	??_main^0,c
   854  001FD0  0EBE               	movlw	190
   855  001FD2                     u3517:
   856  001FD2  2EE8               	decfsz	wreg,f,c
   857  001FD4  D7FE               	bra	u3517
   858  001FD6  2E51               	decfsz	??_main^0,f,c
   859  001FD8  D7FC               	bra	u3517
   860  001FDA  2E52               	decfsz	(??_main+1)^0,f,c
   861  001FDC  D7FA               	bra	u3517
   862  001FDE  D000               	nop2	
   863  001FE0  D7C0               	goto	l3195
   864  001FE2                     __end_of_main:
   865                           	callstack 0
   866                           
   867 ;; *************** function _printf *****************
   868 ;; Defined at:
   869 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  f               2   69[COMRAM] PTR const unsigned char 
   872 ;;		 -> STR_2(14), STR_1(14), 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  tmpval          4   13[BANK0 ] struct .
   875 ;;  val             4    5[BANK0 ] unsigned long 
   876 ;;  fval            3   19[BANK0 ] unsigned long 
   877 ;;  cp              3    0        PTR const unsigned char 
   878 ;;  prec            2   22[BANK0 ] int 
   879 ;;  eexp            2   17[BANK0 ] int 
   880 ;;  width           2   11[BANK0 ] int 
   881 ;;  flag            2    9[BANK0 ] unsigned short 
   882 ;;  ap              2    3[BANK0 ] PTR void [1]
   883 ;;		 -> ?_printf(2), 
   884 ;;  len             2    0        unsigned int 
   885 ;;  c               1   24[BANK0 ] unsigned char 
   886 ;;  d               1    0        unsigned char 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  2   69[COMRAM] int 
   889 ;; Registers used:
   890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   896 ;;      Params:         5       0       0       0       0       0       0       0       0
   897 ;;      Locals:         0      25       0       0       0       0       0       0       0
   898 ;;      Temps:          6       0       0       0       0       0       0       0       0
   899 ;;      Totals:        11      25       0       0       0       0       0       0       0
   900 ;;Total ram usage:       36 bytes
   901 ;; Hardware stack levels used: 1
   902 ;; Hardware stack levels required when called: 3
   903 ;; This function calls:
   904 ;;		___awdiv
   905 ;;		___ftadd
   906 ;;		___ftge
   907 ;;		___ftmul
   908 ;;		___ftneg
   909 ;;		___ftsub
   910 ;;		___fttol
   911 ;;		___lldiv
   912 ;;		___llmod
   913 ;;		___lltoft
   914 ;;		___wmul
   915 ;;		__div_to_l_
   916 ;;		__tdiv_to_l_
   917 ;;		_fround
   918 ;;		_isdigit
   919 ;;		_putch
   920 ;;		_scale
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text1
   927  00089A                     __ptext1:
   928                           	callstack 0
   929  00089A                     _printf:
   930                           	callstack 27
   931                           
   932                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
   933                           
   934                           ;incstack = 0
   935  00089A  0E48               	movlw	low (?_printf+2)
   936  00089C  0100               	movlb	0	; () banked
   937  00089E  6F63               	movwf	printf@ap& (0+255),b
   938  0008A0  0E00               	movlw	high (?_printf+2)
   939  0008A2  6F64               	movwf	(printf@ap+1)& (0+255),b
   940                           
   941                           ;doprnt.c: 553: while((c = *f++)) {
   942  0008A4  EF66  F008         	goto	l3177
   943  0008A8                     l2943:
   944                           
   945                           ; BSR set to: 0
   946                           ;doprnt.c: 555: if(c != '%')
   947  0008A8  0E25               	movlw	37
   948  0008AA  1978               	xorwf	printf@c& (0+255),w,b
   949  0008AC  B4D8               	btfsc	status,2,c
   950  0008AE  D005               	goto	l2947
   951                           
   952                           ; BSR set to: 0
   953                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
   954  0008B0  5178               	movf	printf@c& (0+255),w,b
   955  0008B2  EC9A  F012         	call	_putch
   956                           
   957                           ;doprnt.c: 559: continue;
   958  0008B6  EF66  F008         	goto	l3177
   959  0008BA                     l2947:
   960                           
   961                           ; BSR set to: 0
   962                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
   963  0008BA  0E00               	movlw	0
   964  0008BC  6F6C               	movwf	(printf@width+1)& (0+255),b
   965  0008BE  0E00               	movlw	0
   966  0008C0  6F6B               	movwf	printf@width& (0+255),b
   967                           
   968                           ;doprnt.c: 565: flag = 0;
   969  0008C2  0E00               	movlw	0
   970  0008C4  6F6A               	movwf	(printf@flag+1)& (0+255),b
   971  0008C6  0E00               	movlw	0
   972  0008C8  6F69               	movwf	printf@flag& (0+255),b
   973                           
   974                           ; BSR set to: 0
   975                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
   976  0008CA  C046  FFF6         	movff	printf@f,tblptrl
   977  0008CE  C047  FFF7         	movff	printf@f+1,tblptrh
   978  0008D2                     	if	0	;tblptru may be non-zero
   979  0008D2                     	endif
   980  0008D2                     	if	0	;tblptru may be non-zero
   981  0008D2                     	endif
   982  0008D2  0008               	tblrd		*
   983  0008D4  50F5               	movf	tablat,w,c
   984  0008D6  EC68  F012         	call	_isdigit
   985  0008DA  A0D8               	btfss	status,0,c
   986  0008DC  D034               	goto	u2970
   987                           
   988                           ;doprnt.c: 615: width = 0;
   989  0008DE  0E00               	movlw	0
   990  0008E0  0100               	movlb	0	; () banked
   991  0008E2  6F6C               	movwf	(printf@width+1)& (0+255),b
   992  0008E4  0E00               	movlw	0
   993  0008E6  6F6B               	movwf	printf@width& (0+255),b
   994  0008E8                     l2953:
   995                           
   996                           ;doprnt.c: 617: width *= 10;
   997  0008E8  C06B  F00D         	movff	printf@width,___wmul@multiplier
   998  0008EC  C06C  F00E         	movff	printf@width+1,___wmul@multiplier+1
   999  0008F0  0E00               	movlw	0
  1000  0008F2  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  1001  0008F4  0E0A               	movlw	10
  1002  0008F6  6E0F               	movwf	___wmul@multiplicand^0,c
  1003  0008F8  EC31  F012         	call	___wmul	;wreg free
  1004  0008FC  C00D  F06B         	movff	?___wmul,printf@width
  1005  000900  C00E  F06C         	movff	?___wmul+1,printf@width+1
  1006                           
  1007                           ;doprnt.c: 618: width += *f++ - '0';
  1008  000904  0ED0               	movlw	208
  1009  000906  6E4B               	movwf	??_printf^0,c
  1010  000908  0EFF               	movlw	255
  1011  00090A  6E4C               	movwf	(??_printf+1)^0,c
  1012  00090C  C046  FFF6         	movff	printf@f,tblptrl
  1013  000910  C047  FFF7         	movff	printf@f+1,tblptrh
  1014  000914                     	if	0	;tblptru may be non-zero
  1015  000914                     	endif
  1016  000914                     	if	0	;tblptru may be non-zero
  1017  000914                     	endif
  1018  000914  0008               	tblrd		*
  1019  000916  50F5               	movf	tablat,w,c
  1020  000918  6E4D               	movwf	(??_printf+2)^0,c
  1021  00091A  6A4E               	clrf	(??_printf+3)^0,c
  1022  00091C  504B               	movf	??_printf^0,w,c
  1023  00091E  264D               	addwf	(??_printf+2)^0,f,c
  1024  000920  504C               	movf	(??_printf+1)^0,w,c
  1025  000922  224E               	addwfc	(??_printf+3)^0,f,c
  1026  000924  504D               	movf	(??_printf+2)^0,w,c
  1027  000926  0100               	movlb	0	; () banked
  1028  000928  276B               	addwf	printf@width& (0+255),f,b
  1029  00092A  504E               	movf	(??_printf+3)^0,w,c
  1030  00092C  236C               	addwfc	(printf@width+1)& (0+255),f,b
  1031                           
  1032                           ; BSR set to: 0
  1033  00092E  4A46               	infsnz	printf@f^0,f,c
  1034  000930  2A47               	incf	(printf@f+1)^0,f,c
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  1038  000932  C046  FFF6         	movff	printf@f,tblptrl
  1039  000936  C047  FFF7         	movff	printf@f+1,tblptrh
  1040  00093A                     	if	0	;tblptru may be non-zero
  1041  00093A                     	endif
  1042  00093A                     	if	0	;tblptru may be non-zero
  1043  00093A                     	endif
  1044  00093A  0008               	tblrd		*
  1045  00093C  50F5               	movf	tablat,w,c
  1046  00093E  EC68  F012         	call	_isdigit
  1047  000942  B0D8               	btfsc	status,0,c
  1048  000944  D7D1               	goto	l2953
  1049  000946                     u2970:
  1050                           
  1051                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  1052  000946  C046  FFF6         	movff	printf@f,tblptrl
  1053  00094A  C047  FFF7         	movff	printf@f+1,tblptrh
  1054  00094E                     	if	0	;tblptru may be non-zero
  1055  00094E                     	endif
  1056  00094E                     	if	0	;tblptru may be non-zero
  1057  00094E                     	endif
  1058  00094E  0008               	tblrd		*
  1059  000950  50F5               	movf	tablat,w,c
  1060  000952  0A2E               	xorlw	46
  1061  000954  A4D8               	btfss	status,2,c
  1062  000956  D039               	goto	l2975
  1063                           
  1064                           ;doprnt.c: 629: flag |= 0x4000;
  1065  000958  0100               	movlb	0	; () banked
  1066  00095A  8D6A               	bsf	(printf@flag+1)& (0+255),6,b
  1067                           
  1068                           ;doprnt.c: 630: f++;
  1069  00095C  4A46               	infsnz	printf@f^0,f,c
  1070  00095E  2A47               	incf	(printf@f+1)^0,f,c
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  1074  000960  0E00               	movlw	0
  1075  000962  6F77               	movwf	(printf@prec+1)& (0+255),b
  1076  000964  0E00               	movlw	0
  1077  000966  6F76               	movwf	printf@prec& (0+255),b
  1078                           
  1079                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  1080  000968  D025               	goto	l2973
  1081  00096A                     l2967:
  1082                           
  1083                           ;doprnt.c: 647: prec *= 10;
  1084  00096A  C076  F00D         	movff	printf@prec,___wmul@multiplier
  1085  00096E  C077  F00E         	movff	printf@prec+1,___wmul@multiplier+1
  1086  000972  0E00               	movlw	0
  1087  000974  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  1088  000976  0E0A               	movlw	10
  1089  000978  6E0F               	movwf	___wmul@multiplicand^0,c
  1090  00097A  EC31  F012         	call	___wmul	;wreg free
  1091  00097E  C00D  F076         	movff	?___wmul,printf@prec
  1092  000982  C00E  F077         	movff	?___wmul+1,printf@prec+1
  1093                           
  1094                           ;doprnt.c: 648: prec += *f++ - '0';
  1095  000986  0ED0               	movlw	208
  1096  000988  6E4B               	movwf	??_printf^0,c
  1097  00098A  0EFF               	movlw	255
  1098  00098C  6E4C               	movwf	(??_printf+1)^0,c
  1099  00098E  C046  FFF6         	movff	printf@f,tblptrl
  1100  000992  C047  FFF7         	movff	printf@f+1,tblptrh
  1101  000996                     	if	0	;tblptru may be non-zero
  1102  000996                     	endif
  1103  000996                     	if	0	;tblptru may be non-zero
  1104  000996                     	endif
  1105  000996  0008               	tblrd		*
  1106  000998  50F5               	movf	tablat,w,c
  1107  00099A  6E4D               	movwf	(??_printf+2)^0,c
  1108  00099C  6A4E               	clrf	(??_printf+3)^0,c
  1109  00099E  504B               	movf	??_printf^0,w,c
  1110  0009A0  264D               	addwf	(??_printf+2)^0,f,c
  1111  0009A2  504C               	movf	(??_printf+1)^0,w,c
  1112  0009A4  224E               	addwfc	(??_printf+3)^0,f,c
  1113  0009A6  504D               	movf	(??_printf+2)^0,w,c
  1114  0009A8  0100               	movlb	0	; () banked
  1115  0009AA  2776               	addwf	printf@prec& (0+255),f,b
  1116  0009AC  504E               	movf	(??_printf+3)^0,w,c
  1117  0009AE  2377               	addwfc	(printf@prec+1)& (0+255),f,b
  1118                           
  1119                           ; BSR set to: 0
  1120  0009B0  4A46               	infsnz	printf@f^0,f,c
  1121  0009B2  2A47               	incf	(printf@f+1)^0,f,c
  1122  0009B4                     l2973:
  1123                           
  1124                           ; BSR set to: 0
  1125  0009B4  C046  FFF6         	movff	printf@f,tblptrl
  1126  0009B8  C047  FFF7         	movff	printf@f+1,tblptrh
  1127  0009BC                     	if	0	;tblptru may be non-zero
  1128  0009BC                     	endif
  1129  0009BC                     	if	0	;tblptru may be non-zero
  1130  0009BC                     	endif
  1131  0009BC  0008               	tblrd		*
  1132  0009BE  50F5               	movf	tablat,w,c
  1133  0009C0  EC68  F012         	call	_isdigit
  1134  0009C4  A0D8               	btfss	status,0,c
  1135  0009C6  D00A               	goto	l2983
  1136  0009C8  D7D0               	goto	l2967
  1137  0009CA                     l2975:
  1138                           
  1139                           ;doprnt.c: 652: prec = 0;
  1140  0009CA  0E00               	movlw	0
  1141  0009CC  0100               	movlb	0	; () banked
  1142  0009CE  6F77               	movwf	(printf@prec+1)& (0+255),b
  1143  0009D0  0E00               	movlw	0
  1144  0009D2  6F76               	movwf	printf@prec& (0+255),b
  1145                           
  1146                           ; BSR set to: 0
  1147                           ;doprnt.c: 654: flag |= 0x1000;
  1148  0009D4  896A               	bsf	(printf@flag+1)& (0+255),4,b
  1149  0009D6  D002               	goto	l2983
  1150  0009D8                     l2979:
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;doprnt.c: 689: flag |= 0x400;
  1154  0009D8  856A               	bsf	(printf@flag+1)& (0+255),2,b
  1155                           
  1156                           ;doprnt.c: 690: break;
  1157  0009DA  D012               	goto	l2985
  1158  0009DC                     l2983:
  1159  0009DC  C046  FFF6         	movff	printf@f,tblptrl
  1160  0009E0  C047  FFF7         	movff	printf@f+1,tblptrh
  1161  0009E4  4A46               	infsnz	printf@f^0,f,c
  1162  0009E6  2A47               	incf	(printf@f+1)^0,f,c
  1163  0009E8                     	if	0	;tblptru may be non-zero
  1164  0009E8                     	endif
  1165  0009E8                     	if	0	;tblptru may be non-zero
  1166  0009E8                     	endif
  1167  0009E8  0008               	tblrd		*
  1168  0009EA  CFF5 F078          	movff	tablat,printf@c
  1169  0009EE  0100               	movlb	0	; () banked
  1170  0009F0  5178               	movf	printf@c& (0+255),w,b
  1171                           
  1172                           ; Switch size 1, requested type "simple"
  1173                           ; Number of cases is 2, Range of values is 0 to 102
  1174                           ; switch strategies available:
  1175                           ; Name         Instructions Cycles
  1176                           ; simple_byte            7     4 (average)
  1177                           ;	Chosen strategy is simple_byte
  1178  0009F2  0A00               	xorlw	0	; case 0
  1179  0009F4  B4D8               	btfsc	status,2,c
  1180  0009F6  0012               	return	
  1181  0009F8  0A66               	xorlw	102	; case 102
  1182  0009FA  B4D8               	btfsc	status,2,c
  1183  0009FC  D7ED               	goto	l2979
  1184  0009FE  D366               	goto	l3177
  1185  000A00                     l2985:
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;doprnt.c: 851: if(flag & (0x700)) {
  1189  000A00  0E07               	movlw	7
  1190  000A02  156A               	andwf	(printf@flag+1)& (0+255),w,b
  1191  000A04  B4D8               	btfsc	status,2,c
  1192  000A06  D2DE               	goto	l3133
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;doprnt.c: 853: if(flag & 0x1000)
  1196  000A08  A96A               	btfss	(printf@flag+1)& (0+255),4,b
  1197  000A0A  D004               	goto	l2991
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;doprnt.c: 855: prec = 6;
  1201  000A0C  0E00               	movlw	0
  1202  000A0E  6F77               	movwf	(printf@prec+1)& (0+255),b
  1203  000A10  0E06               	movlw	6
  1204  000A12  6F76               	movwf	printf@prec& (0+255),b
  1205  000A14                     l2991:
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1209  000A14  C063  FFD9         	movff	printf@ap,fsr2l
  1210  000A18  C064  FFDA         	movff	printf@ap+1,fsr2h
  1211  000A1C  CFDE F073          	movff	postinc2,printf@fval
  1212  000A20  CFDE F074          	movff	postinc2,printf@fval+1
  1213  000A24  CFDD F075          	movff	postdec2,printf@fval+2
  1214                           
  1215                           ; BSR set to: 0
  1216  000A28  0E03               	movlw	3
  1217  000A2A  2763               	addwf	printf@ap& (0+255),f,b
  1218  000A2C  0E00               	movlw	0
  1219  000A2E  2364               	addwfc	(printf@ap+1)& (0+255),f,b
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;doprnt.c: 857: if(fval < 0.0) {
  1223  000A30  AF75               	btfss	(printf@fval+2)& (0+255),7,b
  1224  000A32  D011               	goto	l3001
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;doprnt.c: 858: fval = -fval;
  1228  000A34  C073  F001         	movff	printf@fval,___ftneg@f1
  1229  000A38  C074  F002         	movff	printf@fval+1,___ftneg@f1+1
  1230  000A3C  C075  F003         	movff	printf@fval+2,___ftneg@f1+2
  1231  000A40  EC44  F012         	call	___ftneg	;wreg free
  1232  000A44  C001  F073         	movff	?___ftneg,printf@fval
  1233  000A48  C002  F074         	movff	?___ftneg+1,printf@fval+1
  1234  000A4C  C003  F075         	movff	?___ftneg+2,printf@fval+2
  1235                           
  1236                           ;doprnt.c: 859: flag |= 0x03;
  1237  000A50  0E03               	movlw	3
  1238  000A52  0100               	movlb	0	; () banked
  1239  000A54  1369               	iorwf	printf@flag& (0+255),f,b
  1240  000A56                     l3001:
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  1244  000A56  0E00               	movlw	0
  1245  000A58  6F72               	movwf	(printf@eexp+1)& (0+255),b
  1246  000A5A  0E00               	movlw	0
  1247  000A5C  6F71               	movwf	printf@eexp& (0+255),b
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;doprnt.c: 862: if( fval!=0) {
  1251  000A5E  5173               	movf	printf@fval& (0+255),w,b
  1252  000A60  1174               	iorwf	(printf@fval+1)& (0+255),w,b
  1253  000A62  1175               	iorwf	(printf@fval+2)& (0+255),w,b
  1254  000A64  B4D8               	btfsc	status,2,c
  1255  000A66  D086               	goto	l3029
  1256                           
  1257                           ; BSR set to: 0
  1258                           ;doprnt.c: 863: (void)(*(&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1259  000A68  0E82               	movlw	130
  1260  000A6A  6E4B               	movwf	??_printf^0,c
  1261  000A6C  0EFF               	movlw	255
  1262  000A6E  6E4C               	movwf	(??_printf+1)^0,c
  1263  000A70  C073  F04D         	movff	printf@fval,??_printf+2
  1264  000A74  C074  F04E         	movff	printf@fval+1,??_printf+3
  1265  000A78  C075  F04F         	movff	printf@fval+2,??_printf+4
  1266  000A7C  C076  F050         	movff	printf@fval+3,??_printf+5
  1267  000A80  0E10               	movlw	16
  1268  000A82  D005               	goto	u3040
  1269  000A84                     u3045:
  1270  000A84  90D8               	bcf	status,0,c
  1271  000A86  3250               	rrcf	(??_printf+5)^0,f,c
  1272  000A88  324F               	rrcf	(??_printf+4)^0,f,c
  1273  000A8A  324E               	rrcf	(??_printf+3)^0,f,c
  1274  000A8C  324D               	rrcf	(??_printf+2)^0,f,c
  1275  000A8E                     u3040:
  1276  000A8E  2EE8               	decfsz	wreg,f,c
  1277  000A90  D7F9               	goto	u3045
  1278  000A92  504D               	movf	(??_printf+2)^0,w,c
  1279  000A94  244B               	addwf	??_printf^0,w,c
  1280  000A96  6F71               	movwf	printf@eexp& (0+255),b
  1281  000A98  0E00               	movlw	0
  1282  000A9A  204C               	addwfc	(??_printf+1)^0,w,c
  1283  000A9C  6F72               	movwf	(printf@eexp+1)& (0+255),b
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;doprnt.c: 864: eexp--;
  1287  000A9E  0771               	decf	printf@eexp& (0+255),f,b
  1288  000AA0  A0D8               	btfss	status,0,c
  1289  000AA2  0772               	decf	(printf@eexp+1)& (0+255),f,b
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;doprnt.c: 865: eexp *= 3;
  1293  000AA4  C071  F00D         	movff	printf@eexp,___wmul@multiplier
  1294  000AA8  C072  F00E         	movff	printf@eexp+1,___wmul@multiplier+1
  1295  000AAC  0E00               	movlw	0
  1296  000AAE  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  1297  000AB0  0E03               	movlw	3
  1298  000AB2  6E0F               	movwf	___wmul@multiplicand^0,c
  1299  000AB4  EC31  F012         	call	___wmul	;wreg free
  1300  000AB8  C00D  F071         	movff	?___wmul,printf@eexp
  1301  000ABC  C00E  F072         	movff	?___wmul+1,printf@eexp+1
  1302                           
  1303                           ;doprnt.c: 866: eexp /= 10;
  1304  000AC0  C071  F007         	movff	printf@eexp,___awdiv@dividend
  1305  000AC4  C072  F008         	movff	printf@eexp+1,___awdiv@dividend+1
  1306  000AC8  0E00               	movlw	0
  1307  000ACA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1308  000ACC  0E0A               	movlw	10
  1309  000ACE  6E09               	movwf	___awdiv@divisor^0,c
  1310  000AD0  ECF1  F00F         	call	___awdiv	;wreg free
  1311  000AD4  C007  F071         	movff	?___awdiv,printf@eexp
  1312  000AD8  C008  F072         	movff	?___awdiv+1,printf@eexp+1
  1313                           
  1314                           ;doprnt.c: 867: if(eexp < 0)
  1315  000ADC  0100               	movlb	0	; () banked
  1316  000ADE  AF72               	btfss	(printf@eexp+1)& (0+255),7,b
  1317  000AE0  D003               	goto	l3017
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;doprnt.c: 868: eexp--;
  1321  000AE2  0771               	decf	printf@eexp& (0+255),f,b
  1322  000AE4  A0D8               	btfss	status,0,c
  1323  000AE6  0772               	decf	(printf@eexp+1)& (0+255),f,b
  1324  000AE8                     l3017:
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  1328  000AE8  5171               	movf	printf@eexp& (0+255),w,b
  1329  000AEA  0800               	sublw	0
  1330  000AEC  EC75  F008         	call	_scale
  1331  000AF0  C02A  F06D         	movff	?_scale,printf@tmpval
  1332  000AF4  C02B  F06E         	movff	?_scale+1,printf@tmpval+1
  1333  000AF8  C02C  F06F         	movff	?_scale+2,printf@tmpval+2
  1334                           
  1335                           ;doprnt.c: 873: tmpval.integ *= fval;
  1336  000AFC  C06D  F01B         	movff	printf@tmpval,___ftmul@f1
  1337  000B00  C06E  F01C         	movff	printf@tmpval+1,___ftmul@f1+1
  1338  000B04  C06F  F01D         	movff	printf@tmpval+2,___ftmul@f1+2
  1339  000B08  C073  F01E         	movff	printf@fval,___ftmul@f2
  1340  000B0C  C074  F01F         	movff	printf@fval+1,___ftmul@f2+1
  1341  000B10  C075  F020         	movff	printf@fval+2,___ftmul@f2+2
  1342  000B14  ECFE  F00D         	call	___ftmul	;wreg free
  1343  000B18  C01B  F06D         	movff	?___ftmul,printf@tmpval
  1344  000B1C  C01C  F06E         	movff	?___ftmul+1,printf@tmpval+1
  1345  000B20  C01D  F06F         	movff	?___ftmul+2,printf@tmpval+2
  1346                           
  1347                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  1348  000B24  C06D  F001         	movff	printf@tmpval,___ftge@ff1
  1349  000B28  C06E  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1350  000B2C  C06F  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1351  000B30  0E00               	movlw	0
  1352  000B32  6E04               	movwf	___ftge@ff2^0,c
  1353  000B34  0E80               	movlw	128
  1354  000B36  6E05               	movwf	(___ftge@ff2+1)^0,c
  1355  000B38  0E3F               	movlw	63
  1356  000B3A  6E06               	movwf	(___ftge@ff2+2)^0,c
  1357  000B3C  EC74  F010         	call	___ftge	;wreg free
  1358  000B40  B0D8               	btfsc	status,0,c
  1359  000B42  D005               	goto	l3025
  1360                           
  1361                           ;doprnt.c: 875: eexp--;
  1362  000B44  0100               	movlb	0	; () banked
  1363  000B46  0771               	decf	printf@eexp& (0+255),f,b
  1364  000B48  A0D8               	btfss	status,0,c
  1365  000B4A  0772               	decf	(printf@eexp+1)& (0+255),f,b
  1366  000B4C  D013               	goto	l3029
  1367  000B4E                     l3025:
  1368                           
  1369                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  1370  000B4E  C06D  F001         	movff	printf@tmpval,___ftge@ff1
  1371  000B52  C06E  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1372  000B56  C06F  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1373  000B5A  0E00               	movlw	0
  1374  000B5C  6E04               	movwf	___ftge@ff2^0,c
  1375  000B5E  0E20               	movlw	32
  1376  000B60  6E05               	movwf	(___ftge@ff2+1)^0,c
  1377  000B62  0E41               	movlw	65
  1378  000B64  6E06               	movwf	(___ftge@ff2+2)^0,c
  1379  000B66  EC74  F010         	call	___ftge	;wreg free
  1380  000B6A  A0D8               	btfss	status,0,c
  1381  000B6C  D003               	goto	l3029
  1382                           
  1383                           ;doprnt.c: 877: eexp++;
  1384  000B6E  0100               	movlb	0	; () banked
  1385  000B70  4B71               	infsnz	printf@eexp& (0+255),f,b
  1386  000B72  2B72               	incf	(printf@eexp+1)& (0+255),f,b
  1387  000B74                     l3029:
  1388                           
  1389                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  1390  000B74  0100               	movlb	0	; () banked
  1391  000B76  BF77               	btfsc	(printf@prec+1)& (0+255),7,b
  1392  000B78  D006               	goto	u3080
  1393  000B7A  5177               	movf	(printf@prec+1)& (0+255),w,b
  1394  000B7C  E11B               	bnz	l3033
  1395  000B7E  0E0D               	movlw	13
  1396  000B80  5D76               	subwf	printf@prec& (0+255),w,b
  1397  000B82  B0D8               	btfsc	status,0,c
  1398  000B84  D017               	goto	l3033
  1399  000B86                     u3080:
  1400                           
  1401                           ; BSR set to: 0
  1402                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  1403  000B86  C073  F034         	movff	printf@fval,___ftadd@f1
  1404  000B8A  C074  F035         	movff	printf@fval+1,___ftadd@f1+1
  1405  000B8E  C075  F036         	movff	printf@fval+2,___ftadd@f1+2
  1406  000B92  5176               	movf	printf@prec& (0+255),w,b
  1407  000B94  EC29  F00A         	call	_fround
  1408  000B98  C02A  F037         	movff	?_fround,___ftadd@f2
  1409  000B9C  C02B  F038         	movff	?_fround+1,___ftadd@f2+1
  1410  000BA0  C02C  F039         	movff	?_fround+2,___ftadd@f2+2
  1411  000BA4  EC31  F00C         	call	___ftadd	;wreg free
  1412  000BA8  C034  F073         	movff	?___ftadd,printf@fval
  1413  000BAC  C035  F074         	movff	?___ftadd+1,printf@fval+1
  1414  000BB0  C036  F075         	movff	?___ftadd+2,printf@fval+2
  1415  000BB4                     l3033:
  1416                           
  1417                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1418  000BB4  0100               	movlb	0	; () banked
  1419  000BB6  BF72               	btfsc	(printf@eexp+1)& (0+255),7,b
  1420  000BB8  D006               	goto	u3090
  1421  000BBA  5172               	movf	(printf@eexp+1)& (0+255),w,b
  1422  000BBC  E120               	bnz	l3041
  1423  000BBE  0E0A               	movlw	10
  1424  000BC0  5D71               	subwf	printf@eexp& (0+255),w,b
  1425  000BC2  B0D8               	btfsc	status,0,c
  1426  000BC4  D01C               	goto	u3120
  1427  000BC6                     u3090:
  1428                           
  1429                           ; BSR set to: 0
  1430  000BC6  5173               	movf	printf@fval& (0+255),w,b
  1431  000BC8  1174               	iorwf	(printf@fval+1)& (0+255),w,b
  1432  000BCA  1175               	iorwf	(printf@fval+2)& (0+255),w,b
  1433  000BCC  B4D8               	btfsc	status,2,c
  1434  000BCE  D056               	goto	l3055
  1435                           
  1436                           ; BSR set to: 0
  1437  000BD0  C073  F031         	movff	printf@fval,___fttol@f1
  1438  000BD4  C074  F032         	movff	printf@fval+1,___fttol@f1+1
  1439  000BD8  C075  F033         	movff	printf@fval+2,___fttol@f1+2
  1440  000BDC  ECEB  F00E         	call	___fttol	;wreg free
  1441  000BE0  5031               	movf	?___fttol^0,w,c
  1442  000BE2  1032               	iorwf	(?___fttol+1)^0,w,c
  1443  000BE4  1033               	iorwf	(?___fttol+2)^0,w,c
  1444  000BE6  1034               	iorwf	(?___fttol+3)^0,w,c
  1445  000BE8  A4D8               	btfss	status,2,c
  1446  000BEA  D048               	goto	l3055
  1447  000BEC  0100               	movlb	0	; () banked
  1448  000BEE  BF72               	btfsc	(printf@eexp+1)& (0+255),7,b
  1449  000BF0  D045               	goto	l3055
  1450  000BF2  5172               	movf	(printf@eexp+1)& (0+255),w,b
  1451  000BF4  E104               	bnz	u3120
  1452  000BF6  0E02               	movlw	2
  1453  000BF8  5D71               	subwf	printf@eexp& (0+255),w,b
  1454  000BFA  A0D8               	btfss	status,0,c
  1455  000BFC  D03F               	goto	l3055
  1456  000BFE                     u3120:
  1457  000BFE                     l3041:
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  1461  000BFE  C06D  F001         	movff	printf@tmpval,___ftge@ff1
  1462  000C02  C06E  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1463  000C06  C06F  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1464  000C0A  0E70               	movlw	112
  1465  000C0C  6E04               	movwf	___ftge@ff2^0,c
  1466  000C0E  0E89               	movlw	137
  1467  000C10  6E05               	movwf	(___ftge@ff2+1)^0,c
  1468  000C12  0E40               	movlw	64
  1469  000C14  6E06               	movwf	(___ftge@ff2+2)^0,c
  1470  000C16  EC74  F010         	call	___ftge	;wreg free
  1471  000C1A  B0D8               	btfsc	status,0,c
  1472  000C1C  D003               	goto	l3045
  1473                           
  1474                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1475  000C1E  0100               	movlb	0	; () banked
  1476  000C20  0EF7               	movlw	247
  1477  000C22  D002               	goto	L1
  1478  000C24                     l3045:
  1479                           
  1480                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1481  000C24  0100               	movlb	0	; () banked
  1482  000C26  0EF8               	movlw	248
  1483  000C28                     L1:
  1484  000C28  2771               	addwf	printf@eexp& (0+255),f,b
  1485  000C2A  0EFF               	movlw	255
  1486  000C2C  2372               	addwfc	(printf@eexp+1)& (0+255),f,b
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;doprnt.c: 1150: };doprnt.c: 1151: tmpval.integ = scale(eexp);
  1490  000C2E  5171               	movf	printf@eexp& (0+255),w,b
  1491  000C30  EC75  F008         	call	_scale
  1492  000C34  C02A  F06D         	movff	?_scale,printf@tmpval
  1493  000C38  C02B  F06E         	movff	?_scale+1,printf@tmpval+1
  1494  000C3C  C02C  F06F         	movff	?_scale+2,printf@tmpval+2
  1495                           
  1496                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1497  000C40  C073  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1498  000C44  C074  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1499  000C48  C075  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1500  000C4C  C06D  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1501  000C50  C06E  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1502  000C54  C06F  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1503  000C58  EC05  F00D         	call	__tdiv_to_l_	;wreg free
  1504  000C5C  C001  F065         	movff	?__tdiv_to_l_,printf@val
  1505  000C60  C002  F066         	movff	?__tdiv_to_l_+1,printf@val+1
  1506  000C64  C003  F067         	movff	?__tdiv_to_l_+2,printf@val+2
  1507  000C68  C004  F068         	movff	?__tdiv_to_l_+3,printf@val+3
  1508                           
  1509                           ;doprnt.c: 1155: fval = 0.0;
  1510  000C6C  0E00               	movlw	0
  1511  000C6E  0100               	movlb	0	; () banked
  1512  000C70  6F73               	movwf	printf@fval& (0+255),b
  1513  000C72  0E00               	movlw	0
  1514  000C74  6F74               	movwf	(printf@fval+1)& (0+255),b
  1515  000C76  0E00               	movlw	0
  1516  000C78  6F75               	movwf	(printf@fval+2)& (0+255),b
  1517                           
  1518                           ;doprnt.c: 1156: } else {
  1519  000C7A  D033               	goto	l3059
  1520  000C7C                     l3055:
  1521                           
  1522                           ;doprnt.c: 1157: val = (unsigned long)fval;
  1523  000C7C  C073  F031         	movff	printf@fval,___fttol@f1
  1524  000C80  C074  F032         	movff	printf@fval+1,___fttol@f1+1
  1525  000C84  C075  F033         	movff	printf@fval+2,___fttol@f1+2
  1526  000C88  ECEB  F00E         	call	___fttol	;wreg free
  1527  000C8C  C031  F065         	movff	?___fttol,printf@val
  1528  000C90  C032  F066         	movff	?___fttol+1,printf@val+1
  1529  000C94  C033  F067         	movff	?___fttol+2,printf@val+2
  1530  000C98  C034  F068         	movff	?___fttol+3,printf@val+3
  1531                           
  1532                           ;doprnt.c: 1158: fval -= (double)val;
  1533  000C9C  C073  F040         	movff	printf@fval,___ftsub@f1
  1534  000CA0  C074  F041         	movff	printf@fval+1,___ftsub@f1+1
  1535  000CA4  C075  F042         	movff	printf@fval+2,___ftsub@f1+2
  1536  000CA8  C065  F009         	movff	printf@val,___lltoft@c
  1537  000CAC  C066  F00A         	movff	printf@val+1,___lltoft@c+1
  1538  000CB0  C067  F00B         	movff	printf@val+2,___lltoft@c+2
  1539  000CB4  C068  F00C         	movff	printf@val+3,___lltoft@c+3
  1540  000CB8  EC50  F011         	call	___lltoft	;wreg free
  1541  000CBC  C009  F043         	movff	?___lltoft,___ftsub@f2
  1542  000CC0  C00A  F044         	movff	?___lltoft+1,___ftsub@f2+1
  1543  000CC4  C00B  F045         	movff	?___lltoft+2,___ftsub@f2+2
  1544  000CC8  ECF1  F011         	call	___ftsub	;wreg free
  1545  000CCC  C040  F073         	movff	?___ftsub,printf@fval
  1546  000CD0  C041  F074         	movff	?___ftsub+1,printf@fval+1
  1547  000CD4  C042  F075         	movff	?___ftsub+2,printf@fval+2
  1548                           
  1549                           ;doprnt.c: 1159: eexp = 0;
  1550  000CD8  0E00               	movlw	0
  1551  000CDA  0100               	movlb	0	; () banked
  1552  000CDC  6F72               	movwf	(printf@eexp+1)& (0+255),b
  1553  000CDE  0E00               	movlw	0
  1554  000CE0  6F71               	movwf	printf@eexp& (0+255),b
  1555  000CE2                     l3059:
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  1559  000CE2  0E01               	movlw	1
  1560  000CE4  6F78               	movwf	printf@c& (0+255),b
  1561  000CE6                     l3065:
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;doprnt.c: 1163: if(val < dpowers[c])
  1565  000CE6  5178               	movf	printf@c& (0+255),w,b
  1566  000CE8  0D04               	mullw	4
  1567  000CEA  0E4F               	movlw	low _dpowers
  1568  000CEC  24F3               	addwf	243,w,c
  1569  000CEE  6EF6               	movwf	tblptrl,c
  1570  000CF0  0E08               	movlw	high _dpowers
  1571  000CF2  20F4               	addwfc	244,w,c
  1572  000CF4  6EF7               	movwf	tblptrh,c
  1573  000CF6                     	if	0	;There are less than 3 active tblptr bytes
  1574  000CF6                     	endif
  1575  000CF6  0009               	tblrd		*+
  1576  000CF8  50F5               	movf	tablat,w,c
  1577  000CFA  5D65               	subwf	printf@val& (0+255),w,b
  1578  000CFC  0009               	tblrd		*+
  1579  000CFE  50F5               	movf	tablat,w,c
  1580  000D00  5966               	subwfb	(printf@val+1)& (0+255),w,b
  1581  000D02  0009               	tblrd		*+
  1582  000D04  50F5               	movf	tablat,w,c
  1583  000D06  5967               	subwfb	(printf@val+2)& (0+255),w,b
  1584  000D08  0009               	tblrd		*+
  1585  000D0A  50F5               	movf	tablat,w,c
  1586  000D0C  5968               	subwfb	(printf@val+3)& (0+255),w,b
  1587  000D0E  A0D8               	btfss	status,0,c
  1588  000D10  D005               	goto	u3150
  1589                           
  1590                           ; BSR set to: 0
  1591  000D12  2B78               	incf	printf@c& (0+255),f,b
  1592                           
  1593                           ; BSR set to: 0
  1594  000D14  0E0A               	movlw	10
  1595  000D16  1978               	xorwf	printf@c& (0+255),w,b
  1596  000D18  A4D8               	btfss	status,2,c
  1597  000D1A  D7E5               	goto	l3065
  1598  000D1C                     u3150:
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;doprnt.c: 1168: width -= prec + c + eexp;
  1602  000D1C  5178               	movf	printf@c& (0+255),w,b
  1603  000D1E  2576               	addwf	printf@prec& (0+255),w,b
  1604  000D20  6E4B               	movwf	??_printf^0,c
  1605  000D22  0E00               	movlw	0
  1606  000D24  2177               	addwfc	(printf@prec+1)& (0+255),w,b
  1607  000D26  6E4C               	movwf	(??_printf+1)^0,c
  1608  000D28  5171               	movf	printf@eexp& (0+255),w,b
  1609  000D2A  264B               	addwf	??_printf^0,f,c
  1610  000D2C  5172               	movf	(printf@eexp+1)& (0+255),w,b
  1611  000D2E  224C               	addwfc	(??_printf+1)^0,f,c
  1612  000D30  504B               	movf	??_printf^0,w,c
  1613  000D32  5F6B               	subwf	printf@width& (0+255),f,b
  1614  000D34  504C               	movf	(??_printf+1)^0,w,c
  1615  000D36  5B6C               	subwfb	(printf@width+1)& (0+255),f,b
  1616                           
  1617                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  1618  000D38  5176               	movf	printf@prec& (0+255),w,b
  1619  000D3A  1177               	iorwf	(printf@prec+1)& (0+255),w,b
  1620  000D3C  B4D8               	btfsc	status,2,c
  1621  000D3E  D003               	goto	l3077
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;doprnt.c: 1174: width--;
  1625  000D40  076B               	decf	printf@width& (0+255),f,b
  1626  000D42  A0D8               	btfss	status,0,c
  1627  000D44  076C               	decf	(printf@width+1)& (0+255),f,b
  1628  000D46                     l3077:
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;doprnt.c: 1175: if(flag & 0x03)
  1632  000D46  0E03               	movlw	3
  1633  000D48  1569               	andwf	printf@flag& (0+255),w,b
  1634  000D4A  6E4B               	movwf	??_printf^0,c
  1635  000D4C  0E00               	movlw	0
  1636  000D4E  156A               	andwf	(printf@flag+1)& (0+255),w,b
  1637  000D50  6E4C               	movwf	(??_printf+1)^0,c
  1638  000D52  504B               	movf	??_printf^0,w,c
  1639  000D54  104C               	iorwf	(??_printf+1)^0,w,c
  1640  000D56  B4D8               	btfsc	status,2,c
  1641  000D58  D009               	goto	l3085
  1642  000D5A                     u3170:
  1643                           
  1644                           ;doprnt.c: 1176: width--;
  1645  000D5A  0100               	movlb	0	; () banked
  1646  000D5C  076B               	decf	printf@width& (0+255),f,b
  1647  000D5E  A0D8               	btfss	status,0,c
  1648  000D60  076C               	decf	(printf@width+1)& (0+255),f,b
  1649  000D62  D004               	goto	l3085
  1650  000D64                     l3081:
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;doprnt.c: 1207: (putch(' ') );
  1654  000D64  0E20               	movlw	32
  1655  000D66  EC9A  F012         	call	_putch
  1656  000D6A  D7F7               	goto	u3170
  1657  000D6C                     l3085:
  1658                           
  1659                           ; BSR set to: 0
  1660  000D6C  BF6C               	btfsc	(printf@width+1)& (0+255),7,b
  1661  000D6E  D005               	goto	u3180
  1662  000D70  516C               	movf	(printf@width+1)& (0+255),w,b
  1663  000D72  E1F8               	bnz	l3081
  1664  000D74  056B               	decf	printf@width& (0+255),w,b
  1665  000D76  B0D8               	btfsc	status,0,c
  1666  000D78  D7F5               	goto	l3081
  1667  000D7A                     u3180:
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  1671  000D7A  0E03               	movlw	3
  1672  000D7C  1569               	andwf	printf@flag& (0+255),w,b
  1673  000D7E  6E4B               	movwf	??_printf^0,c
  1674  000D80  0E00               	movlw	0
  1675  000D82  156A               	andwf	(printf@flag+1)& (0+255),w,b
  1676  000D84  6E4C               	movwf	(??_printf+1)^0,c
  1677  000D86  504B               	movf	??_printf^0,w,c
  1678  000D88  104C               	iorwf	(??_printf+1)^0,w,c
  1679  000D8A  B4D8               	btfsc	status,2,c
  1680  000D8C  D049               	goto	l3097
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;doprnt.c: 1216: (putch('-') );
  1684  000D8E  0E2D               	movlw	45
  1685  000D90  EC9A  F012         	call	_putch
  1686  000D94  D045               	goto	l3097
  1687  000D96                     l3091:
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  1691  000D96  C065  F001         	movff	printf@val,___lldiv@dividend
  1692  000D9A  C066  F002         	movff	printf@val+1,___lldiv@dividend+1
  1693  000D9E  C067  F003         	movff	printf@val+2,___lldiv@dividend+2
  1694  000DA2  C068  F004         	movff	printf@val+3,___lldiv@dividend+3
  1695  000DA6  5178               	movf	printf@c& (0+255),w,b
  1696  000DA8  0D04               	mullw	4
  1697  000DAA  0E4F               	movlw	low _dpowers
  1698  000DAC  24F3               	addwf	243,w,c
  1699  000DAE  6EF6               	movwf	tblptrl,c
  1700  000DB0  0E08               	movlw	high _dpowers
  1701  000DB2  20F4               	addwfc	244,w,c
  1702  000DB4  6EF7               	movwf	tblptrh,c
  1703  000DB6                     	if	0	;There are less than 3 active tblptr bytes
  1704  000DB6                     	endif
  1705  000DB6  0009               	tblrd		*+
  1706  000DB8  CFF5 F005          	movff	tablat,___lldiv@divisor
  1707  000DBC  0009               	tblrd		*+
  1708  000DBE  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1709  000DC2  0009               	tblrd		*+
  1710  000DC4  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1711  000DC8  000A               	tblrd		*-
  1712  000DCA  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1713  000DCE  EC33  F010         	call	___lldiv	;wreg free
  1714  000DD2  C001  F06D         	movff	?___lldiv,printf@tmpval
  1715  000DD6  C002  F06E         	movff	?___lldiv+1,printf@tmpval+1
  1716  000DDA  C003  F06F         	movff	?___lldiv+2,printf@tmpval+2
  1717  000DDE  C004  F070         	movff	?___lldiv+3,printf@tmpval+3
  1718                           
  1719                           ;doprnt.c: 1228: tmpval.vd %= 10;
  1720  000DE2  C06D  F001         	movff	printf@tmpval,___llmod@dividend
  1721  000DE6  C06E  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1722  000DEA  C06F  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1723  000DEE  C070  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1724  000DF2  0E0A               	movlw	10
  1725  000DF4  6E05               	movwf	___llmod@divisor^0,c
  1726  000DF6  0E00               	movlw	0
  1727  000DF8  6E06               	movwf	(___llmod@divisor+1)^0,c
  1728  000DFA  0E00               	movlw	0
  1729  000DFC  6E07               	movwf	(___llmod@divisor+2)^0,c
  1730  000DFE  0E00               	movlw	0
  1731  000E00  6E08               	movwf	(___llmod@divisor+3)^0,c
  1732  000E02  EC1D  F011         	call	___llmod	;wreg free
  1733  000E06  C001  F06D         	movff	?___llmod,printf@tmpval
  1734  000E0A  C002  F06E         	movff	?___llmod+1,printf@tmpval+1
  1735  000E0E  C003  F06F         	movff	?___llmod+2,printf@tmpval+2
  1736  000E12  C004  F070         	movff	?___llmod+3,printf@tmpval+3
  1737                           
  1738                           ;doprnt.c: 1229: (putch('0' + tmpval.vd) );
  1739  000E16  0100               	movlb	0	; () banked
  1740  000E18  516D               	movf	printf@tmpval& (0+255),w,b
  1741  000E1A  0F30               	addlw	48
  1742  000E1C  EC9A  F012         	call	_putch
  1743  000E20                     l3097:
  1744  000E20  0100               	movlb	0	; () banked
  1745  000E22  0778               	decf	printf@c& (0+255),f,b
  1746  000E24  2978               	incf	printf@c& (0+255),w,b
  1747  000E26  B4D8               	btfsc	status,2,c
  1748  000E28  D008               	goto	l3103
  1749  000E2A  D7B5               	goto	l3091
  1750  000E2C                     l3099:
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;doprnt.c: 1234: (putch('0') );
  1754  000E2C  0E30               	movlw	48
  1755  000E2E  EC9A  F012         	call	_putch
  1756                           
  1757                           ;doprnt.c: 1235: eexp--;
  1758  000E32  0100               	movlb	0	; () banked
  1759  000E34  0771               	decf	printf@eexp& (0+255),f,b
  1760  000E36  A0D8               	btfss	status,0,c
  1761  000E38  0772               	decf	(printf@eexp+1)& (0+255),f,b
  1762  000E3A                     l3103:
  1763                           
  1764                           ; BSR set to: 0
  1765  000E3A  BF72               	btfsc	(printf@eexp+1)& (0+255),7,b
  1766  000E3C  D005               	goto	u3210
  1767  000E3E  5172               	movf	(printf@eexp+1)& (0+255),w,b
  1768  000E40  E1F5               	bnz	l3099
  1769  000E42  0571               	decf	printf@eexp& (0+255),w,b
  1770  000E44  B0D8               	btfsc	status,0,c
  1771  000E46  D7F2               	goto	l3099
  1772  000E48                     u3210:
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  1776  000E48  BF77               	btfsc	(printf@prec+1)& (0+255),7,b
  1777  000E4A  D009               	goto	l226
  1778  000E4C  5177               	movf	(printf@prec+1)& (0+255),w,b
  1779  000E4E  E104               	bnz	u3220
  1780  000E50  0E09               	movlw	9
  1781  000E52  5D76               	subwf	printf@prec& (0+255),w,b
  1782  000E54  A0D8               	btfss	status,0,c
  1783  000E56  D003               	goto	l226
  1784  000E58                     u3220:
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1788  000E58  0E08               	movlw	8
  1789  000E5A  6F78               	movwf	printf@c& (0+255),b
  1790  000E5C  D002               	goto	l3109
  1791  000E5E                     l226:
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  1795  000E5E  C076  F078         	movff	printf@prec,printf@c
  1796  000E62                     l3109:
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;doprnt.c: 1241: prec -= (int)c;
  1800  000E62  5178               	movf	printf@c& (0+255),w,b
  1801  000E64  5F76               	subwf	printf@prec& (0+255),f,b
  1802  000E66  0E00               	movlw	0
  1803  000E68  5B77               	subwfb	(printf@prec+1)& (0+255),f,b
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;doprnt.c: 1245: if(c)
  1807  000E6A  5178               	movf	printf@c& (0+255),w,b
  1808  000E6C  B4D8               	btfsc	status,2,c
  1809  000E6E  D003               	goto	l3115
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;doprnt.c: 1247: (putch('.') );
  1813  000E70  0E2E               	movlw	46
  1814  000E72  EC9A  F012         	call	_putch
  1815  000E76                     l3115:
  1816                           
  1817                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  1818  000E76  0100               	movlb	0	; () banked
  1819  000E78  5178               	movf	printf@c& (0+255),w,b
  1820  000E7A  EC75  F008         	call	_scale
  1821  000E7E  C02A  F060         	movff	?_scale,_printf$1102
  1822  000E82  C02B  F061         	movff	?_scale+1,_printf$1102+1
  1823  000E86  C02C  F062         	movff	?_scale+2,_printf$1102+2
  1824                           
  1825                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  1826  000E8A  C073  F01E         	movff	printf@fval,___ftmul@f2
  1827  000E8E  C074  F01F         	movff	printf@fval+1,___ftmul@f2+1
  1828  000E92  C075  F020         	movff	printf@fval+2,___ftmul@f2+2
  1829  000E96  C060  F01B         	movff	_printf$1102,___ftmul@f1
  1830  000E9A  C061  F01C         	movff	_printf$1102+1,___ftmul@f1+1
  1831  000E9E  C062  F01D         	movff	_printf$1102+2,___ftmul@f1+2
  1832  000EA2  ECFE  F00D         	call	___ftmul	;wreg free
  1833  000EA6  C01B  F031         	movff	?___ftmul,___fttol@f1
  1834  000EAA  C01C  F032         	movff	?___ftmul+1,___fttol@f1+1
  1835  000EAE  C01D  F033         	movff	?___ftmul+2,___fttol@f1+2
  1836  000EB2  ECEB  F00E         	call	___fttol	;wreg free
  1837  000EB6  C031  F065         	movff	?___fttol,printf@val
  1838  000EBA  C032  F066         	movff	?___fttol+1,printf@val+1
  1839  000EBE  C033  F067         	movff	?___fttol+2,printf@val+2
  1840  000EC2  C034  F068         	movff	?___fttol+3,printf@val+3
  1841                           
  1842                           ;doprnt.c: 1254: while(c--) {
  1843  000EC6  D06C               	goto	l3125
  1844  000EC8                     l3119:
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  1848  000EC8  C065  F001         	movff	printf@val,___lldiv@dividend
  1849  000ECC  C066  F002         	movff	printf@val+1,___lldiv@dividend+1
  1850  000ED0  C067  F003         	movff	printf@val+2,___lldiv@dividend+2
  1851  000ED4  C068  F004         	movff	printf@val+3,___lldiv@dividend+3
  1852  000ED8  5178               	movf	printf@c& (0+255),w,b
  1853  000EDA  0D04               	mullw	4
  1854  000EDC  0E4F               	movlw	low _dpowers
  1855  000EDE  24F3               	addwf	243,w,c
  1856  000EE0  6EF6               	movwf	tblptrl,c
  1857  000EE2  0E08               	movlw	high _dpowers
  1858  000EE4  20F4               	addwfc	244,w,c
  1859  000EE6  6EF7               	movwf	tblptrh,c
  1860  000EE8                     	if	0	;There are less than 3 active tblptr bytes
  1861  000EE8                     	endif
  1862  000EE8  0009               	tblrd		*+
  1863  000EEA  CFF5 F005          	movff	tablat,___lldiv@divisor
  1864  000EEE  0009               	tblrd		*+
  1865  000EF0  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1866  000EF4  0009               	tblrd		*+
  1867  000EF6  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1868  000EFA  000A               	tblrd		*-
  1869  000EFC  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1870  000F00  EC33  F010         	call	___lldiv	;wreg free
  1871  000F04  C001  F06D         	movff	?___lldiv,printf@tmpval
  1872  000F08  C002  F06E         	movff	?___lldiv+1,printf@tmpval+1
  1873  000F0C  C003  F06F         	movff	?___lldiv+2,printf@tmpval+2
  1874  000F10  C004  F070         	movff	?___lldiv+3,printf@tmpval+3
  1875                           
  1876                           ;doprnt.c: 1256: tmpval.vd %= 10;
  1877  000F14  C06D  F001         	movff	printf@tmpval,___llmod@dividend
  1878  000F18  C06E  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1879  000F1C  C06F  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1880  000F20  C070  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1881  000F24  0E0A               	movlw	10
  1882  000F26  6E05               	movwf	___llmod@divisor^0,c
  1883  000F28  0E00               	movlw	0
  1884  000F2A  6E06               	movwf	(___llmod@divisor+1)^0,c
  1885  000F2C  0E00               	movlw	0
  1886  000F2E  6E07               	movwf	(___llmod@divisor+2)^0,c
  1887  000F30  0E00               	movlw	0
  1888  000F32  6E08               	movwf	(___llmod@divisor+3)^0,c
  1889  000F34  EC1D  F011         	call	___llmod	;wreg free
  1890  000F38  C001  F06D         	movff	?___llmod,printf@tmpval
  1891  000F3C  C002  F06E         	movff	?___llmod+1,printf@tmpval+1
  1892  000F40  C003  F06F         	movff	?___llmod+2,printf@tmpval+2
  1893  000F44  C004  F070         	movff	?___llmod+3,printf@tmpval+3
  1894                           
  1895                           ;doprnt.c: 1257: (putch('0' + tmpval.vd) );
  1896  000F48  0100               	movlb	0	; () banked
  1897  000F4A  516D               	movf	printf@tmpval& (0+255),w,b
  1898  000F4C  0F30               	addlw	48
  1899  000F4E  EC9A  F012         	call	_putch
  1900                           
  1901                           ;doprnt.c: 1258: val %= dpowers[c];
  1902  000F52  C065  F001         	movff	printf@val,___llmod@dividend
  1903  000F56  C066  F002         	movff	printf@val+1,___llmod@dividend+1
  1904  000F5A  C067  F003         	movff	printf@val+2,___llmod@dividend+2
  1905  000F5E  C068  F004         	movff	printf@val+3,___llmod@dividend+3
  1906  000F62  0100               	movlb	0	; () banked
  1907  000F64  5178               	movf	printf@c& (0+255),w,b
  1908  000F66  0D04               	mullw	4
  1909  000F68  0E4F               	movlw	low _dpowers
  1910  000F6A  24F3               	addwf	243,w,c
  1911  000F6C  6EF6               	movwf	tblptrl,c
  1912  000F6E  0E08               	movlw	high _dpowers
  1913  000F70  20F4               	addwfc	244,w,c
  1914  000F72  6EF7               	movwf	tblptrh,c
  1915  000F74                     	if	0	;There are less than 3 active tblptr bytes
  1916  000F74                     	endif
  1917  000F74  0009               	tblrd		*+
  1918  000F76  CFF5 F005          	movff	tablat,___llmod@divisor
  1919  000F7A  0009               	tblrd		*+
  1920  000F7C  CFF5 F006          	movff	tablat,___llmod@divisor+1
  1921  000F80  0009               	tblrd		*+
  1922  000F82  CFF5 F007          	movff	tablat,___llmod@divisor+2
  1923  000F86  000A               	tblrd		*-
  1924  000F88  CFF5 F008          	movff	tablat,___llmod@divisor+3
  1925  000F8C  EC1D  F011         	call	___llmod	;wreg free
  1926  000F90  C001  F065         	movff	?___llmod,printf@val
  1927  000F94  C002  F066         	movff	?___llmod+1,printf@val+1
  1928  000F98  C003  F067         	movff	?___llmod+2,printf@val+2
  1929  000F9C  C004  F068         	movff	?___llmod+3,printf@val+3
  1930  000FA0                     l3125:
  1931  000FA0  0100               	movlb	0	; () banked
  1932  000FA2  0778               	decf	printf@c& (0+255),f,b
  1933  000FA4  2978               	incf	printf@c& (0+255),w,b
  1934  000FA6  B4D8               	btfsc	status,2,c
  1935  000FA8  D008               	goto	l3131
  1936  000FAA  D78E               	goto	l3119
  1937  000FAC                     l3127:
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;doprnt.c: 1262: (putch('0') );
  1941  000FAC  0E30               	movlw	48
  1942  000FAE  EC9A  F012         	call	_putch
  1943                           
  1944                           ;doprnt.c: 1263: prec--;
  1945  000FB2  0100               	movlb	0	; () banked
  1946  000FB4  0776               	decf	printf@prec& (0+255),f,b
  1947  000FB6  A0D8               	btfss	status,0,c
  1948  000FB8  0777               	decf	(printf@prec+1)& (0+255),f,b
  1949  000FBA                     l3131:
  1950                           
  1951                           ; BSR set to: 0
  1952  000FBA  5176               	movf	printf@prec& (0+255),w,b
  1953  000FBC  1177               	iorwf	(printf@prec+1)& (0+255),w,b
  1954  000FBE  B4D8               	btfsc	status,2,c
  1955  000FC0  D085               	goto	l3177
  1956  000FC2  D7F4               	goto	l3127
  1957  000FC4                     l3133:
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;doprnt.c: 1272: };doprnt.c: 1316: if(prec == 0 && val == 0)
  1961  000FC4  5176               	movf	printf@prec& (0+255),w,b
  1962  000FC6  1177               	iorwf	(printf@prec+1)& (0+255),w,b
  1963  000FC8  A4D8               	btfss	status,2,c
  1964  000FCA  D008               	goto	l3139
  1965                           
  1966                           ; BSR set to: 0
  1967  000FCC  5165               	movf	printf@val& (0+255),w,b
  1968  000FCE  1166               	iorwf	(printf@val+1)& (0+255),w,b
  1969  000FD0  1167               	iorwf	(printf@val+2)& (0+255),w,b
  1970  000FD2  1168               	iorwf	(printf@val+3)& (0+255),w,b
  1971  000FD4  A4D8               	btfss	status,2,c
  1972  000FD6  D002               	goto	l3139
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;doprnt.c: 1317: prec++;
  1976  000FD8  4B76               	infsnz	printf@prec& (0+255),f,b
  1977  000FDA  2B77               	incf	(printf@prec+1)& (0+255),f,b
  1978  000FDC                     l3139:
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;doprnt.c: 1365: if(c < prec)
  1982  000FDC  5178               	movf	printf@c& (0+255),w,b
  1983  000FDE  6E4B               	movwf	??_printf^0,c
  1984  000FE0  6A4C               	clrf	(??_printf+1)^0,c
  1985  000FE2  5176               	movf	printf@prec& (0+255),w,b
  1986  000FE4  5C4B               	subwf	??_printf^0,w,c
  1987  000FE6  504C               	movf	(??_printf+1)^0,w,c
  1988  000FE8  0A80               	xorlw	128
  1989  000FEA  6E4D               	movwf	(??_printf+2)^0,c
  1990  000FEC  5177               	movf	(printf@prec+1)& (0+255),w,b
  1991  000FEE  0A80               	xorlw	128
  1992  000FF0  584D               	subwfb	(??_printf+2)^0,w,c
  1993  000FF2  B0D8               	btfsc	status,0,c
  1994  000FF4  D003               	goto	l3143
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;doprnt.c: 1366: c = (char)prec;
  1998  000FF6  C076  F078         	movff	printf@prec,printf@c
  1999  000FFA  D010               	goto	l3147
  2000  000FFC                     l3143:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;doprnt.c: 1367: else if(prec < c)
  2004  000FFC  5178               	movf	printf@c& (0+255),w,b
  2005  000FFE  6E4B               	movwf	??_printf^0,c
  2006  001000  6A4C               	clrf	(??_printf+1)^0,c
  2007  001002  504B               	movf	??_printf^0,w,c
  2008  001004  5D76               	subwf	printf@prec& (0+255),w,b
  2009  001006  5177               	movf	(printf@prec+1)& (0+255),w,b
  2010  001008  0A80               	xorlw	128
  2011  00100A  6E4D               	movwf	(??_printf+2)^0,c
  2012  00100C  504C               	movf	(??_printf+1)^0,w,c
  2013  00100E  0A80               	xorlw	128
  2014  001010  584D               	subwfb	(??_printf+2)^0,w,c
  2015  001012  B0D8               	btfsc	status,0,c
  2016  001014  D003               	goto	l3147
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;doprnt.c: 1368: prec = c;
  2020  001016  C078  F076         	movff	printf@c,printf@prec
  2021  00101A  6B77               	clrf	(printf@prec+1)& (0+255),b
  2022  00101C                     l3147:
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;doprnt.c: 1371: if(width && flag & 0x03)
  2026  00101C  516B               	movf	printf@width& (0+255),w,b
  2027  00101E  116C               	iorwf	(printf@width+1)& (0+255),w,b
  2028  001020  B4D8               	btfsc	status,2,c
  2029  001022  D00D               	goto	l3153
  2030                           
  2031                           ; BSR set to: 0
  2032  001024  0E03               	movlw	3
  2033  001026  1569               	andwf	printf@flag& (0+255),w,b
  2034  001028  6E4B               	movwf	??_printf^0,c
  2035  00102A  0E00               	movlw	0
  2036  00102C  156A               	andwf	(printf@flag+1)& (0+255),w,b
  2037  00102E  6E4C               	movwf	(??_printf+1)^0,c
  2038  001030  504B               	movf	??_printf^0,w,c
  2039  001032  104C               	iorwf	(??_printf+1)^0,w,c
  2040  001034  B4D8               	btfsc	status,2,c
  2041  001036  D003               	goto	l3153
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;doprnt.c: 1372: width--;
  2045  001038  076B               	decf	printf@width& (0+255),f,b
  2046  00103A  A0D8               	btfss	status,0,c
  2047  00103C  076C               	decf	(printf@width+1)& (0+255),f,b
  2048  00103E                     l3153:
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;doprnt.c: 1374: if(flag & 0x4000) {
  2052  00103E  AD6A               	btfss	(printf@flag+1)& (0+255),6,b
  2053  001040  D013               	goto	l3161
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;doprnt.c: 1375: if(width > prec)
  2057  001042  516B               	movf	printf@width& (0+255),w,b
  2058  001044  5D76               	subwf	printf@prec& (0+255),w,b
  2059  001046  5177               	movf	(printf@prec+1)& (0+255),w,b
  2060  001048  0A80               	xorlw	128
  2061  00104A  6E4B               	movwf	??_printf^0,c
  2062  00104C  516C               	movf	(printf@width+1)& (0+255),w,b
  2063  00104E  0A80               	xorlw	128
  2064  001050  584B               	subwfb	??_printf^0,w,c
  2065  001052  B0D8               	btfsc	status,0,c
  2066  001054  D005               	goto	l3159
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;doprnt.c: 1376: width -= prec;
  2070  001056  5176               	movf	printf@prec& (0+255),w,b
  2071  001058  5F6B               	subwf	printf@width& (0+255),f,b
  2072  00105A  5177               	movf	(printf@prec+1)& (0+255),w,b
  2073  00105C  5B6C               	subwfb	(printf@width+1)& (0+255),f,b
  2074  00105E  D004               	goto	l3161
  2075  001060                     l3159:
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  2079  001060  0E00               	movlw	0
  2080  001062  6F6C               	movwf	(printf@width+1)& (0+255),b
  2081  001064  0E00               	movlw	0
  2082  001066  6F6B               	movwf	printf@width& (0+255),b
  2083  001068                     l3161:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  2087  001068  5178               	movf	printf@c& (0+255),w,b
  2088  00106A  6E4B               	movwf	??_printf^0,c
  2089  00106C  6A4C               	clrf	(??_printf+1)^0,c
  2090  00106E  516B               	movf	printf@width& (0+255),w,b
  2091  001070  5C4B               	subwf	??_printf^0,w,c
  2092  001072  504C               	movf	(??_printf+1)^0,w,c
  2093  001074  0A80               	xorlw	128
  2094  001076  6E4D               	movwf	(??_printf+2)^0,c
  2095  001078  516C               	movf	(printf@width+1)& (0+255),w,b
  2096  00107A  0A80               	xorlw	128
  2097  00107C  584D               	subwfb	(??_printf+2)^0,w,c
  2098  00107E  B0D8               	btfsc	status,0,c
  2099  001080  D005               	goto	l3165
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;doprnt.c: 1408: width -= c;
  2103  001082  5178               	movf	printf@c& (0+255),w,b
  2104  001084  5F6B               	subwf	printf@width& (0+255),f,b
  2105  001086  0E00               	movlw	0
  2106  001088  5B6C               	subwfb	(printf@width+1)& (0+255),f,b
  2107  00108A  D004               	goto	l3167
  2108  00108C                     l3165:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  2112  00108C  0E00               	movlw	0
  2113  00108E  6F6C               	movwf	(printf@width+1)& (0+255),b
  2114  001090  0E00               	movlw	0
  2115  001092  6F6B               	movwf	printf@width& (0+255),b
  2116  001094                     l3167:
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  2120  001094  516B               	movf	printf@width& (0+255),w,b
  2121  001096  116C               	iorwf	(printf@width+1)& (0+255),w,b
  2122  001098  B4D8               	btfsc	status,2,c
  2123  00109A  D00B               	goto	u3360
  2124  00109C                     u3350:
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;doprnt.c: 1456: (putch(' ') );
  2128  00109C  0E20               	movlw	32
  2129  00109E  EC9A  F012         	call	_putch
  2130                           
  2131                           ;doprnt.c: 1457: while(--width);
  2132  0010A2  0100               	movlb	0	; () banked
  2133  0010A4  076B               	decf	printf@width& (0+255),f,b
  2134  0010A6  A0D8               	btfss	status,0,c
  2135  0010A8  076C               	decf	(printf@width+1)& (0+255),f,b
  2136  0010AA  516B               	movf	printf@width& (0+255),w,b
  2137  0010AC  116C               	iorwf	(printf@width+1)& (0+255),w,b
  2138  0010AE  A4D8               	btfss	status,2,c
  2139  0010B0  D7F5               	goto	u3350
  2140  0010B2                     u3360:
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;doprnt.c: 1464: if(flag & 0x03)
  2144  0010B2  0E03               	movlw	3
  2145  0010B4  1569               	andwf	printf@flag& (0+255),w,b
  2146  0010B6  6E4B               	movwf	??_printf^0,c
  2147  0010B8  0E00               	movlw	0
  2148  0010BA  156A               	andwf	(printf@flag+1)& (0+255),w,b
  2149  0010BC  6E4C               	movwf	(??_printf+1)^0,c
  2150  0010BE  504B               	movf	??_printf^0,w,c
  2151  0010C0  104C               	iorwf	(??_printf+1)^0,w,c
  2152  0010C2  B4D8               	btfsc	status,2,c
  2153  0010C4  D003               	goto	l3177
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;doprnt.c: 1465: (putch('-') );
  2157  0010C6  0E2D               	movlw	45
  2158  0010C8  EC9A  F012         	call	_putch
  2159  0010CC                     l3177:
  2160  0010CC  C046  FFF6         	movff	printf@f,tblptrl
  2161  0010D0  C047  FFF7         	movff	printf@f+1,tblptrh
  2162  0010D4  4A46               	infsnz	printf@f^0,f,c
  2163  0010D6  2A47               	incf	(printf@f+1)^0,f,c
  2164  0010D8                     	if	0	;tblptru may be non-zero
  2165  0010D8                     	endif
  2166  0010D8                     	if	0	;tblptru may be non-zero
  2167  0010D8                     	endif
  2168  0010D8  0008               	tblrd		*
  2169  0010DA  CFF5 F078          	movff	tablat,printf@c
  2170  0010DE  0100               	movlb	0	; () banked
  2171  0010E0  5178               	movf	printf@c& (0+255),w,b
  2172  0010E2  B4D8               	btfsc	status,2,c
  2173  0010E4  0012               	return	
  2174  0010E6  EF54  F004         	goto	l2943
  2175  0010EA                     __end_of_printf:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function _scale *****************
  2179 ;; Defined at:
  2180 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  scl             1    wreg     char 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  scl             1   47[COMRAM] char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  3   41[COMRAM] char 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2194 ;;      Params:         3       0       0       0       0       0       0       0       0
  2195 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2197 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2198 ;;Total ram usage:        7 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 2
  2201 ;; This function calls:
  2202 ;;		___awdiv
  2203 ;;		___awmod
  2204 ;;		___ftmul
  2205 ;; This function is called by:
  2206 ;;		_printf
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text2
  2211  0010EA                     __ptext2:
  2212                           	callstack 0
  2213  0010EA                     _scale:
  2214                           	callstack 27
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;incstack = 0
  2218                           ;scale@scl stored from wreg
  2219  0010EA  6E30               	movwf	scale@scl^0,c
  2220                           
  2221                           ;doprnt.c: 436: if(scl < 0) {
  2222  0010EC  AE30               	btfss	scale@scl^0,7,c
  2223  0010EE  D0D9               	goto	l2527
  2224                           
  2225                           ;doprnt.c: 437: scl = -scl;
  2226  0010F0  6C30               	negf	scale@scl^0,c
  2227                           
  2228                           ;doprnt.c: 438: if(scl>=110)
  2229  0010F2  5030               	movf	scale@scl^0,w,c
  2230  0010F4  0A80               	xorlw	128
  2231  0010F6  0F12               	addlw	-238
  2232  0010F8  A0D8               	btfss	status,0,c
  2233  0010FA  D079               	goto	l2517
  2234                           
  2235                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2236  0010FC  0E00               	movlw	0
  2237  0010FE  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2238  001100  0E0A               	movlw	10
  2239  001102  6E09               	movwf	___awdiv@divisor^0,c
  2240  001104  0E00               	movlw	0
  2241  001106  6E04               	movwf	(___awmod@divisor+1)^0,c
  2242  001108  0E64               	movlw	100
  2243  00110A  6E03               	movwf	___awmod@divisor^0,c
  2244  00110C  5030               	movf	scale@scl^0,w,c
  2245  00110E  6E01               	movwf	___awmod@dividend^0,c
  2246  001110  6A02               	clrf	(___awmod@dividend+1)^0,c
  2247  001112  BE01               	btfsc	___awmod@dividend^0,7,c
  2248  001114  0602               	decf	(___awmod@dividend+1)^0,f,c
  2249  001116  ECAE  F010         	call	___awmod	;wreg free
  2250  00111A  C001  F007         	movff	?___awmod,___awdiv@dividend
  2251  00111E  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2252  001122  ECF1  F00F         	call	___awdiv	;wreg free
  2253  001126  0E09               	movlw	9
  2254  001128  2607               	addwf	?___awdiv^0,f,c
  2255  00112A  5007               	movf	?___awdiv^0,w,c
  2256  00112C  0D03               	mullw	3
  2257  00112E  0E28               	movlw	low __npowers_
  2258  001130  24F3               	addwf	243,w,c
  2259  001132  6EF6               	movwf	tblptrl,c
  2260  001134  0E08               	movlw	high __npowers_
  2261  001136  20F4               	addwfc	244,w,c
  2262  001138  6EF7               	movwf	tblptrh,c
  2263  00113A                     	if	0	;There are less than 3 active tblptr bytes
  2264  00113A                     	endif
  2265  00113A  0009               	tblrd		*+
  2266  00113C  CFF5 F01E          	movff	tablat,___ftmul@f2
  2267  001140  0009               	tblrd		*+
  2268  001142  CFF5 F01F          	movff	tablat,___ftmul@f2+1
  2269  001146  000A               	tblrd		*-
  2270  001148  CFF5 F020          	movff	tablat,___ftmul@f2+2
  2271  00114C  0E00               	movlw	0
  2272  00114E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2273  001150  0E64               	movlw	100
  2274  001152  6E09               	movwf	___awdiv@divisor^0,c
  2275  001154  5030               	movf	scale@scl^0,w,c
  2276  001156  6E07               	movwf	___awdiv@dividend^0,c
  2277  001158  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2278  00115A  BE07               	btfsc	___awdiv@dividend^0,7,c
  2279  00115C  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2280  00115E  ECF1  F00F         	call	___awdiv	;wreg free
  2281  001162  0E12               	movlw	18
  2282  001164  2607               	addwf	?___awdiv^0,f,c
  2283  001166  5007               	movf	?___awdiv^0,w,c
  2284  001168  0D03               	mullw	3
  2285  00116A  0E28               	movlw	low __npowers_
  2286  00116C  24F3               	addwf	243,w,c
  2287  00116E  6EF6               	movwf	tblptrl,c
  2288  001170  0E08               	movlw	high __npowers_
  2289  001172  20F4               	addwfc	244,w,c
  2290  001174  6EF7               	movwf	tblptrh,c
  2291  001176                     	if	0	;There are less than 3 active tblptr bytes
  2292  001176                     	endif
  2293  001176  0009               	tblrd		*+
  2294  001178  CFF5 F01B          	movff	tablat,___ftmul@f1
  2295  00117C  0009               	tblrd		*+
  2296  00117E  CFF5 F01C          	movff	tablat,___ftmul@f1+1
  2297  001182  000A               	tblrd		*-
  2298  001184  CFF5 F01D          	movff	tablat,___ftmul@f1+2
  2299  001188  ECFE  F00D         	call	___ftmul	;wreg free
  2300  00118C  C01B  F02D         	movff	?___ftmul,_scale$1101
  2301  001190  C01C  F02E         	movff	?___ftmul+1,_scale$1101+1
  2302  001194  C01D  F02F         	movff	?___ftmul+2,_scale$1101+2
  2303                           
  2304                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2305  001198  C02D  F01B         	movff	_scale$1101,___ftmul@f1
  2306  00119C  C02E  F01C         	movff	_scale$1101+1,___ftmul@f1+1
  2307  0011A0  C02F  F01D         	movff	_scale$1101+2,___ftmul@f1+2
  2308  0011A4  0E00               	movlw	0
  2309  0011A6  6E04               	movwf	(___awmod@divisor+1)^0,c
  2310  0011A8  0E0A               	movlw	10
  2311  0011AA  6E03               	movwf	___awmod@divisor^0,c
  2312  0011AC  5030               	movf	scale@scl^0,w,c
  2313  0011AE  6E01               	movwf	___awmod@dividend^0,c
  2314  0011B0  6A02               	clrf	(___awmod@dividend+1)^0,c
  2315  0011B2  BE01               	btfsc	___awmod@dividend^0,7,c
  2316  0011B4  0602               	decf	(___awmod@dividend+1)^0,f,c
  2317  0011B6  ECAE  F010         	call	___awmod	;wreg free
  2318  0011BA  5001               	movf	?___awmod^0,w,c
  2319  0011BC  0D03               	mullw	3
  2320  0011BE  0E28               	movlw	low __npowers_
  2321  0011C0  24F3               	addwf	243,w,c
  2322  0011C2  6EF6               	movwf	tblptrl,c
  2323  0011C4  0E08               	movlw	high __npowers_
  2324  0011C6  20F4               	addwfc	244,w,c
  2325  0011C8  6EF7               	movwf	tblptrh,c
  2326  0011CA                     	if	0	;There are less than 3 active tblptr bytes
  2327  0011CA                     	endif
  2328  0011CA  0009               	tblrd		*+
  2329  0011CC  CFF5 F01E          	movff	tablat,___ftmul@f2
  2330  0011D0  0009               	tblrd		*+
  2331  0011D2  CFF5 F01F          	movff	tablat,___ftmul@f2+1
  2332  0011D6  000A               	tblrd		*-
  2333  0011D8  CFF5 F020          	movff	tablat,___ftmul@f2+2
  2334  0011DC  ECFE  F00D         	call	___ftmul	;wreg free
  2335  0011E0  C01B  F02A         	movff	?___ftmul,?_scale
  2336  0011E4  C01C  F02B         	movff	?___ftmul+1,?_scale+1
  2337  0011E8  C01D  F02C         	movff	?___ftmul+2,?_scale+2
  2338  0011EC  0012               	return	
  2339  0011EE                     l2517:
  2340                           
  2341                           ;doprnt.c: 440: else if(scl > 10)
  2342  0011EE  5030               	movf	scale@scl^0,w,c
  2343  0011F0  0A80               	xorlw	128
  2344  0011F2  0F75               	addlw	-139
  2345  0011F4  A0D8               	btfss	status,0,c
  2346  0011F6  D043               	goto	l2523
  2347                           
  2348                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  2349  0011F8  0E00               	movlw	0
  2350  0011FA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2351  0011FC  0E0A               	movlw	10
  2352  0011FE  6E09               	movwf	___awdiv@divisor^0,c
  2353  001200  5030               	movf	scale@scl^0,w,c
  2354  001202  6E07               	movwf	___awdiv@dividend^0,c
  2355  001204  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2356  001206  BE07               	btfsc	___awdiv@dividend^0,7,c
  2357  001208  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2358  00120A  ECF1  F00F         	call	___awdiv	;wreg free
  2359  00120E  0E09               	movlw	9
  2360  001210  2607               	addwf	?___awdiv^0,f,c
  2361  001212  5007               	movf	?___awdiv^0,w,c
  2362  001214  0D03               	mullw	3
  2363  001216  0E28               	movlw	low __npowers_
  2364  001218  24F3               	addwf	243,w,c
  2365  00121A  6EF6               	movwf	tblptrl,c
  2366  00121C  0E08               	movlw	high __npowers_
  2367  00121E  20F4               	addwfc	244,w,c
  2368  001220  6EF7               	movwf	tblptrh,c
  2369  001222                     	if	0	;There are less than 3 active tblptr bytes
  2370  001222                     	endif
  2371  001222  0009               	tblrd		*+
  2372  001224  CFF5 F01B          	movff	tablat,___ftmul@f1
  2373  001228  0009               	tblrd		*+
  2374  00122A  CFF5 F01C          	movff	tablat,___ftmul@f1+1
  2375  00122E  000A               	tblrd		*-
  2376  001230  CFF5 F01D          	movff	tablat,___ftmul@f1+2
  2377  001234  0E00               	movlw	0
  2378  001236  6E04               	movwf	(___awmod@divisor+1)^0,c
  2379  001238  0E0A               	movlw	10
  2380  00123A  6E03               	movwf	___awmod@divisor^0,c
  2381  00123C  5030               	movf	scale@scl^0,w,c
  2382  00123E  6E01               	movwf	___awmod@dividend^0,c
  2383  001240  6A02               	clrf	(___awmod@dividend+1)^0,c
  2384  001242  BE01               	btfsc	___awmod@dividend^0,7,c
  2385  001244  0602               	decf	(___awmod@dividend+1)^0,f,c
  2386  001246  ECAE  F010         	call	___awmod	;wreg free
  2387  00124A  5001               	movf	?___awmod^0,w,c
  2388  00124C  0D03               	mullw	3
  2389  00124E  0E28               	movlw	low __npowers_
  2390  001250  24F3               	addwf	243,w,c
  2391  001252  6EF6               	movwf	tblptrl,c
  2392  001254  0E08               	movlw	high __npowers_
  2393  001256  20F4               	addwfc	244,w,c
  2394  001258  6EF7               	movwf	tblptrh,c
  2395  00125A                     	if	0	;There are less than 3 active tblptr bytes
  2396  00125A                     	endif
  2397  00125A  0009               	tblrd		*+
  2398  00125C  CFF5 F01E          	movff	tablat,___ftmul@f2
  2399  001260  0009               	tblrd		*+
  2400  001262  CFF5 F01F          	movff	tablat,___ftmul@f2+1
  2401  001266  000A               	tblrd		*-
  2402  001268  CFF5 F020          	movff	tablat,___ftmul@f2+2
  2403  00126C  ECFE  F00D         	call	___ftmul	;wreg free
  2404  001270  C01B  F02A         	movff	?___ftmul,?_scale
  2405  001274  C01C  F02B         	movff	?___ftmul+1,?_scale+1
  2406  001278  C01D  F02C         	movff	?___ftmul+2,?_scale+2
  2407  00127C  0012               	return	
  2408  00127E                     l2523:
  2409                           
  2410                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  2411  00127E  5030               	movf	scale@scl^0,w,c
  2412  001280  0D03               	mullw	3
  2413  001282  0E28               	movlw	low __npowers_
  2414  001284  24F3               	addwf	243,w,c
  2415  001286  6EF6               	movwf	tblptrl,c
  2416  001288  0E08               	movlw	high __npowers_
  2417  00128A  20F4               	addwfc	244,w,c
  2418  00128C  6EF7               	movwf	tblptrh,c
  2419  00128E                     	if	0	;There are less than 3 active tblptr bytes
  2420  00128E                     	endif
  2421  00128E  0009               	tblrd		*+
  2422  001290  CFF5 F02A          	movff	tablat,?_scale
  2423  001294  0009               	tblrd		*+
  2424  001296  CFF5 F02B          	movff	tablat,?_scale+1
  2425  00129A  000A               	tblrd		*-
  2426  00129C  CFF5 F02C          	movff	tablat,?_scale+2
  2427  0012A0  0012               	return	
  2428  0012A2                     l2527:
  2429                           
  2430                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  2431  0012A2  5030               	movf	scale@scl^0,w,c
  2432  0012A4  0A80               	xorlw	128
  2433  0012A6  0F12               	addlw	-238
  2434  0012A8  A0D8               	btfss	status,0,c
  2435  0012AA  D079               	goto	l2535
  2436                           
  2437                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  2438  0012AC  0E00               	movlw	0
  2439  0012AE  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2440  0012B0  0E0A               	movlw	10
  2441  0012B2  6E09               	movwf	___awdiv@divisor^0,c
  2442  0012B4  0E00               	movlw	0
  2443  0012B6  6E04               	movwf	(___awmod@divisor+1)^0,c
  2444  0012B8  0E64               	movlw	100
  2445  0012BA  6E03               	movwf	___awmod@divisor^0,c
  2446  0012BC  5030               	movf	scale@scl^0,w,c
  2447  0012BE  6E01               	movwf	___awmod@dividend^0,c
  2448  0012C0  6A02               	clrf	(___awmod@dividend+1)^0,c
  2449  0012C2  BE01               	btfsc	___awmod@dividend^0,7,c
  2450  0012C4  0602               	decf	(___awmod@dividend+1)^0,f,c
  2451  0012C6  ECAE  F010         	call	___awmod	;wreg free
  2452  0012CA  C001  F007         	movff	?___awmod,___awdiv@dividend
  2453  0012CE  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2454  0012D2  ECF1  F00F         	call	___awdiv	;wreg free
  2455  0012D6  0E09               	movlw	9
  2456  0012D8  2607               	addwf	?___awdiv^0,f,c
  2457  0012DA  5007               	movf	?___awdiv^0,w,c
  2458  0012DC  0D03               	mullw	3
  2459  0012DE  0E01               	movlw	low __powers_
  2460  0012E0  24F3               	addwf	243,w,c
  2461  0012E2  6EF6               	movwf	tblptrl,c
  2462  0012E4  0E08               	movlw	high __powers_
  2463  0012E6  20F4               	addwfc	244,w,c
  2464  0012E8  6EF7               	movwf	tblptrh,c
  2465  0012EA                     	if	0	;There are less than 3 active tblptr bytes
  2466  0012EA                     	endif
  2467  0012EA  0009               	tblrd		*+
  2468  0012EC  CFF5 F01E          	movff	tablat,___ftmul@f2
  2469  0012F0  0009               	tblrd		*+
  2470  0012F2  CFF5 F01F          	movff	tablat,___ftmul@f2+1
  2471  0012F6  000A               	tblrd		*-
  2472  0012F8  CFF5 F020          	movff	tablat,___ftmul@f2+2
  2473  0012FC  0E00               	movlw	0
  2474  0012FE  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2475  001300  0E64               	movlw	100
  2476  001302  6E09               	movwf	___awdiv@divisor^0,c
  2477  001304  5030               	movf	scale@scl^0,w,c
  2478  001306  6E07               	movwf	___awdiv@dividend^0,c
  2479  001308  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2480  00130A  BE07               	btfsc	___awdiv@dividend^0,7,c
  2481  00130C  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2482  00130E  ECF1  F00F         	call	___awdiv	;wreg free
  2483  001312  0E12               	movlw	18
  2484  001314  2607               	addwf	?___awdiv^0,f,c
  2485  001316  5007               	movf	?___awdiv^0,w,c
  2486  001318  0D03               	mullw	3
  2487  00131A  0E01               	movlw	low __powers_
  2488  00131C  24F3               	addwf	243,w,c
  2489  00131E  6EF6               	movwf	tblptrl,c
  2490  001320  0E08               	movlw	high __powers_
  2491  001322  20F4               	addwfc	244,w,c
  2492  001324  6EF7               	movwf	tblptrh,c
  2493  001326                     	if	0	;There are less than 3 active tblptr bytes
  2494  001326                     	endif
  2495  001326  0009               	tblrd		*+
  2496  001328  CFF5 F01B          	movff	tablat,___ftmul@f1
  2497  00132C  0009               	tblrd		*+
  2498  00132E  CFF5 F01C          	movff	tablat,___ftmul@f1+1
  2499  001332  000A               	tblrd		*-
  2500  001334  CFF5 F01D          	movff	tablat,___ftmul@f1+2
  2501  001338  ECFE  F00D         	call	___ftmul	;wreg free
  2502  00133C  C01B  F02D         	movff	?___ftmul,_scale$1101
  2503  001340  C01C  F02E         	movff	?___ftmul+1,_scale$1101+1
  2504  001344  C01D  F02F         	movff	?___ftmul+2,_scale$1101+2
  2505                           
  2506                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  2507  001348  C02D  F01B         	movff	_scale$1101,___ftmul@f1
  2508  00134C  C02E  F01C         	movff	_scale$1101+1,___ftmul@f1+1
  2509  001350  C02F  F01D         	movff	_scale$1101+2,___ftmul@f1+2
  2510  001354  0E00               	movlw	0
  2511  001356  6E04               	movwf	(___awmod@divisor+1)^0,c
  2512  001358  0E0A               	movlw	10
  2513  00135A  6E03               	movwf	___awmod@divisor^0,c
  2514  00135C  5030               	movf	scale@scl^0,w,c
  2515  00135E  6E01               	movwf	___awmod@dividend^0,c
  2516  001360  6A02               	clrf	(___awmod@dividend+1)^0,c
  2517  001362  BE01               	btfsc	___awmod@dividend^0,7,c
  2518  001364  0602               	decf	(___awmod@dividend+1)^0,f,c
  2519  001366  ECAE  F010         	call	___awmod	;wreg free
  2520  00136A  5001               	movf	?___awmod^0,w,c
  2521  00136C  0D03               	mullw	3
  2522  00136E  0E01               	movlw	low __powers_
  2523  001370  24F3               	addwf	243,w,c
  2524  001372  6EF6               	movwf	tblptrl,c
  2525  001374  0E08               	movlw	high __powers_
  2526  001376  20F4               	addwfc	244,w,c
  2527  001378  6EF7               	movwf	tblptrh,c
  2528  00137A                     	if	0	;There are less than 3 active tblptr bytes
  2529  00137A                     	endif
  2530  00137A  0009               	tblrd		*+
  2531  00137C  CFF5 F01E          	movff	tablat,___ftmul@f2
  2532  001380  0009               	tblrd		*+
  2533  001382  CFF5 F01F          	movff	tablat,___ftmul@f2+1
  2534  001386  000A               	tblrd		*-
  2535  001388  CFF5 F020          	movff	tablat,___ftmul@f2+2
  2536  00138C  ECFE  F00D         	call	___ftmul	;wreg free
  2537  001390  C01B  F02A         	movff	?___ftmul,?_scale
  2538  001394  C01C  F02B         	movff	?___ftmul+1,?_scale+1
  2539  001398  C01D  F02C         	movff	?___ftmul+2,?_scale+2
  2540  00139C  0012               	return	
  2541  00139E                     l2535:
  2542                           
  2543                           ;doprnt.c: 446: else if(scl > 10)
  2544  00139E  5030               	movf	scale@scl^0,w,c
  2545  0013A0  0A80               	xorlw	128
  2546  0013A2  0F75               	addlw	-139
  2547  0013A4  A0D8               	btfss	status,0,c
  2548  0013A6  D043               	goto	l2541
  2549                           
  2550                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  2551  0013A8  0E00               	movlw	0
  2552  0013AA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2553  0013AC  0E0A               	movlw	10
  2554  0013AE  6E09               	movwf	___awdiv@divisor^0,c
  2555  0013B0  5030               	movf	scale@scl^0,w,c
  2556  0013B2  6E07               	movwf	___awdiv@dividend^0,c
  2557  0013B4  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2558  0013B6  BE07               	btfsc	___awdiv@dividend^0,7,c
  2559  0013B8  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2560  0013BA  ECF1  F00F         	call	___awdiv	;wreg free
  2561  0013BE  0E09               	movlw	9
  2562  0013C0  2607               	addwf	?___awdiv^0,f,c
  2563  0013C2  5007               	movf	?___awdiv^0,w,c
  2564  0013C4  0D03               	mullw	3
  2565  0013C6  0E01               	movlw	low __powers_
  2566  0013C8  24F3               	addwf	243,w,c
  2567  0013CA  6EF6               	movwf	tblptrl,c
  2568  0013CC  0E08               	movlw	high __powers_
  2569  0013CE  20F4               	addwfc	244,w,c
  2570  0013D0  6EF7               	movwf	tblptrh,c
  2571  0013D2                     	if	0	;There are less than 3 active tblptr bytes
  2572  0013D2                     	endif
  2573  0013D2  0009               	tblrd		*+
  2574  0013D4  CFF5 F01B          	movff	tablat,___ftmul@f1
  2575  0013D8  0009               	tblrd		*+
  2576  0013DA  CFF5 F01C          	movff	tablat,___ftmul@f1+1
  2577  0013DE  000A               	tblrd		*-
  2578  0013E0  CFF5 F01D          	movff	tablat,___ftmul@f1+2
  2579  0013E4  0E00               	movlw	0
  2580  0013E6  6E04               	movwf	(___awmod@divisor+1)^0,c
  2581  0013E8  0E0A               	movlw	10
  2582  0013EA  6E03               	movwf	___awmod@divisor^0,c
  2583  0013EC  5030               	movf	scale@scl^0,w,c
  2584  0013EE  6E01               	movwf	___awmod@dividend^0,c
  2585  0013F0  6A02               	clrf	(___awmod@dividend+1)^0,c
  2586  0013F2  BE01               	btfsc	___awmod@dividend^0,7,c
  2587  0013F4  0602               	decf	(___awmod@dividend+1)^0,f,c
  2588  0013F6  ECAE  F010         	call	___awmod	;wreg free
  2589  0013FA  5001               	movf	?___awmod^0,w,c
  2590  0013FC  0D03               	mullw	3
  2591  0013FE  0E01               	movlw	low __powers_
  2592  001400  24F3               	addwf	243,w,c
  2593  001402  6EF6               	movwf	tblptrl,c
  2594  001404  0E08               	movlw	high __powers_
  2595  001406  20F4               	addwfc	244,w,c
  2596  001408  6EF7               	movwf	tblptrh,c
  2597  00140A                     	if	0	;There are less than 3 active tblptr bytes
  2598  00140A                     	endif
  2599  00140A  0009               	tblrd		*+
  2600  00140C  CFF5 F01E          	movff	tablat,___ftmul@f2
  2601  001410  0009               	tblrd		*+
  2602  001412  CFF5 F01F          	movff	tablat,___ftmul@f2+1
  2603  001416  000A               	tblrd		*-
  2604  001418  CFF5 F020          	movff	tablat,___ftmul@f2+2
  2605  00141C  ECFE  F00D         	call	___ftmul	;wreg free
  2606  001420  C01B  F02A         	movff	?___ftmul,?_scale
  2607  001424  C01C  F02B         	movff	?___ftmul+1,?_scale+1
  2608  001428  C01D  F02C         	movff	?___ftmul+2,?_scale+2
  2609  00142C  0012               	return	
  2610  00142E                     l2541:
  2611                           
  2612                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  2613  00142E  5030               	movf	scale@scl^0,w,c
  2614  001430  0D03               	mullw	3
  2615  001432  0E01               	movlw	low __powers_
  2616  001434  24F3               	addwf	243,w,c
  2617  001436  6EF6               	movwf	tblptrl,c
  2618  001438  0E08               	movlw	high __powers_
  2619  00143A  20F4               	addwfc	244,w,c
  2620  00143C  6EF7               	movwf	tblptrh,c
  2621  00143E                     	if	0	;There are less than 3 active tblptr bytes
  2622  00143E                     	endif
  2623  00143E  0009               	tblrd		*+
  2624  001440  CFF5 F02A          	movff	tablat,?_scale
  2625  001444  0009               	tblrd		*+
  2626  001446  CFF5 F02B          	movff	tablat,?_scale+1
  2627  00144A  000A               	tblrd		*-
  2628  00144C  CFF5 F02C          	movff	tablat,?_scale+2
  2629  001450  0012               	return		;funcret
  2630  001452                     __end_of_scale:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function ___awmod *****************
  2634 ;; Defined at:
  2635 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  dividend        2    0[COMRAM] int 
  2638 ;;  divisor         2    2[COMRAM] int 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  sign            1    5[COMRAM] unsigned char 
  2641 ;;  counter         1    4[COMRAM] unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  2    0[COMRAM] int 
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2651 ;;      Params:         4       0       0       0       0       0       0       0       0
  2652 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2654 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2655 ;;Total ram usage:        6 bytes
  2656 ;; Hardware stack levels used: 1
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_scale
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text3
  2665  00215C                     __ptext3:
  2666                           	callstack 0
  2667  00215C                     ___awmod:
  2668                           	callstack 28
  2669                           
  2670                           ;incstack = 0
  2671  00215C  0E00               	movlw	0
  2672  00215E  6E06               	movwf	___awmod@sign^0,c
  2673  002160  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  2674  002162  D006               	goto	l2413
  2675  002164  6C01               	negf	___awmod@dividend^0,c
  2676  002166  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2677  002168  B0D8               	btfsc	status,0,c
  2678  00216A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2679  00216C  0E01               	movlw	1
  2680  00216E  6E06               	movwf	___awmod@sign^0,c
  2681  002170                     l2413:
  2682  002170  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2683  002172  D004               	goto	l2417
  2684  002174  6C03               	negf	___awmod@divisor^0,c
  2685  002176  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2686  002178  B0D8               	btfsc	status,0,c
  2687  00217A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2688  00217C                     l2417:
  2689  00217C  5003               	movf	___awmod@divisor^0,w,c
  2690  00217E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2691  002180  B4D8               	btfsc	status,2,c
  2692  002182  D018               	goto	l2433
  2693  002184  0E01               	movlw	1
  2694  002186  6E05               	movwf	___awmod@counter^0,c
  2695  002188  D004               	goto	l2423
  2696  00218A                     l2421:
  2697  00218A  90D8               	bcf	status,0,c
  2698  00218C  3603               	rlcf	___awmod@divisor^0,f,c
  2699  00218E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2700  002190  2A05               	incf	___awmod@counter^0,f,c
  2701  002192                     l2423:
  2702  002192  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2703  002194  D7FA               	goto	l2421
  2704  002196                     u2260:
  2705  002196  5003               	movf	___awmod@divisor^0,w,c
  2706  002198  5C01               	subwf	___awmod@dividend^0,w,c
  2707  00219A  5004               	movf	(___awmod@divisor+1)^0,w,c
  2708  00219C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2709  00219E  A0D8               	btfss	status,0,c
  2710  0021A0  D004               	goto	l2429
  2711  0021A2  5003               	movf	___awmod@divisor^0,w,c
  2712  0021A4  5E01               	subwf	___awmod@dividend^0,f,c
  2713  0021A6  5004               	movf	(___awmod@divisor+1)^0,w,c
  2714  0021A8  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2715  0021AA                     l2429:
  2716  0021AA  90D8               	bcf	status,0,c
  2717  0021AC  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2718  0021AE  3203               	rrcf	___awmod@divisor^0,f,c
  2719  0021B0  2E05               	decfsz	___awmod@counter^0,f,c
  2720  0021B2  D7F1               	goto	u2260
  2721  0021B4                     l2433:
  2722  0021B4  5006               	movf	___awmod@sign^0,w,c
  2723  0021B6  B4D8               	btfsc	status,2,c
  2724  0021B8  D004               	goto	l2437
  2725  0021BA  6C01               	negf	___awmod@dividend^0,c
  2726  0021BC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2727  0021BE  B0D8               	btfsc	status,0,c
  2728  0021C0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2729  0021C2                     l2437:
  2730  0021C2  C001  F001         	movff	___awmod@dividend,?___awmod
  2731  0021C6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2732  0021CA  0012               	return		;funcret
  2733  0021CC                     __end_of___awmod:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function ___awdiv *****************
  2737 ;; Defined at:
  2738 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  dividend        2    6[COMRAM] int 
  2741 ;;  divisor         2    8[COMRAM] int 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  quotient        2   12[COMRAM] int 
  2744 ;;  sign            1   11[COMRAM] unsigned char 
  2745 ;;  counter         1   10[COMRAM] unsigned char 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  2    6[COMRAM] int 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2755 ;;      Params:         4       0       0       0       0       0       0       0       0
  2756 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2758 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2759 ;;Total ram usage:        8 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_scale
  2765 ;;		_printf
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text4
  2770  001FE2                     __ptext4:
  2771                           	callstack 0
  2772  001FE2                     ___awdiv:
  2773                           	callstack 28
  2774                           
  2775                           ;incstack = 0
  2776  001FE2  0E00               	movlw	0
  2777  001FE4  6E0C               	movwf	___awdiv@sign^0,c
  2778  001FE6  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  2779  001FE8  D006               	goto	l2369
  2780  001FEA  6C09               	negf	___awdiv@divisor^0,c
  2781  001FEC  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  2782  001FEE  B0D8               	btfsc	status,0,c
  2783  001FF0  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  2784  001FF2  0E01               	movlw	1
  2785  001FF4  6E0C               	movwf	___awdiv@sign^0,c
  2786  001FF6                     l2369:
  2787  001FF6  AE08               	btfss	(___awdiv@dividend+1)^0,7,c
  2788  001FF8  D006               	goto	l2375
  2789  001FFA  6C07               	negf	___awdiv@dividend^0,c
  2790  001FFC  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  2791  001FFE  B0D8               	btfsc	status,0,c
  2792  002000  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  2793  002002  0E01               	movlw	1
  2794  002004  1A0C               	xorwf	___awdiv@sign^0,f,c
  2795  002006                     l2375:
  2796  002006  0E00               	movlw	0
  2797  002008  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  2798  00200A  0E00               	movlw	0
  2799  00200C  6E0D               	movwf	___awdiv@quotient^0,c
  2800  00200E  5009               	movf	___awdiv@divisor^0,w,c
  2801  002010  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  2802  002012  B4D8               	btfsc	status,2,c
  2803  002014  D01C               	goto	l2397
  2804  002016  0E01               	movlw	1
  2805  002018  6E0B               	movwf	___awdiv@counter^0,c
  2806  00201A  D004               	goto	l2383
  2807  00201C                     l2381:
  2808  00201C  90D8               	bcf	status,0,c
  2809  00201E  3609               	rlcf	___awdiv@divisor^0,f,c
  2810  002020  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  2811  002022  2A0B               	incf	___awdiv@counter^0,f,c
  2812  002024                     l2383:
  2813  002024  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  2814  002026  D7FA               	goto	l2381
  2815  002028                     u2200:
  2816  002028  90D8               	bcf	status,0,c
  2817  00202A  360D               	rlcf	___awdiv@quotient^0,f,c
  2818  00202C  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  2819  00202E  5009               	movf	___awdiv@divisor^0,w,c
  2820  002030  5C07               	subwf	___awdiv@dividend^0,w,c
  2821  002032  500A               	movf	(___awdiv@divisor+1)^0,w,c
  2822  002034  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  2823  002036  A0D8               	btfss	status,0,c
  2824  002038  D005               	goto	l2393
  2825  00203A  5009               	movf	___awdiv@divisor^0,w,c
  2826  00203C  5E07               	subwf	___awdiv@dividend^0,f,c
  2827  00203E  500A               	movf	(___awdiv@divisor+1)^0,w,c
  2828  002040  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  2829  002042  800D               	bsf	___awdiv@quotient^0,0,c
  2830  002044                     l2393:
  2831  002044  90D8               	bcf	status,0,c
  2832  002046  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  2833  002048  3209               	rrcf	___awdiv@divisor^0,f,c
  2834  00204A  2E0B               	decfsz	___awdiv@counter^0,f,c
  2835  00204C  D7ED               	goto	u2200
  2836  00204E                     l2397:
  2837  00204E  500C               	movf	___awdiv@sign^0,w,c
  2838  002050  B4D8               	btfsc	status,2,c
  2839  002052  D004               	goto	l2401
  2840  002054  6C0D               	negf	___awdiv@quotient^0,c
  2841  002056  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  2842  002058  B0D8               	btfsc	status,0,c
  2843  00205A  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  2844  00205C                     l2401:
  2845  00205C  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  2846  002060  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  2847  002064  0012               	return		;funcret
  2848  002066                     __end_of___awdiv:
  2849                           	callstack 0
  2850                           
  2851 ;; *************** function _putch *****************
  2852 ;; Defined at:
  2853 ;;		line 82 in file "LCD.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  dato            1    wreg     unsigned char 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  dato            1    2[COMRAM] unsigned char 
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2867 ;;      Params:         0       0       0       0       0       0       0       0       0
  2868 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2870 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2871 ;;Total ram usage:        1 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 2
  2874 ;; This function calls:
  2875 ;;		_LCD_dato
  2876 ;; This function is called by:
  2877 ;;		_printf
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text5
  2882  002534                     __ptext5:
  2883                           	callstack 0
  2884  002534                     _putch:
  2885                           	callstack 27
  2886                           
  2887                           ;incstack = 0
  2888                           ;putch@dato stored from wreg
  2889  002534  6E03               	movwf	putch@dato^0,c
  2890                           
  2891                           ;LCD.c: 83: LCD_dato(dato);
  2892  002536  5003               	movf	putch@dato^0,w,c
  2893  002538  EC8E  F012         	call	_LCD_dato
  2894  00253C  0012               	return		;funcret
  2895  00253E                     __end_of_putch:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function _isdigit *****************
  2899 ;; Defined at:
  2900 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  c               1    wreg     unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  c               1    2[COMRAM] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;		None               void
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0
  2915 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2916 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2917 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2918 ;;Total ram usage:        3 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_printf
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text6
  2928  0024D0                     __ptext6:
  2929                           	callstack 0
  2930  0024D0                     _isdigit:
  2931                           	callstack 29
  2932                           
  2933                           ;incstack = 0
  2934                           ;isdigit@c stored from wreg
  2935  0024D0  6E03               	movwf	isdigit@c^0,c
  2936  0024D2  0E00               	movlw	0
  2937  0024D4  6E02               	movwf	_isdigit$882^0,c
  2938  0024D6  0E3A               	movlw	58
  2939  0024D8  6003               	cpfslt	isdigit@c^0,c
  2940  0024DA  D005               	goto	l2553
  2941  0024DC  0E2F               	movlw	47
  2942  0024DE  6403               	cpfsgt	isdigit@c^0,c
  2943  0024E0  D002               	goto	l2553
  2944  0024E2  0E01               	movlw	1
  2945  0024E4  6E02               	movwf	_isdigit$882^0,c
  2946  0024E6                     l2553:
  2947  0024E6  C002  F001         	movff	_isdigit$882,??_isdigit
  2948  0024EA  3001               	rrcf	??_isdigit^0,w,c
  2949  0024EC  0012               	return		;funcret
  2950  0024EE                     __end_of_isdigit:
  2951                           	callstack 0
  2952                           
  2953 ;; *************** function _fround *****************
  2954 ;; Defined at:
  2955 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  prec            1    wreg     unsigned char 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  prec            1   50[COMRAM] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  3   41[COMRAM] unsigned char 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2969 ;;      Params:         3       0       0       0       0       0       0       0       0
  2970 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2972 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2973 ;;Total ram usage:       10 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; Hardware stack levels required when called: 2
  2976 ;; This function calls:
  2977 ;;		___ftmul
  2978 ;;		___lwdiv
  2979 ;;		___lwmod
  2980 ;;		___wmul
  2981 ;; This function is called by:
  2982 ;;		_printf
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text7
  2987  001452                     __ptext7:
  2988                           	callstack 0
  2989  001452                     _fround:
  2990                           	callstack 27
  2991                           
  2992                           ;incstack = 0
  2993                           ;fround@prec stored from wreg
  2994  001452  6E33               	movwf	fround@prec^0,c
  2995                           
  2996                           ;doprnt.c: 421: if(prec>=110)
  2997  001454  0E6D               	movlw	109
  2998  001456  6433               	cpfsgt	fround@prec^0,c
  2999  001458  D0A3               	goto	l2495
  3000                           
  3001                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3002  00145A  0E00               	movlw	0
  3003  00145C  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  3004  00145E  0E03               	movlw	3
  3005  001460  6E0F               	movwf	___wmul@multiplicand^0,c
  3006  001462  0E00               	movlw	0
  3007  001464  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3008  001466  0E0A               	movlw	10
  3009  001468  6E08               	movwf	___lwdiv@divisor^0,c
  3010  00146A  0E00               	movlw	0
  3011  00146C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3012  00146E  0E64               	movlw	100
  3013  001470  6E03               	movwf	___lwmod@divisor^0,c
  3014  001472  C033  F001         	movff	fround@prec,___lwmod@dividend
  3015  001476  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3016  001478  ECD0  F011         	call	___lwmod	;wreg free
  3017  00147C  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  3018  001480  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  3019  001484  EC7E  F011         	call	___lwdiv	;wreg free
  3020  001488  C006  F00D         	movff	?___lwdiv,___wmul@multiplier
  3021  00148C  C007  F00E         	movff	?___lwdiv+1,___wmul@multiplier+1
  3022  001490  EC31  F012         	call	___wmul	;wreg free
  3023  001494  0E1B               	movlw	27
  3024  001496  260D               	addwf	?___wmul^0,f,c
  3025  001498  0E00               	movlw	0
  3026  00149A  220E               	addwfc	(?___wmul+1)^0,f,c
  3027  00149C  0E28               	movlw	low __npowers_
  3028  00149E  240D               	addwf	?___wmul^0,w,c
  3029  0014A0  6EF6               	movwf	tblptrl,c
  3030  0014A2  0E08               	movlw	high __npowers_
  3031  0014A4  200E               	addwfc	(?___wmul+1)^0,w,c
  3032  0014A6  6EF7               	movwf	tblptrh,c
  3033  0014A8                     	if	0	;There are less than 3 active tblptr bytes
  3034  0014A8                     	endif
  3035  0014A8  0009               	tblrd		*+
  3036  0014AA  CFF5 F01E          	movff	tablat,___ftmul@f2
  3037  0014AE  0009               	tblrd		*+
  3038  0014B0  CFF5 F01F          	movff	tablat,___ftmul@f2+1
  3039  0014B4  000A               	tblrd		*-
  3040  0014B6  CFF5 F020          	movff	tablat,___ftmul@f2+2
  3041  0014BA  0E00               	movlw	0
  3042  0014BC  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3043  0014BE  0E64               	movlw	100
  3044  0014C0  6E08               	movwf	___lwdiv@divisor^0,c
  3045  0014C2  C033  F006         	movff	fround@prec,___lwdiv@dividend
  3046  0014C6  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  3047  0014C8  EC7E  F011         	call	___lwdiv	;wreg free
  3048  0014CC  C006  F00D         	movff	?___lwdiv,___wmul@multiplier
  3049  0014D0  C007  F00E         	movff	?___lwdiv+1,___wmul@multiplier+1
  3050  0014D4  0E00               	movlw	0
  3051  0014D6  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  3052  0014D8  0E03               	movlw	3
  3053  0014DA  6E0F               	movwf	___wmul@multiplicand^0,c
  3054  0014DC  EC31  F012         	call	___wmul	;wreg free
  3055  0014E0  0E36               	movlw	54
  3056  0014E2  260D               	addwf	?___wmul^0,f,c
  3057  0014E4  0E00               	movlw	0
  3058  0014E6  220E               	addwfc	(?___wmul+1)^0,f,c
  3059  0014E8  0E28               	movlw	low __npowers_
  3060  0014EA  240D               	addwf	?___wmul^0,w,c
  3061  0014EC  6EF6               	movwf	tblptrl,c
  3062  0014EE  0E08               	movlw	high __npowers_
  3063  0014F0  200E               	addwfc	(?___wmul+1)^0,w,c
  3064  0014F2  6EF7               	movwf	tblptrh,c
  3065  0014F4                     	if	0	;There are less than 3 active tblptr bytes
  3066  0014F4                     	endif
  3067  0014F4  0009               	tblrd		*+
  3068  0014F6  CFF5 F01B          	movff	tablat,___ftmul@f1
  3069  0014FA  0009               	tblrd		*+
  3070  0014FC  CFF5 F01C          	movff	tablat,___ftmul@f1+1
  3071  001500  000A               	tblrd		*-
  3072  001502  CFF5 F01D          	movff	tablat,___ftmul@f1+2
  3073  001506  ECFE  F00D         	call	___ftmul	;wreg free
  3074  00150A  C01B  F030         	movff	?___ftmul,_fround$1099
  3075  00150E  C01C  F031         	movff	?___ftmul+1,_fround$1099+1
  3076  001512  C01D  F032         	movff	?___ftmul+2,_fround$1099+2
  3077                           
  3078                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3079  001516  0E00               	movlw	0
  3080  001518  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  3081  00151A  0E03               	movlw	3
  3082  00151C  6E0F               	movwf	___wmul@multiplicand^0,c
  3083  00151E  0E00               	movlw	0
  3084  001520  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3085  001522  0E0A               	movlw	10
  3086  001524  6E03               	movwf	___lwmod@divisor^0,c
  3087  001526  C033  F001         	movff	fround@prec,___lwmod@dividend
  3088  00152A  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3089  00152C  ECD0  F011         	call	___lwmod	;wreg free
  3090  001530  C001  F00D         	movff	?___lwmod,___wmul@multiplier
  3091  001534  C002  F00E         	movff	?___lwmod+1,___wmul@multiplier+1
  3092  001538  EC31  F012         	call	___wmul	;wreg free
  3093  00153C  0E28               	movlw	low __npowers_
  3094  00153E  240D               	addwf	?___wmul^0,w,c
  3095  001540  6EF6               	movwf	tblptrl,c
  3096  001542  0E08               	movlw	high __npowers_
  3097  001544  200E               	addwfc	(?___wmul+1)^0,w,c
  3098  001546  6EF7               	movwf	tblptrh,c
  3099  001548                     	if	0	;There are less than 3 active tblptr bytes
  3100  001548                     	endif
  3101  001548  0009               	tblrd		*+
  3102  00154A  CFF5 F01E          	movff	tablat,___ftmul@f2
  3103  00154E  0009               	tblrd		*+
  3104  001550  CFF5 F01F          	movff	tablat,___ftmul@f2+1
  3105  001554  000A               	tblrd		*-
  3106  001556  CFF5 F020          	movff	tablat,___ftmul@f2+2
  3107  00155A  C030  F01B         	movff	_fround$1099,___ftmul@f1
  3108  00155E  C031  F01C         	movff	_fround$1099+1,___ftmul@f1+1
  3109  001562  C032  F01D         	movff	_fround$1099+2,___ftmul@f1+2
  3110  001566  ECFE  F00D         	call	___ftmul	;wreg free
  3111  00156A  C01B  F02D         	movff	?___ftmul,_fround$1100
  3112  00156E  C01C  F02E         	movff	?___ftmul+1,_fround$1100+1
  3113  001572  C01D  F02F         	movff	?___ftmul+2,_fround$1100+2
  3114                           
  3115                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3116  001576  C02D  F01B         	movff	_fround$1100,___ftmul@f1
  3117  00157A  C02E  F01C         	movff	_fround$1100+1,___ftmul@f1+1
  3118  00157E  C02F  F01D         	movff	_fround$1100+2,___ftmul@f1+2
  3119  001582  0E00               	movlw	0
  3120  001584  6E1E               	movwf	___ftmul@f2^0,c
  3121  001586  0E00               	movlw	0
  3122  001588  6E1F               	movwf	(___ftmul@f2+1)^0,c
  3123  00158A  0E3F               	movlw	63
  3124  00158C  6E20               	movwf	(___ftmul@f2+2)^0,c
  3125  00158E  ECFE  F00D         	call	___ftmul	;wreg free
  3126  001592  C01B  F02A         	movff	?___ftmul,?_fround
  3127  001596  C01C  F02B         	movff	?___ftmul+1,?_fround+1
  3128  00159A  C01D  F02C         	movff	?___ftmul+2,?_fround+2
  3129  00159E  0012               	return	
  3130  0015A0                     l2495:
  3131                           
  3132                           ;doprnt.c: 423: else if(prec > 10)
  3133  0015A0  0E0A               	movlw	10
  3134  0015A2  6433               	cpfsgt	fround@prec^0,c
  3135  0015A4  D065               	goto	l2503
  3136                           
  3137                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3138  0015A6  0E00               	movlw	0
  3139  0015A8  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  3140  0015AA  0E03               	movlw	3
  3141  0015AC  6E0F               	movwf	___wmul@multiplicand^0,c
  3142  0015AE  0E00               	movlw	0
  3143  0015B0  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3144  0015B2  0E0A               	movlw	10
  3145  0015B4  6E03               	movwf	___lwmod@divisor^0,c
  3146  0015B6  C033  F001         	movff	fround@prec,___lwmod@dividend
  3147  0015BA  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3148  0015BC  ECD0  F011         	call	___lwmod	;wreg free
  3149  0015C0  C001  F00D         	movff	?___lwmod,___wmul@multiplier
  3150  0015C4  C002  F00E         	movff	?___lwmod+1,___wmul@multiplier+1
  3151  0015C8  EC31  F012         	call	___wmul	;wreg free
  3152  0015CC  0E28               	movlw	low __npowers_
  3153  0015CE  240D               	addwf	?___wmul^0,w,c
  3154  0015D0  6EF6               	movwf	tblptrl,c
  3155  0015D2  0E08               	movlw	high __npowers_
  3156  0015D4  200E               	addwfc	(?___wmul+1)^0,w,c
  3157  0015D6  6EF7               	movwf	tblptrh,c
  3158  0015D8                     	if	0	;There are less than 3 active tblptr bytes
  3159  0015D8                     	endif
  3160  0015D8  0009               	tblrd		*+
  3161  0015DA  CFF5 F01E          	movff	tablat,___ftmul@f2
  3162  0015DE  0009               	tblrd		*+
  3163  0015E0  CFF5 F01F          	movff	tablat,___ftmul@f2+1
  3164  0015E4  000A               	tblrd		*-
  3165  0015E6  CFF5 F020          	movff	tablat,___ftmul@f2+2
  3166  0015EA  0E00               	movlw	0
  3167  0015EC  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3168  0015EE  0E0A               	movlw	10
  3169  0015F0  6E08               	movwf	___lwdiv@divisor^0,c
  3170  0015F2  C033  F006         	movff	fround@prec,___lwdiv@dividend
  3171  0015F6  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  3172  0015F8  EC7E  F011         	call	___lwdiv	;wreg free
  3173  0015FC  C006  F00D         	movff	?___lwdiv,___wmul@multiplier
  3174  001600  C007  F00E         	movff	?___lwdiv+1,___wmul@multiplier+1
  3175  001604  0E00               	movlw	0
  3176  001606  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  3177  001608  0E03               	movlw	3
  3178  00160A  6E0F               	movwf	___wmul@multiplicand^0,c
  3179  00160C  EC31  F012         	call	___wmul	;wreg free
  3180  001610  0E1B               	movlw	27
  3181  001612  260D               	addwf	?___wmul^0,f,c
  3182  001614  0E00               	movlw	0
  3183  001616  220E               	addwfc	(?___wmul+1)^0,f,c
  3184  001618  0E28               	movlw	low __npowers_
  3185  00161A  240D               	addwf	?___wmul^0,w,c
  3186  00161C  6EF6               	movwf	tblptrl,c
  3187  00161E  0E08               	movlw	high __npowers_
  3188  001620  200E               	addwfc	(?___wmul+1)^0,w,c
  3189  001622  6EF7               	movwf	tblptrh,c
  3190  001624                     	if	0	;There are less than 3 active tblptr bytes
  3191  001624                     	endif
  3192  001624  0009               	tblrd		*+
  3193  001626  CFF5 F01B          	movff	tablat,___ftmul@f1
  3194  00162A  0009               	tblrd		*+
  3195  00162C  CFF5 F01C          	movff	tablat,___ftmul@f1+1
  3196  001630  000A               	tblrd		*-
  3197  001632  CFF5 F01D          	movff	tablat,___ftmul@f1+2
  3198  001636  ECFE  F00D         	call	___ftmul	;wreg free
  3199  00163A  C01B  F030         	movff	?___ftmul,_fround$1099
  3200  00163E  C01C  F031         	movff	?___ftmul+1,_fround$1099+1
  3201  001642  C01D  F032         	movff	?___ftmul+2,_fround$1099+2
  3202                           
  3203                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3204  001646  C030  F01B         	movff	_fround$1099,___ftmul@f1
  3205  00164A  C031  F01C         	movff	_fround$1099+1,___ftmul@f1+1
  3206  00164E  C032  F01D         	movff	_fround$1099+2,___ftmul@f1+2
  3207  001652  0E00               	movlw	0
  3208  001654  6E1E               	movwf	___ftmul@f2^0,c
  3209  001656  0E00               	movlw	0
  3210  001658  6E1F               	movwf	(___ftmul@f2+1)^0,c
  3211  00165A  0E3F               	movlw	63
  3212  00165C  6E20               	movwf	(___ftmul@f2+2)^0,c
  3213  00165E  ECFE  F00D         	call	___ftmul	;wreg free
  3214  001662  C01B  F02A         	movff	?___ftmul,?_fround
  3215  001666  C01C  F02B         	movff	?___ftmul+1,?_fround+1
  3216  00166A  C01D  F02C         	movff	?___ftmul+2,?_fround+2
  3217  00166E  0012               	return	
  3218  001670                     l2503:
  3219                           
  3220                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  3221  001670  5033               	movf	fround@prec^0,w,c
  3222  001672  0D03               	mullw	3
  3223  001674  0E28               	movlw	low __npowers_
  3224  001676  24F3               	addwf	243,w,c
  3225  001678  6EF6               	movwf	tblptrl,c
  3226  00167A  0E08               	movlw	high __npowers_
  3227  00167C  20F4               	addwfc	244,w,c
  3228  00167E  6EF7               	movwf	tblptrh,c
  3229  001680                     	if	0	;There are less than 3 active tblptr bytes
  3230  001680                     	endif
  3231  001680  0009               	tblrd		*+
  3232  001682  CFF5 F01B          	movff	tablat,___ftmul@f1
  3233  001686  0009               	tblrd		*+
  3234  001688  CFF5 F01C          	movff	tablat,___ftmul@f1+1
  3235  00168C  000A               	tblrd		*-
  3236  00168E  CFF5 F01D          	movff	tablat,___ftmul@f1+2
  3237  001692  0E00               	movlw	0
  3238  001694  6E1E               	movwf	___ftmul@f2^0,c
  3239  001696  0E00               	movlw	0
  3240  001698  6E1F               	movwf	(___ftmul@f2+1)^0,c
  3241  00169A  0E3F               	movlw	63
  3242  00169C  6E20               	movwf	(___ftmul@f2+2)^0,c
  3243  00169E  ECFE  F00D         	call	___ftmul	;wreg free
  3244  0016A2  C01B  F02A         	movff	?___ftmul,?_fround
  3245  0016A6  C01C  F02B         	movff	?___ftmul+1,?_fround+1
  3246  0016AA  C01D  F02C         	movff	?___ftmul+2,?_fround+2
  3247  0016AE  0012               	return		;funcret
  3248  0016B0                     __end_of_fround:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function ___wmul *****************
  3252 ;; Defined at:
  3253 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  multiplier      2   12[COMRAM] unsigned int 
  3256 ;;  multiplicand    2   14[COMRAM] unsigned int 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  product         2   16[COMRAM] unsigned int 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  2   12[COMRAM] unsigned int 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0, prodl, prodh
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3268 ;;      Params:         4       0       0       0       0       0       0       0       0
  3269 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3271 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3272 ;;Total ram usage:        6 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_fround
  3278 ;;		_printf
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text8
  3283  002462                     __ptext8:
  3284                           	callstack 0
  3285  002462                     ___wmul:
  3286                           	callstack 28
  3287                           
  3288                           ;incstack = 0
  3289  002462  500D               	movf	___wmul@multiplier^0,w,c
  3290  002464  020F               	mulwf	___wmul@multiplicand^0,c
  3291  002466  CFF3 F011          	movff	prodl,___wmul@product
  3292  00246A  CFF4 F012          	movff	prodh,___wmul@product+1
  3293  00246E  500D               	movf	___wmul@multiplier^0,w,c
  3294  002470  0210               	mulwf	(___wmul@multiplicand+1)^0,c
  3295  002472  50F3               	movf	243,w,c
  3296  002474  2612               	addwf	(___wmul@product+1)^0,f,c
  3297  002476  500E               	movf	(___wmul@multiplier+1)^0,w,c
  3298  002478  020F               	mulwf	___wmul@multiplicand^0,c
  3299  00247A  50F3               	movf	243,w,c
  3300  00247C  2612               	addwf	(___wmul@product+1)^0,f,c
  3301  00247E  C011  F00D         	movff	___wmul@product,?___wmul
  3302  002482  C012  F00E         	movff	___wmul@product+1,?___wmul+1
  3303  002486  0012               	return		;funcret
  3304  002488                     __end_of___wmul:
  3305                           	callstack 0
  3306                           
  3307 ;; *************** function ___lwmod *****************
  3308 ;; Defined at:
  3309 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  dividend        2    0[COMRAM] unsigned int 
  3312 ;;  divisor         2    2[COMRAM] unsigned int 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  counter         1    4[COMRAM] unsigned char 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  2    0[COMRAM] unsigned int 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3324 ;;      Params:         4       0       0       0       0       0       0       0       0
  3325 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3327 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3328 ;;Total ram usage:        5 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_fround
  3334 ;;		_utoa
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text9
  3339  0023A0                     __ptext9:
  3340                           	callstack 0
  3341  0023A0                     ___lwmod:
  3342                           	callstack 28
  3343                           
  3344                           ;incstack = 0
  3345  0023A0  5003               	movf	___lwmod@divisor^0,w,c
  3346  0023A2  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3347  0023A4  B4D8               	btfsc	status,2,c
  3348  0023A6  D018               	goto	l776
  3349  0023A8  0E01               	movlw	1
  3350  0023AA  6E05               	movwf	___lwmod@counter^0,c
  3351  0023AC  D004               	goto	l2469
  3352  0023AE                     l2467:
  3353  0023AE  90D8               	bcf	status,0,c
  3354  0023B0  3603               	rlcf	___lwmod@divisor^0,f,c
  3355  0023B2  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3356  0023B4  2A05               	incf	___lwmod@counter^0,f,c
  3357  0023B6                     l2469:
  3358  0023B6  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3359  0023B8  D7FA               	goto	l2467
  3360  0023BA                     u2330:
  3361  0023BA  5003               	movf	___lwmod@divisor^0,w,c
  3362  0023BC  5C01               	subwf	___lwmod@dividend^0,w,c
  3363  0023BE  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3364  0023C0  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3365  0023C2  A0D8               	btfss	status,0,c
  3366  0023C4  D004               	goto	l2475
  3367  0023C6  5003               	movf	___lwmod@divisor^0,w,c
  3368  0023C8  5E01               	subwf	___lwmod@dividend^0,f,c
  3369  0023CA  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3370  0023CC  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3371  0023CE                     l2475:
  3372  0023CE  90D8               	bcf	status,0,c
  3373  0023D0  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3374  0023D2  3203               	rrcf	___lwmod@divisor^0,f,c
  3375  0023D4  2E05               	decfsz	___lwmod@counter^0,f,c
  3376  0023D6  D7F1               	goto	u2330
  3377  0023D8                     l776:
  3378  0023D8  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3379  0023DC  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3380  0023E0  0012               	return		;funcret
  3381  0023E2                     __end_of___lwmod:
  3382                           	callstack 0
  3383                           
  3384 ;; *************** function ___lwdiv *****************
  3385 ;; Defined at:
  3386 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  dividend        2    5[COMRAM] unsigned int 
  3389 ;;  divisor         2    7[COMRAM] unsigned int 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  quotient        2    9[COMRAM] unsigned int 
  3392 ;;  counter         1   11[COMRAM] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  2    5[COMRAM] unsigned int 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3402 ;;      Params:         4       0       0       0       0       0       0       0       0
  3403 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3405 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3406 ;;Total ram usage:        7 bytes
  3407 ;; Hardware stack levels used: 1
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_fround
  3412 ;;		_utoa
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text10
  3417  0022FC                     __ptext10:
  3418                           	callstack 0
  3419  0022FC                     ___lwdiv:
  3420                           	callstack 28
  3421                           
  3422                           ;incstack = 0
  3423  0022FC  0E00               	movlw	0
  3424  0022FE  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  3425  002300  0E00               	movlw	0
  3426  002302  6E0A               	movwf	___lwdiv@quotient^0,c
  3427  002304  5008               	movf	___lwdiv@divisor^0,w,c
  3428  002306  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3429  002308  B4D8               	btfsc	status,2,c
  3430  00230A  D01C               	goto	l766
  3431  00230C  0E01               	movlw	1
  3432  00230E  6E0C               	movwf	___lwdiv@counter^0,c
  3433  002310  D004               	goto	l2449
  3434  002312                     l2447:
  3435  002312  90D8               	bcf	status,0,c
  3436  002314  3608               	rlcf	___lwdiv@divisor^0,f,c
  3437  002316  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3438  002318  2A0C               	incf	___lwdiv@counter^0,f,c
  3439  00231A                     l2449:
  3440  00231A  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  3441  00231C  D7FA               	goto	l2447
  3442  00231E                     u2300:
  3443  00231E  90D8               	bcf	status,0,c
  3444  002320  360A               	rlcf	___lwdiv@quotient^0,f,c
  3445  002322  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3446  002324  5008               	movf	___lwdiv@divisor^0,w,c
  3447  002326  5C06               	subwf	___lwdiv@dividend^0,w,c
  3448  002328  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  3449  00232A  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3450  00232C  A0D8               	btfss	status,0,c
  3451  00232E  D005               	goto	l2459
  3452  002330  5008               	movf	___lwdiv@divisor^0,w,c
  3453  002332  5E06               	subwf	___lwdiv@dividend^0,f,c
  3454  002334  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  3455  002336  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3456  002338  800A               	bsf	___lwdiv@quotient^0,0,c
  3457  00233A                     l2459:
  3458  00233A  90D8               	bcf	status,0,c
  3459  00233C  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3460  00233E  3208               	rrcf	___lwdiv@divisor^0,f,c
  3461  002340  2E0C               	decfsz	___lwdiv@counter^0,f,c
  3462  002342  D7ED               	goto	u2300
  3463  002344                     l766:
  3464  002344  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3465  002348  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3466  00234C  0012               	return		;funcret
  3467  00234E                     __end_of___lwdiv:
  3468                           	callstack 0
  3469                           
  3470 ;; *************** function __tdiv_to_l_ *****************
  3471 ;; Defined at:
  3472 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  f1              3    0[COMRAM] float 
  3475 ;;  f2              3    3[COMRAM] float 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  quot            4    9[COMRAM] unsigned long 
  3478 ;;  exp1            1   14[COMRAM] unsigned char 
  3479 ;;  cntr            1   13[COMRAM] unsigned char 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  4    0[COMRAM] unsigned long 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2, status,0
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3489 ;;      Params:         6       0       0       0       0       0       0       0       0
  3490 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3491 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3492 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3493 ;;Total ram usage:       15 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_printf
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text11
  3503  001A0A                     __ptext11:
  3504                           	callstack 0
  3505  001A0A                     __tdiv_to_l_:
  3506                           	callstack 29
  3507                           
  3508                           ;incstack = 0
  3509  001A0A  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3510  001A0E  6A08               	clrf	(??__tdiv_to_l_+1)^0,c
  3511  001A10  6A09               	clrf	(??__tdiv_to_l_+2)^0,c
  3512  001A12  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  3513  001A14  3607               	rlcf	??__tdiv_to_l_^0,f,c
  3514  001A16  E301               	bnc	u2441
  3515  001A18  8008               	bsf	(??__tdiv_to_l_+1)^0,0,c
  3516  001A1A                     u2441:
  3517  001A1A  5007               	movf	??__tdiv_to_l_^0,w,c
  3518  001A1C  6E0F               	movwf	__tdiv_to_l_@exp1^0,c
  3519  001A1E  500F               	movf	__tdiv_to_l_@exp1^0,w,c
  3520  001A20  A4D8               	btfss	status,2,c
  3521  001A22  D009               	goto	l2563
  3522  001A24                     u2450:
  3523  001A24  0E00               	movlw	0
  3524  001A26  6E01               	movwf	?__tdiv_to_l_^0,c
  3525  001A28  0E00               	movlw	0
  3526  001A2A  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
  3527  001A2C  0E00               	movlw	0
  3528  001A2E  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
  3529  001A30  0E00               	movlw	0
  3530  001A32  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
  3531  001A34  0012               	return	
  3532  001A36                     l2563:
  3533  001A36  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3534  001A3A  6A08               	clrf	(??__tdiv_to_l_+1)^0,c
  3535  001A3C  6A09               	clrf	(??__tdiv_to_l_+2)^0,c
  3536  001A3E  3405               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  3537  001A40  3607               	rlcf	??__tdiv_to_l_^0,f,c
  3538  001A42  E301               	bnc	u2461
  3539  001A44  8008               	bsf	(??__tdiv_to_l_+1)^0,0,c
  3540  001A46                     u2461:
  3541  001A46  5007               	movf	??__tdiv_to_l_^0,w,c
  3542  001A48  6E0E               	movwf	__tdiv_to_l_@cntr^0,c
  3543  001A4A  500E               	movf	__tdiv_to_l_@cntr^0,w,c
  3544  001A4C  B4D8               	btfsc	status,2,c
  3545  001A4E  D7EA               	goto	u2450
  3546  001A50  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  3547  001A52  0EFF               	movlw	255
  3548  001A54  1601               	andwf	__tdiv_to_l_@f1^0,f,c
  3549  001A56  0EFF               	movlw	255
  3550  001A58  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  3551  001A5A  0E00               	movlw	0
  3552  001A5C  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  3553  001A5E  8E05               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  3554  001A60  0EFF               	movlw	255
  3555  001A62  1604               	andwf	__tdiv_to_l_@f2^0,f,c
  3556  001A64  0EFF               	movlw	255
  3557  001A66  1605               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  3558  001A68  0E00               	movlw	0
  3559  001A6A  1606               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  3560  001A6C  0E00               	movlw	0
  3561  001A6E  6E0A               	movwf	__tdiv_to_l_@quot^0,c
  3562  001A70  0E00               	movlw	0
  3563  001A72  6E0B               	movwf	(__tdiv_to_l_@quot+1)^0,c
  3564  001A74  0E00               	movlw	0
  3565  001A76  6E0C               	movwf	(__tdiv_to_l_@quot+2)^0,c
  3566  001A78  0E00               	movlw	0
  3567  001A7A  6E0D               	movwf	(__tdiv_to_l_@quot+3)^0,c
  3568  001A7C  0E7F               	movlw	127
  3569  001A7E  5E0F               	subwf	__tdiv_to_l_@exp1^0,f,c
  3570  001A80  500E               	movf	__tdiv_to_l_@cntr^0,w,c
  3571  001A82  0F98               	addlw	152
  3572  001A84  5E0F               	subwf	__tdiv_to_l_@exp1^0,f,c
  3573  001A86  0E18               	movlw	24
  3574  001A88  6E0E               	movwf	__tdiv_to_l_@cntr^0,c
  3575  001A8A                     l618:
  3576  001A8A  90D8               	bcf	status,0,c
  3577  001A8C  360A               	rlcf	__tdiv_to_l_@quot^0,f,c
  3578  001A8E  360B               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  3579  001A90  360C               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  3580  001A92  360D               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  3581  001A94  5004               	movf	__tdiv_to_l_@f2^0,w,c
  3582  001A96  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
  3583  001A98  5005               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  3584  001A9A  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  3585  001A9C  5006               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  3586  001A9E  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  3587  001AA0  A0D8               	btfss	status,0,c
  3588  001AA2  D007               	goto	l619
  3589  001AA4  5004               	movf	__tdiv_to_l_@f2^0,w,c
  3590  001AA6  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
  3591  001AA8  5005               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  3592  001AAA  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  3593  001AAC  5006               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  3594  001AAE  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  3595  001AB0  800A               	bsf	__tdiv_to_l_@quot^0,0,c
  3596  001AB2                     l619:
  3597  001AB2  90D8               	bcf	status,0,c
  3598  001AB4  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
  3599  001AB6  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  3600  001AB8  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  3601  001ABA  2E0E               	decfsz	__tdiv_to_l_@cntr^0,f,c
  3602  001ABC  D7E6               	goto	l618
  3603  001ABE  AE0F               	btfss	__tdiv_to_l_@exp1^0,7,c
  3604  001AC0  D00D               	goto	l2603
  3605  001AC2  500F               	movf	__tdiv_to_l_@exp1^0,w,c
  3606  001AC4  0A80               	xorlw	128
  3607  001AC6  0F97               	addlw	151
  3608  001AC8  A0D8               	btfss	status,0,c
  3609  001ACA  D7AC               	goto	u2450
  3610  001ACC                     l2599:
  3611  001ACC  90D8               	bcf	status,0,c
  3612  001ACE  320D               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  3613  001AD0  320C               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  3614  001AD2  320B               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  3615  001AD4  320A               	rrcf	__tdiv_to_l_@quot^0,f,c
  3616  001AD6  3E0F               	incfsz	__tdiv_to_l_@exp1^0,f,c
  3617  001AD8  D7F9               	goto	l2599
  3618  001ADA  D00D               	goto	u2520
  3619  001ADC                     l2603:
  3620  001ADC  0E17               	movlw	23
  3621  001ADE  640F               	cpfsgt	__tdiv_to_l_@exp1^0,c
  3622  001AE0  D007               	goto	l2611
  3623  001AE2  D7A0               	goto	u2450
  3624  001AE4                     l2609:
  3625  001AE4  90D8               	bcf	status,0,c
  3626  001AE6  360A               	rlcf	__tdiv_to_l_@quot^0,f,c
  3627  001AE8  360B               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  3628  001AEA  360C               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  3629  001AEC  360D               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  3630  001AEE  060F               	decf	__tdiv_to_l_@exp1^0,f,c
  3631  001AF0                     l2611:
  3632  001AF0  500F               	movf	__tdiv_to_l_@exp1^0,w,c
  3633  001AF2  A4D8               	btfss	status,2,c
  3634  001AF4  D7F7               	goto	l2609
  3635  001AF6                     u2520:
  3636  001AF6  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3637  001AFA  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3638  001AFE  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3639  001B02  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3640  001B06  0012               	return		;funcret
  3641  001B08                     __end_of__tdiv_to_l_:
  3642                           	callstack 0
  3643                           
  3644 ;; *************** function __div_to_l_ *****************
  3645 ;; Defined at:
  3646 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  f1              3    0[COMRAM] unsigned long 
  3649 ;;  f2              3    3[COMRAM] unsigned long 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  quot            4    6[COMRAM] unsigned long 
  3652 ;;  exp1            1   11[COMRAM] unsigned char 
  3653 ;;  cntr            1   10[COMRAM] unsigned char 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  4    0[COMRAM] unsigned long 
  3656 ;; Registers used:
  3657 ;;		wreg, status,2, status,0
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3663 ;;      Params:         6       0       0       0       0       0       0       0       0
  3664 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3665 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3666 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3667 ;;Total ram usage:       12 bytes
  3668 ;; Hardware stack levels used: 1
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_printf
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text12
  3677  001B08                     __ptext12:
  3678                           	callstack 0
  3679  001B08                     __div_to_l_:
  3680                           	callstack 29
  3681                           
  3682                           ;incstack = 0
  3683  001B08  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
  3684  001B0A  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
  3685  001B0C  6E0C               	movwf	__div_to_l_@exp1^0,c
  3686  001B0E  500C               	movf	__div_to_l_@exp1^0,w,c
  3687  001B10  A4D8               	btfss	status,2,c
  3688  001B12  D009               	goto	l2619
  3689  001B14                     u2530:
  3690  001B14  0E00               	movlw	0
  3691  001B16  6E01               	movwf	?__div_to_l_^0,c
  3692  001B18  0E00               	movlw	0
  3693  001B1A  6E02               	movwf	(?__div_to_l_+1)^0,c
  3694  001B1C  0E00               	movlw	0
  3695  001B1E  6E03               	movwf	(?__div_to_l_+2)^0,c
  3696  001B20  0E00               	movlw	0
  3697  001B22  6E04               	movwf	(?__div_to_l_+3)^0,c
  3698  001B24  0012               	return	
  3699  001B26                     l2619:
  3700  001B26  3406               	rlcf	(__div_to_l_@f2+2)^0,w,c
  3701  001B28  3407               	rlcf	(__div_to_l_@f2+3)^0,w,c
  3702  001B2A  6E0B               	movwf	__div_to_l_@cntr^0,c
  3703  001B2C  500B               	movf	__div_to_l_@cntr^0,w,c
  3704  001B2E  B4D8               	btfsc	status,2,c
  3705  001B30  D7F1               	goto	u2530
  3706  001B32  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
  3707  001B34  0EFF               	movlw	255
  3708  001B36  1601               	andwf	__div_to_l_@f1^0,f,c
  3709  001B38  0EFF               	movlw	255
  3710  001B3A  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
  3711  001B3C  0EFF               	movlw	255
  3712  001B3E  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
  3713  001B40  0E00               	movlw	0
  3714  001B42  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
  3715  001B44  8E06               	bsf	(__div_to_l_@f2+2)^0,7,c
  3716  001B46  0EFF               	movlw	255
  3717  001B48  1604               	andwf	__div_to_l_@f2^0,f,c
  3718  001B4A  0EFF               	movlw	255
  3719  001B4C  1605               	andwf	(__div_to_l_@f2+1)^0,f,c
  3720  001B4E  0EFF               	movlw	255
  3721  001B50  1606               	andwf	(__div_to_l_@f2+2)^0,f,c
  3722  001B52  0E00               	movlw	0
  3723  001B54  1607               	andwf	(__div_to_l_@f2+3)^0,f,c
  3724  001B56  0E00               	movlw	0
  3725  001B58  6E07               	movwf	__div_to_l_@quot^0,c
  3726  001B5A  0E00               	movlw	0
  3727  001B5C  6E08               	movwf	(__div_to_l_@quot+1)^0,c
  3728  001B5E  0E00               	movlw	0
  3729  001B60  6E09               	movwf	(__div_to_l_@quot+2)^0,c
  3730  001B62  0E00               	movlw	0
  3731  001B64  6E0A               	movwf	(__div_to_l_@quot+3)^0,c
  3732  001B66  0E7F               	movlw	127
  3733  001B68  5E0C               	subwf	__div_to_l_@exp1^0,f,c
  3734  001B6A  500B               	movf	__div_to_l_@cntr^0,w,c
  3735  001B6C  0FA0               	addlw	160
  3736  001B6E  5E0C               	subwf	__div_to_l_@exp1^0,f,c
  3737  001B70  0E20               	movlw	32
  3738  001B72  6E0B               	movwf	__div_to_l_@cntr^0,c
  3739  001B74                     l2639:
  3740  001B74  90D8               	bcf	status,0,c
  3741  001B76  3607               	rlcf	__div_to_l_@quot^0,f,c
  3742  001B78  3608               	rlcf	(__div_to_l_@quot+1)^0,f,c
  3743  001B7A  3609               	rlcf	(__div_to_l_@quot+2)^0,f,c
  3744  001B7C  360A               	rlcf	(__div_to_l_@quot+3)^0,f,c
  3745  001B7E  5004               	movf	__div_to_l_@f2^0,w,c
  3746  001B80  5C01               	subwf	__div_to_l_@f1^0,w,c
  3747  001B82  5005               	movf	(__div_to_l_@f2+1)^0,w,c
  3748  001B84  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
  3749  001B86  5006               	movf	(__div_to_l_@f2+2)^0,w,c
  3750  001B88  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
  3751  001B8A  5007               	movf	(__div_to_l_@f2+3)^0,w,c
  3752  001B8C  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
  3753  001B8E  A0D8               	btfss	status,0,c
  3754  001B90  D009               	goto	l2647
  3755  001B92  5004               	movf	__div_to_l_@f2^0,w,c
  3756  001B94  5E01               	subwf	__div_to_l_@f1^0,f,c
  3757  001B96  5005               	movf	(__div_to_l_@f2+1)^0,w,c
  3758  001B98  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
  3759  001B9A  5006               	movf	(__div_to_l_@f2+2)^0,w,c
  3760  001B9C  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
  3761  001B9E  5007               	movf	(__div_to_l_@f2+3)^0,w,c
  3762  001BA0  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
  3763  001BA2  8007               	bsf	__div_to_l_@quot^0,0,c
  3764  001BA4                     l2647:
  3765  001BA4  90D8               	bcf	status,0,c
  3766  001BA6  3601               	rlcf	__div_to_l_@f1^0,f,c
  3767  001BA8  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
  3768  001BAA  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
  3769  001BAC  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
  3770  001BAE  2E0B               	decfsz	__div_to_l_@cntr^0,f,c
  3771  001BB0  D7E1               	goto	l2639
  3772  001BB2  AE0C               	btfss	__div_to_l_@exp1^0,7,c
  3773  001BB4  D00D               	goto	l2663
  3774  001BB6  500C               	movf	__div_to_l_@exp1^0,w,c
  3775  001BB8  0A80               	xorlw	128
  3776  001BBA  0F9F               	addlw	159
  3777  001BBC  A0D8               	btfss	status,0,c
  3778  001BBE  D7AA               	goto	u2530
  3779  001BC0                     l2659:
  3780  001BC0  90D8               	bcf	status,0,c
  3781  001BC2  320A               	rrcf	(__div_to_l_@quot+3)^0,f,c
  3782  001BC4  3209               	rrcf	(__div_to_l_@quot+2)^0,f,c
  3783  001BC6  3208               	rrcf	(__div_to_l_@quot+1)^0,f,c
  3784  001BC8  3207               	rrcf	__div_to_l_@quot^0,f,c
  3785  001BCA  3E0C               	incfsz	__div_to_l_@exp1^0,f,c
  3786  001BCC  D7F9               	goto	l2659
  3787  001BCE  D00D               	goto	u2590
  3788  001BD0                     l2663:
  3789  001BD0  0E1F               	movlw	31
  3790  001BD2  640C               	cpfsgt	__div_to_l_@exp1^0,c
  3791  001BD4  D007               	goto	l2671
  3792  001BD6  D79E               	goto	u2530
  3793  001BD8                     l2669:
  3794  001BD8  90D8               	bcf	status,0,c
  3795  001BDA  3607               	rlcf	__div_to_l_@quot^0,f,c
  3796  001BDC  3608               	rlcf	(__div_to_l_@quot+1)^0,f,c
  3797  001BDE  3609               	rlcf	(__div_to_l_@quot+2)^0,f,c
  3798  001BE0  360A               	rlcf	(__div_to_l_@quot+3)^0,f,c
  3799  001BE2  060C               	decf	__div_to_l_@exp1^0,f,c
  3800  001BE4                     l2671:
  3801  001BE4  500C               	movf	__div_to_l_@exp1^0,w,c
  3802  001BE6  A4D8               	btfss	status,2,c
  3803  001BE8  D7F7               	goto	l2669
  3804  001BEA                     u2590:
  3805  001BEA  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3806  001BEE  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3807  001BF2  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3808  001BF6  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3809  001BFA  0012               	return		;funcret
  3810  001BFC                     __end_of__div_to_l_:
  3811                           	callstack 0
  3812                           
  3813 ;; *************** function ___lltoft *****************
  3814 ;; Defined at:
  3815 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lltoft.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  c               4    8[COMRAM] unsigned long 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  exp             1   16[COMRAM] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  3    8[COMRAM] float 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3829 ;;      Params:         4       0       0       0       0       0       0       0       0
  3830 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3831 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3832 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3833 ;;Total ram usage:        9 bytes
  3834 ;; Hardware stack levels used: 1
  3835 ;; Hardware stack levels required when called: 1
  3836 ;; This function calls:
  3837 ;;		___ftpack
  3838 ;; This function is called by:
  3839 ;;		_printf
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text13
  3844  0022A0                     __ptext13:
  3845                           	callstack 0
  3846  0022A0                     ___lltoft:
  3847                           	callstack 28
  3848                           
  3849                           ;incstack = 0
  3850  0022A0  0E8E               	movlw	142
  3851  0022A2  6E11               	movwf	___lltoft@exp^0,c
  3852  0022A4  D006               	goto	l2837
  3853  0022A6                     l2835:
  3854  0022A6  90D8               	bcf	status,0,c
  3855  0022A8  320C               	rrcf	(___lltoft@c+3)^0,f,c
  3856  0022AA  320B               	rrcf	(___lltoft@c+2)^0,f,c
  3857  0022AC  320A               	rrcf	(___lltoft@c+1)^0,f,c
  3858  0022AE  3209               	rrcf	___lltoft@c^0,f,c
  3859  0022B0  2A11               	incf	___lltoft@exp^0,f,c
  3860  0022B2                     l2837:
  3861  0022B2  0E00               	movlw	0
  3862  0022B4  1409               	andwf	___lltoft@c^0,w,c
  3863  0022B6  6E0D               	movwf	??___lltoft^0,c
  3864  0022B8  0E00               	movlw	0
  3865  0022BA  140A               	andwf	(___lltoft@c+1)^0,w,c
  3866  0022BC  6E0E               	movwf	(??___lltoft+1)^0,c
  3867  0022BE  0E00               	movlw	0
  3868  0022C0  140B               	andwf	(___lltoft@c+2)^0,w,c
  3869  0022C2  6E0F               	movwf	(??___lltoft+2)^0,c
  3870  0022C4  0EFF               	movlw	255
  3871  0022C6  140C               	andwf	(___lltoft@c+3)^0,w,c
  3872  0022C8  6E10               	movwf	(??___lltoft+3)^0,c
  3873  0022CA  500D               	movf	??___lltoft^0,w,c
  3874  0022CC  100E               	iorwf	(??___lltoft+1)^0,w,c
  3875  0022CE  100F               	iorwf	(??___lltoft+2)^0,w,c
  3876  0022D0  1010               	iorwf	(??___lltoft+3)^0,w,c
  3877  0022D2  A4D8               	btfss	status,2,c
  3878  0022D4  D7E8               	goto	l2835
  3879  0022D6  C009  F001         	movff	___lltoft@c,___ftpack@arg
  3880  0022DA  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  3881  0022DE  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  3882  0022E2  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  3883  0022E6  0E00               	movlw	0
  3884  0022E8  6E05               	movwf	___ftpack@sign^0,c
  3885  0022EA  EC54  F00F         	call	___ftpack	;wreg free
  3886  0022EE  C001  F009         	movff	?___ftpack,?___lltoft
  3887  0022F2  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  3888  0022F6  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  3889  0022FA  0012               	return		;funcret
  3890  0022FC                     __end_of___lltoft:
  3891                           	callstack 0
  3892                           
  3893 ;; *************** function ___llmod *****************
  3894 ;; Defined at:
  3895 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  dividend        4    0[COMRAM] unsigned long 
  3898 ;;  divisor         4    4[COMRAM] unsigned long 
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  counter         1    8[COMRAM] unsigned char 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  4    0[COMRAM] unsigned long 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3910 ;;      Params:         8       0       0       0       0       0       0       0       0
  3911 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3912 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3913 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3914 ;;Total ram usage:        9 bytes
  3915 ;; Hardware stack levels used: 1
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_printf
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text14
  3924  00223A                     __ptext14:
  3925                           	callstack 0
  3926  00223A                     ___llmod:
  3927                           	callstack 29
  3928                           
  3929                           ;incstack = 0
  3930  00223A  5005               	movf	___llmod@divisor^0,w,c
  3931  00223C  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  3932  00223E  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  3933  002240  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  3934  002242  B4D8               	btfsc	status,2,c
  3935  002244  D024               	goto	l695
  3936  002246  0E01               	movlw	1
  3937  002248  6E09               	movwf	___llmod@counter^0,c
  3938  00224A  D006               	goto	l2823
  3939  00224C                     l2821:
  3940  00224C  90D8               	bcf	status,0,c
  3941  00224E  3605               	rlcf	___llmod@divisor^0,f,c
  3942  002250  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  3943  002252  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  3944  002254  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  3945  002256  2A09               	incf	___llmod@counter^0,f,c
  3946  002258                     l2823:
  3947  002258  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  3948  00225A  D7F8               	goto	l2821
  3949  00225C                     u2820:
  3950  00225C  5005               	movf	___llmod@divisor^0,w,c
  3951  00225E  5C01               	subwf	___llmod@dividend^0,w,c
  3952  002260  5006               	movf	(___llmod@divisor+1)^0,w,c
  3953  002262  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  3954  002264  5007               	movf	(___llmod@divisor+2)^0,w,c
  3955  002266  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  3956  002268  5008               	movf	(___llmod@divisor+3)^0,w,c
  3957  00226A  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  3958  00226C  A0D8               	btfss	status,0,c
  3959  00226E  D008               	goto	l2829
  3960  002270  5005               	movf	___llmod@divisor^0,w,c
  3961  002272  5E01               	subwf	___llmod@dividend^0,f,c
  3962  002274  5006               	movf	(___llmod@divisor+1)^0,w,c
  3963  002276  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  3964  002278  5007               	movf	(___llmod@divisor+2)^0,w,c
  3965  00227A  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  3966  00227C  5008               	movf	(___llmod@divisor+3)^0,w,c
  3967  00227E  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  3968  002280                     l2829:
  3969  002280  90D8               	bcf	status,0,c
  3970  002282  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  3971  002284  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  3972  002286  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  3973  002288  3205               	rrcf	___llmod@divisor^0,f,c
  3974  00228A  2E09               	decfsz	___llmod@counter^0,f,c
  3975  00228C  D7E7               	goto	u2820
  3976  00228E                     l695:
  3977  00228E  C001  F001         	movff	___llmod@dividend,?___llmod
  3978  002292  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3979  002296  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3980  00229A  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3981  00229E  0012               	return		;funcret
  3982  0022A0                     __end_of___llmod:
  3983                           	callstack 0
  3984                           
  3985 ;; *************** function ___lldiv *****************
  3986 ;; Defined at:
  3987 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;  dividend        4    0[COMRAM] unsigned long 
  3990 ;;  divisor         4    4[COMRAM] unsigned long 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  quotient        4    8[COMRAM] unsigned long 
  3993 ;;  counter         1   12[COMRAM] unsigned char 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  4    0[COMRAM] unsigned long 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4003 ;;      Params:         8       0       0       0       0       0       0       0       0
  4004 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4006 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4007 ;;Total ram usage:       13 bytes
  4008 ;; Hardware stack levels used: 1
  4009 ;; This function calls:
  4010 ;;		Nothing
  4011 ;; This function is called by:
  4012 ;;		_printf
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text15
  4017  002066                     __ptext15:
  4018                           	callstack 0
  4019  002066                     ___lldiv:
  4020                           	callstack 29
  4021                           
  4022                           ;incstack = 0
  4023  002066  0E00               	movlw	0
  4024  002068  6E09               	movwf	___lldiv@quotient^0,c
  4025  00206A  0E00               	movlw	0
  4026  00206C  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  4027  00206E  0E00               	movlw	0
  4028  002070  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  4029  002072  0E00               	movlw	0
  4030  002074  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  4031  002076  5005               	movf	___lldiv@divisor^0,w,c
  4032  002078  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  4033  00207A  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  4034  00207C  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  4035  00207E  B4D8               	btfsc	status,2,c
  4036  002080  D02A               	goto	l280
  4037  002082  0E01               	movlw	1
  4038  002084  6E0D               	movwf	___lldiv@counter^0,c
  4039  002086  D006               	goto	l2681
  4040  002088                     l2679:
  4041  002088  90D8               	bcf	status,0,c
  4042  00208A  3605               	rlcf	___lldiv@divisor^0,f,c
  4043  00208C  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  4044  00208E  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  4045  002090  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  4046  002092  2A0D               	incf	___lldiv@counter^0,f,c
  4047  002094                     l2681:
  4048  002094  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  4049  002096  D7F8               	goto	l2679
  4050  002098                     u2610:
  4051  002098  90D8               	bcf	status,0,c
  4052  00209A  3609               	rlcf	___lldiv@quotient^0,f,c
  4053  00209C  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  4054  00209E  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  4055  0020A0  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  4056  0020A2  5005               	movf	___lldiv@divisor^0,w,c
  4057  0020A4  5C01               	subwf	___lldiv@dividend^0,w,c
  4058  0020A6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4059  0020A8  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  4060  0020AA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4061  0020AC  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  4062  0020AE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4063  0020B0  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  4064  0020B2  A0D8               	btfss	status,0,c
  4065  0020B4  D009               	goto	l2691
  4066  0020B6  5005               	movf	___lldiv@divisor^0,w,c
  4067  0020B8  5E01               	subwf	___lldiv@dividend^0,f,c
  4068  0020BA  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4069  0020BC  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  4070  0020BE  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4071  0020C0  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  4072  0020C2  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4073  0020C4  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  4074  0020C6  8009               	bsf	___lldiv@quotient^0,0,c
  4075  0020C8                     l2691:
  4076  0020C8  90D8               	bcf	status,0,c
  4077  0020CA  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  4078  0020CC  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  4079  0020CE  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  4080  0020D0  3205               	rrcf	___lldiv@divisor^0,f,c
  4081  0020D2  2E0D               	decfsz	___lldiv@counter^0,f,c
  4082  0020D4  D7E1               	goto	u2610
  4083  0020D6                     l280:
  4084  0020D6  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4085  0020DA  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4086  0020DE  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4087  0020E2  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4088  0020E6  0012               	return		;funcret
  4089  0020E8                     __end_of___lldiv:
  4090                           	callstack 0
  4091                           
  4092 ;; *************** function ___fttol *****************
  4093 ;; Defined at:
  4094 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fttol.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  f1              3   48[COMRAM] float 
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  lval            4   58[COMRAM] unsigned long 
  4099 ;;  exp1            1   62[COMRAM] unsigned char 
  4100 ;;  sign1           1   57[COMRAM] unsigned char 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  4   48[COMRAM] long 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4110 ;;      Params:         4       0       0       0       0       0       0       0       0
  4111 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4112 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4113 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4114 ;;Total ram usage:       15 bytes
  4115 ;; Hardware stack levels used: 1
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_printf
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text16
  4124  001DD6                     __ptext16:
  4125                           	callstack 0
  4126  001DD6                     ___fttol:
  4127                           	callstack 29
  4128                           
  4129                           ;incstack = 0
  4130  001DD6  C033  F035         	movff	___fttol@f1+2,??___fttol
  4131  001DDA  6A36               	clrf	(??___fttol+1)^0,c
  4132  001DDC  6A37               	clrf	(??___fttol+2)^0,c
  4133  001DDE  3432               	rlcf	(___fttol@f1+1)^0,w,c
  4134  001DE0  3635               	rlcf	??___fttol^0,f,c
  4135  001DE2  E301               	bnc	u2731
  4136  001DE4  8036               	bsf	(??___fttol+1)^0,0,c
  4137  001DE6                     u2731:
  4138  001DE6  5035               	movf	??___fttol^0,w,c
  4139  001DE8  6E3F               	movwf	___fttol@exp1^0,c
  4140  001DEA  503F               	movf	___fttol@exp1^0,w,c
  4141  001DEC  A4D8               	btfss	status,2,c
  4142  001DEE  D009               	goto	l2777
  4143  001DF0                     u2740:
  4144  001DF0  0E00               	movlw	0
  4145  001DF2  6E31               	movwf	?___fttol^0,c
  4146  001DF4  0E00               	movlw	0
  4147  001DF6  6E32               	movwf	(?___fttol+1)^0,c
  4148  001DF8  0E00               	movlw	0
  4149  001DFA  6E33               	movwf	(?___fttol+2)^0,c
  4150  001DFC  0E00               	movlw	0
  4151  001DFE  6E34               	movwf	(?___fttol+3)^0,c
  4152  001E00  0012               	return	
  4153  001E02                     l2777:
  4154  001E02  0E17               	movlw	23
  4155  001E04  6E35               	movwf	??___fttol^0,c
  4156  001E06  C031  F036         	movff	___fttol@f1,??___fttol+1
  4157  001E0A  C032  F037         	movff	___fttol@f1+1,??___fttol+2
  4158  001E0E  C033  F038         	movff	___fttol@f1+2,??___fttol+3
  4159  001E12  2835               	incf	??___fttol^0,w,c
  4160  001E14  6E39               	movwf	(??___fttol+4)^0,c
  4161  001E16  D004               	goto	u2750
  4162  001E18                     u2755:
  4163  001E18  90D8               	bcf	status,0,c
  4164  001E1A  3238               	rrcf	(??___fttol+3)^0,f,c
  4165  001E1C  3237               	rrcf	(??___fttol+2)^0,f,c
  4166  001E1E  3236               	rrcf	(??___fttol+1)^0,f,c
  4167  001E20                     u2750:
  4168  001E20  2E39               	decfsz	(??___fttol+4)^0,f,c
  4169  001E22  D7FA               	goto	u2755
  4170  001E24  5036               	movf	(??___fttol+1)^0,w,c
  4171  001E26  6E3A               	movwf	___fttol@sign1^0,c
  4172  001E28  8E32               	bsf	(___fttol@f1+1)^0,7,c
  4173  001E2A  0EFF               	movlw	255
  4174  001E2C  1631               	andwf	___fttol@f1^0,f,c
  4175  001E2E  0EFF               	movlw	255
  4176  001E30  1632               	andwf	(___fttol@f1+1)^0,f,c
  4177  001E32  0E00               	movlw	0
  4178  001E34  1633               	andwf	(___fttol@f1+2)^0,f,c
  4179  001E36  5031               	movf	___fttol@f1^0,w,c
  4180  001E38  6E3B               	movwf	___fttol@lval^0,c
  4181  001E3A  5032               	movf	(___fttol@f1+1)^0,w,c
  4182  001E3C  6E3C               	movwf	(___fttol@lval+1)^0,c
  4183  001E3E  5033               	movf	(___fttol@f1+2)^0,w,c
  4184  001E40  6E3D               	movwf	(___fttol@lval+2)^0,c
  4185  001E42  6A3E               	clrf	(___fttol@lval+3)^0,c
  4186  001E44  0E8E               	movlw	142
  4187  001E46  5E3F               	subwf	___fttol@exp1^0,f,c
  4188  001E48  AE3F               	btfss	___fttol@exp1^0,7,c
  4189  001E4A  D00D               	goto	l2799
  4190  001E4C  503F               	movf	___fttol@exp1^0,w,c
  4191  001E4E  0A80               	xorlw	128
  4192  001E50  0F8F               	addlw	143
  4193  001E52  A0D8               	btfss	status,0,c
  4194  001E54  D7CD               	goto	u2740
  4195  001E56                     l2795:
  4196  001E56  90D8               	bcf	status,0,c
  4197  001E58  323E               	rrcf	(___fttol@lval+3)^0,f,c
  4198  001E5A  323D               	rrcf	(___fttol@lval+2)^0,f,c
  4199  001E5C  323C               	rrcf	(___fttol@lval+1)^0,f,c
  4200  001E5E  323B               	rrcf	___fttol@lval^0,f,c
  4201  001E60  3E3F               	incfsz	___fttol@exp1^0,f,c
  4202  001E62  D7F9               	goto	l2795
  4203  001E64  D00D               	goto	u2790
  4204  001E66                     l2799:
  4205  001E66  0E17               	movlw	23
  4206  001E68  643F               	cpfsgt	___fttol@exp1^0,c
  4207  001E6A  D007               	goto	l2807
  4208  001E6C  D7C1               	goto	u2740
  4209  001E6E                     l2805:
  4210  001E6E  90D8               	bcf	status,0,c
  4211  001E70  363B               	rlcf	___fttol@lval^0,f,c
  4212  001E72  363C               	rlcf	(___fttol@lval+1)^0,f,c
  4213  001E74  363D               	rlcf	(___fttol@lval+2)^0,f,c
  4214  001E76  363E               	rlcf	(___fttol@lval+3)^0,f,c
  4215  001E78  063F               	decf	___fttol@exp1^0,f,c
  4216  001E7A                     l2807:
  4217  001E7A  503F               	movf	___fttol@exp1^0,w,c
  4218  001E7C  A4D8               	btfss	status,2,c
  4219  001E7E  D7F7               	goto	l2805
  4220  001E80                     u2790:
  4221  001E80  503A               	movf	___fttol@sign1^0,w,c
  4222  001E82  B4D8               	btfsc	status,2,c
  4223  001E84  D008               	goto	l2813
  4224  001E86  1E3E               	comf	(___fttol@lval+3)^0,f,c
  4225  001E88  1E3D               	comf	(___fttol@lval+2)^0,f,c
  4226  001E8A  1E3C               	comf	(___fttol@lval+1)^0,f,c
  4227  001E8C  6C3B               	negf	___fttol@lval^0,c
  4228  001E8E  0E00               	movlw	0
  4229  001E90  223C               	addwfc	(___fttol@lval+1)^0,f,c
  4230  001E92  223D               	addwfc	(___fttol@lval+2)^0,f,c
  4231  001E94  223E               	addwfc	(___fttol@lval+3)^0,f,c
  4232  001E96                     l2813:
  4233  001E96  C03B  F031         	movff	___fttol@lval,?___fttol
  4234  001E9A  C03C  F032         	movff	___fttol@lval+1,?___fttol+1
  4235  001E9E  C03D  F033         	movff	___fttol@lval+2,?___fttol+2
  4236  001EA2  C03E  F034         	movff	___fttol@lval+3,?___fttol+3
  4237  001EA6  0012               	return		;funcret
  4238  001EA8                     __end_of___fttol:
  4239                           	callstack 0
  4240                           
  4241 ;; *************** function ___ftsub *****************
  4242 ;; Defined at:
  4243 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftsub.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  f1              3   63[COMRAM] float 
  4246 ;;  f2              3   66[COMRAM] float 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;		None
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  3   63[COMRAM] float 
  4251 ;; Registers used:
  4252 ;;		wreg, status,2, status,0, cstack
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4258 ;;      Params:         6       0       0       0       0       0       0       0       0
  4259 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4261 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4262 ;;Total ram usage:        6 bytes
  4263 ;; Hardware stack levels used: 1
  4264 ;; Hardware stack levels required when called: 2
  4265 ;; This function calls:
  4266 ;;		___ftadd
  4267 ;; This function is called by:
  4268 ;;		_printf
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text17
  4273  0023E2                     __ptext17:
  4274                           	callstack 0
  4275  0023E2                     ___ftsub:
  4276                           	callstack 27
  4277                           
  4278                           ;incstack = 0
  4279  0023E2  5043               	movf	___ftsub@f2^0,w,c
  4280  0023E4  1044               	iorwf	(___ftsub@f2+1)^0,w,c
  4281  0023E6  1045               	iorwf	(___ftsub@f2+2)^0,w,c
  4282  0023E8  B4D8               	btfsc	status,2,c
  4283  0023EA  D006               	goto	l2745
  4284  0023EC  0E00               	movlw	0
  4285  0023EE  1A43               	xorwf	___ftsub@f2^0,f,c
  4286  0023F0  0E00               	movlw	0
  4287  0023F2  1A44               	xorwf	(___ftsub@f2+1)^0,f,c
  4288  0023F4  0E80               	movlw	128
  4289  0023F6  1A45               	xorwf	(___ftsub@f2+2)^0,f,c
  4290  0023F8                     l2745:
  4291  0023F8  C040  F034         	movff	___ftsub@f1,___ftadd@f1
  4292  0023FC  C041  F035         	movff	___ftsub@f1+1,___ftadd@f1+1
  4293  002400  C042  F036         	movff	___ftsub@f1+2,___ftadd@f1+2
  4294  002404  C043  F037         	movff	___ftsub@f2,___ftadd@f2
  4295  002408  C044  F038         	movff	___ftsub@f2+1,___ftadd@f2+1
  4296  00240C  C045  F039         	movff	___ftsub@f2+2,___ftadd@f2+2
  4297  002410  EC31  F00C         	call	___ftadd	;wreg free
  4298  002414  C034  F040         	movff	?___ftadd,?___ftsub
  4299  002418  C035  F041         	movff	?___ftadd+1,?___ftsub+1
  4300  00241C  C036  F042         	movff	?___ftadd+2,?___ftsub+2
  4301  002420  0012               	return		;funcret
  4302  002422                     __end_of___ftsub:
  4303                           	callstack 0
  4304                           
  4305 ;; *************** function ___ftadd *****************
  4306 ;; Defined at:
  4307 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftadd.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  f1              3   51[COMRAM] float 
  4310 ;;  f2              3   54[COMRAM] float 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  exp1            1   62[COMRAM] unsigned char 
  4313 ;;  exp2            1   61[COMRAM] unsigned char 
  4314 ;;  sign            1   60[COMRAM] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  3   51[COMRAM] float 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4324 ;;      Params:         6       0       0       0       0       0       0       0       0
  4325 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4326 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4327 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4328 ;;Total ram usage:       12 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; Hardware stack levels required when called: 1
  4331 ;; This function calls:
  4332 ;;		___ftpack
  4333 ;; This function is called by:
  4334 ;;		_printf
  4335 ;;		___ftsub
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text18
  4340  001862                     __ptext18:
  4341                           	callstack 0
  4342  001862                     ___ftadd:
  4343                           	callstack 27
  4344                           
  4345                           ;incstack = 0
  4346  001862  C036  F03A         	movff	___ftadd@f1+2,??___ftadd
  4347  001866  6A3B               	clrf	(??___ftadd+1)^0,c
  4348  001868  6A3C               	clrf	(??___ftadd+2)^0,c
  4349  00186A  3435               	rlcf	(___ftadd@f1+1)^0,w,c
  4350  00186C  363A               	rlcf	??___ftadd^0,f,c
  4351  00186E  E301               	bnc	u1901
  4352  001870  803B               	bsf	(??___ftadd+1)^0,0,c
  4353  001872                     u1901:
  4354  001872  503A               	movf	??___ftadd^0,w,c
  4355  001874  6E3F               	movwf	___ftadd@exp1^0,c
  4356  001876  C039  F03A         	movff	___ftadd@f2+2,??___ftadd
  4357  00187A  6A3B               	clrf	(??___ftadd+1)^0,c
  4358  00187C  6A3C               	clrf	(??___ftadd+2)^0,c
  4359  00187E  3438               	rlcf	(___ftadd@f2+1)^0,w,c
  4360  001880  363A               	rlcf	??___ftadd^0,f,c
  4361  001882  E301               	bnc	u1911
  4362  001884  803B               	bsf	(??___ftadd+1)^0,0,c
  4363  001886                     u1911:
  4364  001886  503A               	movf	??___ftadd^0,w,c
  4365  001888  6E3E               	movwf	___ftadd@exp2^0,c
  4366  00188A  503F               	movf	___ftadd@exp1^0,w,c
  4367  00188C  B4D8               	btfsc	status,2,c
  4368  00188E  D00A               	goto	u1940
  4369  001890  503E               	movf	___ftadd@exp2^0,w,c
  4370  001892  5C3F               	subwf	___ftadd@exp1^0,w,c
  4371  001894  B0D8               	btfsc	status,0,c
  4372  001896  D00D               	goto	l2251
  4373  001898  503F               	movf	___ftadd@exp1^0,w,c
  4374  00189A  5C3E               	subwf	___ftadd@exp2^0,w,c
  4375  00189C  6E3A               	movwf	??___ftadd^0,c
  4376  00189E  0E18               	movlw	24
  4377  0018A0  643A               	cpfsgt	??___ftadd^0,c
  4378  0018A2  D007               	goto	l2251
  4379  0018A4                     u1940:
  4380  0018A4  C037  F034         	movff	___ftadd@f2,?___ftadd
  4381  0018A8  C038  F035         	movff	___ftadd@f2+1,?___ftadd+1
  4382  0018AC  C039  F036         	movff	___ftadd@f2+2,?___ftadd+2
  4383  0018B0  0012               	return	
  4384  0018B2                     l2251:
  4385  0018B2  503E               	movf	___ftadd@exp2^0,w,c
  4386  0018B4  B4D8               	btfsc	status,2,c
  4387  0018B6  D00A               	goto	u1970
  4388  0018B8  503F               	movf	___ftadd@exp1^0,w,c
  4389  0018BA  5C3E               	subwf	___ftadd@exp2^0,w,c
  4390  0018BC  B0D8               	btfsc	status,0,c
  4391  0018BE  D00D               	goto	l2257
  4392  0018C0  503E               	movf	___ftadd@exp2^0,w,c
  4393  0018C2  5C3F               	subwf	___ftadd@exp1^0,w,c
  4394  0018C4  6E3A               	movwf	??___ftadd^0,c
  4395  0018C6  0E18               	movlw	24
  4396  0018C8  643A               	cpfsgt	??___ftadd^0,c
  4397  0018CA  D007               	goto	l2257
  4398  0018CC                     u1970:
  4399  0018CC  C034  F034         	movff	___ftadd@f1,?___ftadd
  4400  0018D0  C035  F035         	movff	___ftadd@f1+1,?___ftadd+1
  4401  0018D4  C036  F036         	movff	___ftadd@f1+2,?___ftadd+2
  4402  0018D8  0012               	return	
  4403  0018DA                     l2257:
  4404  0018DA  0E06               	movlw	6
  4405  0018DC  6E3D               	movwf	___ftadd@sign^0,c
  4406  0018DE  BE36               	btfsc	(___ftadd@f1+2)^0,7,c
  4407  0018E0  8E3D               	bsf	___ftadd@sign^0,7,c
  4408  0018E2  BE39               	btfsc	(___ftadd@f2+2)^0,7,c
  4409  0018E4  8C3D               	bsf	___ftadd@sign^0,6,c
  4410  0018E6  8E35               	bsf	(___ftadd@f1+1)^0,7,c
  4411  0018E8  0EFF               	movlw	255
  4412  0018EA  1634               	andwf	___ftadd@f1^0,f,c
  4413  0018EC  0EFF               	movlw	255
  4414  0018EE  1635               	andwf	(___ftadd@f1+1)^0,f,c
  4415  0018F0  0E00               	movlw	0
  4416  0018F2  1636               	andwf	(___ftadd@f1+2)^0,f,c
  4417  0018F4  8E38               	bsf	(___ftadd@f2+1)^0,7,c
  4418  0018F6  0EFF               	movlw	255
  4419  0018F8  1637               	andwf	___ftadd@f2^0,f,c
  4420  0018FA  0EFF               	movlw	255
  4421  0018FC  1638               	andwf	(___ftadd@f2+1)^0,f,c
  4422  0018FE  0E00               	movlw	0
  4423  001900  1639               	andwf	(___ftadd@f2+2)^0,f,c
  4424  001902  503E               	movf	___ftadd@exp2^0,w,c
  4425  001904  5C3F               	subwf	___ftadd@exp1^0,w,c
  4426  001906  B0D8               	btfsc	status,0,c
  4427  001908  D01B               	goto	l2283
  4428  00190A                     u2000:
  4429  00190A  90D8               	bcf	status,0,c
  4430  00190C  3637               	rlcf	___ftadd@f2^0,f,c
  4431  00190E  3638               	rlcf	(___ftadd@f2+1)^0,f,c
  4432  001910  3639               	rlcf	(___ftadd@f2+2)^0,f,c
  4433  001912  063E               	decf	___ftadd@exp2^0,f,c
  4434  001914  503F               	movf	___ftadd@exp1^0,w,c
  4435  001916  183E               	xorwf	___ftadd@exp2^0,w,c
  4436  001918  B4D8               	btfsc	status,2,c
  4437  00191A  D00D               	goto	l2281
  4438  00191C  063D               	decf	___ftadd@sign^0,f,c
  4439  00191E  C03D  F03A         	movff	___ftadd@sign,??___ftadd
  4440  001922  0E07               	movlw	7
  4441  001924  163A               	andwf	??___ftadd^0,f,c
  4442  001926  B4D8               	btfsc	status,2,c
  4443  001928  D006               	goto	l2281
  4444  00192A  D7EF               	goto	u2000
  4445  00192C                     l2279:
  4446  00192C  90D8               	bcf	status,0,c
  4447  00192E  3236               	rrcf	(___ftadd@f1+2)^0,f,c
  4448  001930  3235               	rrcf	(___ftadd@f1+1)^0,f,c
  4449  001932  3234               	rrcf	___ftadd@f1^0,f,c
  4450  001934  2A3F               	incf	___ftadd@exp1^0,f,c
  4451  001936                     l2281:
  4452  001936  503E               	movf	___ftadd@exp2^0,w,c
  4453  001938  183F               	xorwf	___ftadd@exp1^0,w,c
  4454  00193A  B4D8               	btfsc	status,2,c
  4455  00193C  D01F               	goto	u2070
  4456  00193E  D7F6               	goto	l2279
  4457  001940                     l2283:
  4458  001940  503F               	movf	___ftadd@exp1^0,w,c
  4459  001942  5C3E               	subwf	___ftadd@exp2^0,w,c
  4460  001944  B0D8               	btfsc	status,0,c
  4461  001946  D01A               	goto	u2070
  4462  001948                     u2040:
  4463  001948  90D8               	bcf	status,0,c
  4464  00194A  3634               	rlcf	___ftadd@f1^0,f,c
  4465  00194C  3635               	rlcf	(___ftadd@f1+1)^0,f,c
  4466  00194E  3636               	rlcf	(___ftadd@f1+2)^0,f,c
  4467  001950  063F               	decf	___ftadd@exp1^0,f,c
  4468  001952  503F               	movf	___ftadd@exp1^0,w,c
  4469  001954  183E               	xorwf	___ftadd@exp2^0,w,c
  4470  001956  B4D8               	btfsc	status,2,c
  4471  001958  D00D               	goto	l2293
  4472  00195A  063D               	decf	___ftadd@sign^0,f,c
  4473  00195C  C03D  F03A         	movff	___ftadd@sign,??___ftadd
  4474  001960  0E07               	movlw	7
  4475  001962  163A               	andwf	??___ftadd^0,f,c
  4476  001964  B4D8               	btfsc	status,2,c
  4477  001966  D006               	goto	l2293
  4478  001968  D7EF               	goto	u2040
  4479  00196A                     l2291:
  4480  00196A  90D8               	bcf	status,0,c
  4481  00196C  3239               	rrcf	(___ftadd@f2+2)^0,f,c
  4482  00196E  3238               	rrcf	(___ftadd@f2+1)^0,f,c
  4483  001970  3237               	rrcf	___ftadd@f2^0,f,c
  4484  001972  2A3E               	incf	___ftadd@exp2^0,f,c
  4485  001974                     l2293:
  4486  001974  503E               	movf	___ftadd@exp2^0,w,c
  4487  001976  183F               	xorwf	___ftadd@exp1^0,w,c
  4488  001978  A4D8               	btfss	status,2,c
  4489  00197A  D7F7               	goto	l2291
  4490  00197C                     u2070:
  4491  00197C  AE3D               	btfss	___ftadd@sign^0,7,c
  4492  00197E  D00C               	goto	l600
  4493  001980  0EFF               	movlw	255
  4494  001982  1A34               	xorwf	___ftadd@f1^0,f,c
  4495  001984  0EFF               	movlw	255
  4496  001986  1A35               	xorwf	(___ftadd@f1+1)^0,f,c
  4497  001988  0EFF               	movlw	255
  4498  00198A  1A36               	xorwf	(___ftadd@f1+2)^0,f,c
  4499  00198C  0E01               	movlw	1
  4500  00198E  2634               	addwf	___ftadd@f1^0,f,c
  4501  001990  0E00               	movlw	0
  4502  001992  2235               	addwfc	(___ftadd@f1+1)^0,f,c
  4503  001994  0E00               	movlw	0
  4504  001996  2236               	addwfc	(___ftadd@f1+2)^0,f,c
  4505  001998                     l600:
  4506  001998  AC3D               	btfss	___ftadd@sign^0,6,c
  4507  00199A  D00C               	goto	l2299
  4508  00199C  0EFF               	movlw	255
  4509  00199E  1A37               	xorwf	___ftadd@f2^0,f,c
  4510  0019A0  0EFF               	movlw	255
  4511  0019A2  1A38               	xorwf	(___ftadd@f2+1)^0,f,c
  4512  0019A4  0EFF               	movlw	255
  4513  0019A6  1A39               	xorwf	(___ftadd@f2+2)^0,f,c
  4514  0019A8  0E01               	movlw	1
  4515  0019AA  2637               	addwf	___ftadd@f2^0,f,c
  4516  0019AC  0E00               	movlw	0
  4517  0019AE  2238               	addwfc	(___ftadd@f2+1)^0,f,c
  4518  0019B0  0E00               	movlw	0
  4519  0019B2  2239               	addwfc	(___ftadd@f2+2)^0,f,c
  4520  0019B4                     l2299:
  4521  0019B4  0E00               	movlw	0
  4522  0019B6  6E3D               	movwf	___ftadd@sign^0,c
  4523  0019B8  5034               	movf	___ftadd@f1^0,w,c
  4524  0019BA  2637               	addwf	___ftadd@f2^0,f,c
  4525  0019BC  5035               	movf	(___ftadd@f1+1)^0,w,c
  4526  0019BE  2238               	addwfc	(___ftadd@f2+1)^0,f,c
  4527  0019C0  5036               	movf	(___ftadd@f1+2)^0,w,c
  4528  0019C2  2239               	addwfc	(___ftadd@f2+2)^0,f,c
  4529  0019C4  AE39               	btfss	(___ftadd@f2+2)^0,7,c
  4530  0019C6  D00E               	goto	l2309
  4531  0019C8  0EFF               	movlw	255
  4532  0019CA  1A37               	xorwf	___ftadd@f2^0,f,c
  4533  0019CC  0EFF               	movlw	255
  4534  0019CE  1A38               	xorwf	(___ftadd@f2+1)^0,f,c
  4535  0019D0  0EFF               	movlw	255
  4536  0019D2  1A39               	xorwf	(___ftadd@f2+2)^0,f,c
  4537  0019D4  0E01               	movlw	1
  4538  0019D6  2637               	addwf	___ftadd@f2^0,f,c
  4539  0019D8  0E00               	movlw	0
  4540  0019DA  2238               	addwfc	(___ftadd@f2+1)^0,f,c
  4541  0019DC  0E00               	movlw	0
  4542  0019DE  2239               	addwfc	(___ftadd@f2+2)^0,f,c
  4543  0019E0  0E01               	movlw	1
  4544  0019E2  6E3D               	movwf	___ftadd@sign^0,c
  4545  0019E4                     l2309:
  4546  0019E4  C037  F001         	movff	___ftadd@f2,___ftpack@arg
  4547  0019E8  C038  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4548  0019EC  C039  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4549  0019F0  C03F  F004         	movff	___ftadd@exp1,___ftpack@exp
  4550  0019F4  C03D  F005         	movff	___ftadd@sign,___ftpack@sign
  4551  0019F8  EC54  F00F         	call	___ftpack	;wreg free
  4552  0019FC  C001  F034         	movff	?___ftpack,?___ftadd
  4553  001A00  C002  F035         	movff	?___ftpack+1,?___ftadd+1
  4554  001A04  C003  F036         	movff	?___ftpack+2,?___ftadd+2
  4555  001A08  0012               	return		;funcret
  4556  001A0A                     __end_of___ftadd:
  4557                           	callstack 0
  4558                           
  4559 ;; *************** function ___ftneg *****************
  4560 ;; Defined at:
  4561 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftneg.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  f1              3    0[COMRAM] float 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  3    0[COMRAM] float 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2, status,0
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4575 ;;      Params:         3       0       0       0       0       0       0       0       0
  4576 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4578 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4579 ;;Total ram usage:        3 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_printf
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text19
  4589  002488                     __ptext19:
  4590                           	callstack 0
  4591  002488                     ___ftneg:
  4592                           	callstack 29
  4593                           
  4594                           ;incstack = 0
  4595  002488  5001               	movf	___ftneg@f1^0,w,c
  4596  00248A  1002               	iorwf	(___ftneg@f1+1)^0,w,c
  4597  00248C  1003               	iorwf	(___ftneg@f1+2)^0,w,c
  4598  00248E  B4D8               	btfsc	status,2,c
  4599  002490  D006               	goto	l650
  4600  002492  0E00               	movlw	0
  4601  002494  1A01               	xorwf	___ftneg@f1^0,f,c
  4602  002496  0E00               	movlw	0
  4603  002498  1A02               	xorwf	(___ftneg@f1+1)^0,f,c
  4604  00249A  0E80               	movlw	128
  4605  00249C  1A03               	xorwf	(___ftneg@f1+2)^0,f,c
  4606  00249E                     l650:
  4607  00249E  C001  F001         	movff	___ftneg@f1,?___ftneg
  4608  0024A2  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4609  0024A6  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4610  0024AA  0012               	return		;funcret
  4611  0024AC                     __end_of___ftneg:
  4612                           	callstack 0
  4613                           
  4614 ;; *************** function ___ftge *****************
  4615 ;; Defined at:
  4616 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftge.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  ff1             3    0[COMRAM] float 
  4619 ;;  ff2             3    3[COMRAM] float 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;		None               void
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4631 ;;      Params:         6       0       0       0       0       0       0       0       0
  4632 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4633 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4634 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4635 ;;Total ram usage:        9 bytes
  4636 ;; Hardware stack levels used: 1
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_printf
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text20
  4645  0020E8                     __ptext20:
  4646                           	callstack 0
  4647  0020E8                     ___ftge:
  4648                           	callstack 29
  4649                           
  4650                           ;incstack = 0
  4651  0020E8  AE03               	btfss	(___ftge@ff1+2)^0,7,c
  4652  0020EA  D00F               	goto	l2753
  4653  0020EC  0E00               	movlw	0
  4654  0020EE  6E07               	movwf	??___ftge^0,c
  4655  0020F0  0E00               	movlw	0
  4656  0020F2  6E08               	movwf	(??___ftge+1)^0,c
  4657  0020F4  0E80               	movlw	128
  4658  0020F6  6E09               	movwf	(??___ftge+2)^0,c
  4659  0020F8  5001               	movf	___ftge@ff1^0,w,c
  4660  0020FA  5C07               	subwf	??___ftge^0,w,c
  4661  0020FC  6E01               	movwf	___ftge@ff1^0,c
  4662  0020FE  5002               	movf	(___ftge@ff1+1)^0,w,c
  4663  002100  5808               	subwfb	(??___ftge+1)^0,w,c
  4664  002102  6E02               	movwf	(___ftge@ff1+1)^0,c
  4665  002104  5003               	movf	(___ftge@ff1+2)^0,w,c
  4666  002106  5809               	subwfb	(??___ftge+2)^0,w,c
  4667  002108  6E03               	movwf	(___ftge@ff1+2)^0,c
  4668  00210A                     l2753:
  4669  00210A  AE06               	btfss	(___ftge@ff2+2)^0,7,c
  4670  00210C  D00F               	goto	l2757
  4671  00210E  0E00               	movlw	0
  4672  002110  6E07               	movwf	??___ftge^0,c
  4673  002112  0E00               	movlw	0
  4674  002114  6E08               	movwf	(??___ftge+1)^0,c
  4675  002116  0E80               	movlw	128
  4676  002118  6E09               	movwf	(??___ftge+2)^0,c
  4677  00211A  5004               	movf	___ftge@ff2^0,w,c
  4678  00211C  5C07               	subwf	??___ftge^0,w,c
  4679  00211E  6E04               	movwf	___ftge@ff2^0,c
  4680  002120  5005               	movf	(___ftge@ff2+1)^0,w,c
  4681  002122  5808               	subwfb	(??___ftge+1)^0,w,c
  4682  002124  6E05               	movwf	(___ftge@ff2+1)^0,c
  4683  002126  5006               	movf	(___ftge@ff2+2)^0,w,c
  4684  002128  5809               	subwfb	(??___ftge+2)^0,w,c
  4685  00212A  6E06               	movwf	(___ftge@ff2+2)^0,c
  4686  00212C                     l2757:
  4687  00212C  0E00               	movlw	0
  4688  00212E  1A01               	xorwf	___ftge@ff1^0,f,c
  4689  002130  0E00               	movlw	0
  4690  002132  1A02               	xorwf	(___ftge@ff1+1)^0,f,c
  4691  002134  0E80               	movlw	128
  4692  002136  1A03               	xorwf	(___ftge@ff1+2)^0,f,c
  4693  002138  0E00               	movlw	0
  4694  00213A  1A04               	xorwf	___ftge@ff2^0,f,c
  4695  00213C  0E00               	movlw	0
  4696  00213E  1A05               	xorwf	(___ftge@ff2+1)^0,f,c
  4697  002140  0E80               	movlw	128
  4698  002142  1A06               	xorwf	(___ftge@ff2+2)^0,f,c
  4699  002144  5004               	movf	___ftge@ff2^0,w,c
  4700  002146  5C01               	subwf	___ftge@ff1^0,w,c
  4701  002148  5005               	movf	(___ftge@ff2+1)^0,w,c
  4702  00214A  5802               	subwfb	(___ftge@ff1+1)^0,w,c
  4703  00214C  5006               	movf	(___ftge@ff2+2)^0,w,c
  4704  00214E  5803               	subwfb	(___ftge@ff1+2)^0,w,c
  4705  002150  B0D8               	btfsc	status,0,c
  4706  002152  D002               	goto	l2763
  4707  002154  90D8               	bcf	status,0,c
  4708  002156  0012               	return	
  4709  002158                     l2763:
  4710  002158  80D8               	bsf	status,0,c
  4711  00215A  0012               	return		;funcret
  4712  00215C                     __end_of___ftge:
  4713                           	callstack 0
  4714                           
  4715 ;; *************** function _LCD_segunda_linea *****************
  4716 ;; Defined at:
  4717 ;;		line 146 in file "LCD.c"
  4718 ;; Parameters:    Size  Location     Type
  4719 ;;		None
  4720 ;; Auto vars:     Size  Location     Type
  4721 ;;		None
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1    wreg      void 
  4724 ;; Registers used:
  4725 ;;		wreg, status,2, status,0, cstack
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4731 ;;      Params:         0       0       0       0       0       0       0       0       0
  4732 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4734 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4735 ;;Total ram usage:        0 bytes
  4736 ;; Hardware stack levels used: 1
  4737 ;; Hardware stack levels required when called: 2
  4738 ;; This function calls:
  4739 ;;		_LCD_cmd
  4740 ;; This function is called by:
  4741 ;;		_main
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text21
  4746  00253E                     __ptext21:
  4747                           	callstack 0
  4748  00253E                     _LCD_segunda_linea:
  4749                           	callstack 28
  4750                           
  4751                           ;LCD.c: 147: LCD_cmd(0xC0);
  4752                           
  4753                           ;incstack = 0
  4754  00253E  0EC0               	movlw	192
  4755  002540  EC94  F012         	call	_LCD_cmd
  4756  002544  0012               	return		;funcret
  4757  002546                     __end_of_LCD_segunda_linea:
  4758                           	callstack 0
  4759                           
  4760 ;; *************** function _LCD_printf *****************
  4761 ;; Defined at:
  4762 ;;		line 97 in file "LCD.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  dato            2    2[COMRAM] PTR unsigned char 
  4765 ;;		 -> LCD_integer@st(8), STR_3(6), 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;		None
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      void 
  4770 ;; Registers used:
  4771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4777 ;;      Params:         2       0       0       0       0       0       0       0       0
  4778 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4780 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4781 ;;Total ram usage:        2 bytes
  4782 ;; Hardware stack levels used: 1
  4783 ;; Hardware stack levels required when called: 2
  4784 ;; This function calls:
  4785 ;;		_LCD_dato
  4786 ;; This function is called by:
  4787 ;;		_main
  4788 ;;		_LCD_integer
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text22
  4793  00234E                     __ptext22:
  4794                           	callstack 0
  4795  00234E                     _LCD_printf:
  4796                           	callstack 28
  4797                           
  4798                           ;LCD.c: 98: while (*dato){
  4799                           
  4800                           ;incstack = 0
  4801  00234E  D014               	goto	l3187
  4802  002350                     l3183:
  4803                           
  4804                           ;LCD.c: 99: LCD_dato(*dato);
  4805  002350  C003  FFF6         	movff	LCD_printf@dato,tblptrl
  4806  002354  C004  FFF7         	movff	LCD_printf@dato+1,tblptrh
  4807  002358  6AF8               	clrf	tblptru,c
  4808  00235A  0E07               	movlw	(high __ramtop+-1)
  4809  00235C  64F7               	cpfsgt	tblptrh,c
  4810  00235E  D003               	bra	u3397
  4811  002360  0008               	tblrd		*
  4812  002362  50F5               	movf	tablat,w,c
  4813  002364  D005               	bra	u3390
  4814  002366                     u3397:
  4815  002366  CFF6 FFE9          	movff	tblptrl,fsr0l
  4816  00236A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4817  00236E  50EF               	movf	indf0,w,c
  4818  002370                     u3390:
  4819  002370  EC8E  F012         	call	_LCD_dato
  4820                           
  4821                           ;LCD.c: 100: dato++;
  4822  002374  4A03               	infsnz	LCD_printf@dato^0,f,c
  4823  002376  2A04               	incf	(LCD_printf@dato+1)^0,f,c
  4824  002378                     l3187:
  4825  002378  C003  FFF6         	movff	LCD_printf@dato,tblptrl
  4826  00237C  C004  FFF7         	movff	LCD_printf@dato+1,tblptrh
  4827  002380  6AF8               	clrf	tblptru,c
  4828  002382  0E07               	movlw	(high __ramtop+-1)
  4829  002384  64F7               	cpfsgt	tblptrh,c
  4830  002386  D003               	bra	u3407
  4831  002388  0008               	tblrd		*
  4832  00238A  50F5               	movf	tablat,w,c
  4833  00238C  D005               	bra	u3400
  4834  00238E                     u3407:
  4835  00238E  CFF6 FFE9          	movff	tblptrl,fsr0l
  4836  002392  CFF7 FFEA          	movff	tblptrh,fsr0h
  4837  002396  50EF               	movf	indf0,w,c
  4838  002398                     u3400:
  4839  002398  0900               	iorlw	0
  4840  00239A  B4D8               	btfsc	status,2,c
  4841  00239C  0012               	return	
  4842  00239E  D7D8               	goto	l3183
  4843  0023A0                     __end_of_LCD_printf:
  4844                           	callstack 0
  4845                           
  4846 ;; *************** function _LCD_dato *****************
  4847 ;; Defined at:
  4848 ;;		line 85 in file "LCD.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;  dato            1    wreg     unsigned char 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  dato            1    1[COMRAM] unsigned char 
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2, status,0, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4862 ;;      Params:         0       0       0       0       0       0       0       0       0
  4863 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4865 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4866 ;;Total ram usage:        1 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; Hardware stack levels required when called: 1
  4869 ;; This function calls:
  4870 ;;		_LCD_write
  4871 ;; This function is called by:
  4872 ;;		_putch
  4873 ;;		_LCD_printf
  4874 ;;		_LCD_custom_char
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text23
  4879  00251C                     __ptext23:
  4880                           	callstack 0
  4881  00251C                     _LCD_dato:
  4882                           	callstack 27
  4883                           
  4884                           ;incstack = 0
  4885                           ;LCD_dato@dato stored from wreg
  4886  00251C  6E02               	movwf	LCD_dato@dato^0,c
  4887                           
  4888                           ;LCD.c: 88: LATDbits.LATD3 = 1;
  4889  00251E  868C               	bsf	140,3,c	;volatile
  4890                           
  4891                           ;LCD.c: 89: LCD_write(dato);
  4892  002520  5002               	movf	LCD_dato@dato^0,w,c
  4893  002522  ECE6  F010         	call	_LCD_write
  4894  002526  0012               	return		;funcret
  4895  002528                     __end_of_LCD_dato:
  4896                           	callstack 0
  4897                           
  4898 ;; *************** function _LCD_init *****************
  4899 ;; Defined at:
  4900 ;;		line 18 in file "LCD.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4914 ;;      Params:         0       0       0       0       0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4916 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4917 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4918 ;;Total ram usage:        1 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; Hardware stack levels required when called: 2
  4921 ;; This function calls:
  4922 ;;		_LCD_cmd
  4923 ;; This function is called by:
  4924 ;;		_main
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text24
  4929  002422                     __ptext24:
  4930                           	callstack 0
  4931  002422                     _LCD_init:
  4932                           	callstack 28
  4933                           
  4934                           ;LCD.c: 20: TRISDbits.TRISD4 = 0;
  4935                           
  4936                           ;incstack = 0
  4937  002422  9895               	bcf	149,4,c	;volatile
  4938                           
  4939                           ;LCD.c: 21: TRISDbits.TRISD5 = 0;
  4940  002424  9A95               	bcf	149,5,c	;volatile
  4941                           
  4942                           ;LCD.c: 22: TRISDbits.TRISD6 = 0;
  4943  002426  9C95               	bcf	149,6,c	;volatile
  4944                           
  4945                           ;LCD.c: 23: TRISDbits.TRISD7 = 0;
  4946  002428  9E95               	bcf	149,7,c	;volatile
  4947                           
  4948                           ;LCD.c: 25: TRISDbits.TRISD3 = 0;
  4949  00242A  9695               	bcf	149,3,c	;volatile
  4950                           
  4951                           ;LCD.c: 26: TRISDbits.TRISD2 = 0;
  4952  00242C  9495               	bcf	149,2,c	;volatile
  4953                           
  4954                           ;LCD.c: 27: LATDbits.LATD3 = 0;
  4955  00242E  968C               	bcf	140,3,c	;volatile
  4956                           
  4957                           ;LCD.c: 28: LATDbits.LATD2 = 0;
  4958  002430  948C               	bcf	140,2,c	;volatile
  4959                           
  4960                           ;LCD.c: 30: LATDbits.LATD4 = 0;
  4961  002432  988C               	bcf	140,4,c	;volatile
  4962                           
  4963                           ;LCD.c: 31: LATDbits.LATD5 = 0;
  4964  002434  9A8C               	bcf	140,5,c	;volatile
  4965                           
  4966                           ;LCD.c: 32: LATDbits.LATD6 = 0;
  4967  002436  9C8C               	bcf	140,6,c	;volatile
  4968                           
  4969                           ;LCD.c: 33: LATDbits.LATD7 = 0;
  4970  002438  9E8C               	bcf	140,7,c	;volatile
  4971                           
  4972                           ;LCD.c: 35: _delay((unsigned long)((50)*(8000000/4000.0)));
  4973  00243A  0E82               	movlw	130
  4974  00243C  6E03               	movwf	??_LCD_init^0,c
  4975  00243E  0EDE               	movlw	222
  4976  002440                     u3527:
  4977  002440  2EE8               	decfsz	wreg,f,c
  4978  002442  D7FE               	bra	u3527
  4979  002444  2E03               	decfsz	??_LCD_init^0,f,c
  4980  002446  D7FC               	bra	u3527
  4981                           
  4982                           ;LCD.c: 36: LCD_cmd(0x02);
  4983  002448  0E02               	movlw	2
  4984  00244A  EC94  F012         	call	_LCD_cmd
  4985                           
  4986                           ;LCD.c: 37: LCD_cmd(0x28);
  4987  00244E  0E28               	movlw	40
  4988  002450  EC94  F012         	call	_LCD_cmd
  4989                           
  4990                           ;LCD.c: 38: LCD_cmd(0x0C);
  4991  002454  0E0C               	movlw	12
  4992  002456  EC94  F012         	call	_LCD_cmd
  4993                           
  4994                           ;LCD.c: 39: LCD_cmd(0x06);
  4995  00245A  0E06               	movlw	6
  4996  00245C  EC94  F012         	call	_LCD_cmd
  4997  002460  0012               	return		;funcret
  4998  002462                     __end_of_LCD_init:
  4999                           	callstack 0
  5000                           
  5001 ;; *************** function _LCD_clear *****************
  5002 ;; Defined at:
  5003 ;;		line 154 in file "LCD.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;		None
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;		None
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  1    wreg      void 
  5010 ;; Registers used:
  5011 ;;		wreg, status,2, status,0, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5017 ;;      Params:         0       0       0       0       0       0       0       0       0
  5018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5019 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5020 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5021 ;;Total ram usage:        1 bytes
  5022 ;; Hardware stack levels used: 1
  5023 ;; Hardware stack levels required when called: 2
  5024 ;; This function calls:
  5025 ;;		_LCD_cmd
  5026 ;; This function is called by:
  5027 ;;		_main
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text25
  5032  0024EE                     __ptext25:
  5033                           	callstack 0
  5034  0024EE                     _LCD_clear:
  5035                           	callstack 28
  5036                           
  5037                           ;LCD.c: 155: LCD_cmd(0x01);
  5038                           
  5039                           ;incstack = 0
  5040  0024EE  0E01               	movlw	1
  5041  0024F0  EC94  F012         	call	_LCD_cmd
  5042                           
  5043                           ;LCD.c: 156: _delay((unsigned long)((2)*(8000000/4000.0)));
  5044  0024F4  0E06               	movlw	6
  5045  0024F6  6E03               	movwf	??_LCD_clear^0,c
  5046  0024F8  0E30               	movlw	48
  5047  0024FA                     u3537:
  5048  0024FA  2EE8               	decfsz	wreg,f,c
  5049  0024FC  D7FE               	bra	u3537
  5050  0024FE  2E03               	decfsz	??_LCD_clear^0,f,c
  5051  002500  D7FC               	bra	u3537
  5052  002502  D000               	nop2	
  5053  002504  0012               	return		;funcret
  5054  002506                     __end_of_LCD_clear:
  5055                           	callstack 0
  5056                           
  5057 ;; *************** function _LCD_cmd *****************
  5058 ;; Defined at:
  5059 ;;		line 71 in file "LCD.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  dato            1    wreg     unsigned char 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  dato            1    1[COMRAM] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0
  5074 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5076 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5077 ;;Total ram usage:        1 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; Hardware stack levels required when called: 1
  5080 ;; This function calls:
  5081 ;;		_LCD_write
  5082 ;; This function is called by:
  5083 ;;		_LCD_init
  5084 ;;		_LCD_segunda_linea
  5085 ;;		_LCD_clear
  5086 ;;		_LCD_goto
  5087 ;;		_LCD_cursor
  5088 ;;		_LCD_home
  5089 ;;		_LCD_custom_char
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text26
  5094  002528                     __ptext26:
  5095                           	callstack 0
  5096  002528                     _LCD_cmd:
  5097                           	callstack 28
  5098                           
  5099                           ;incstack = 0
  5100                           ;LCD_cmd@dato stored from wreg
  5101  002528  6E02               	movwf	LCD_cmd@dato^0,c
  5102                           
  5103                           ;LCD.c: 74: LATDbits.LATD3 = 0;
  5104  00252A  968C               	bcf	140,3,c	;volatile
  5105                           
  5106                           ;LCD.c: 75: LCD_write(dato);
  5107  00252C  5002               	movf	LCD_cmd@dato^0,w,c
  5108  00252E  ECE6  F010         	call	_LCD_write
  5109  002532  0012               	return		;funcret
  5110  002534                     __end_of_LCD_cmd:
  5111                           	callstack 0
  5112                           
  5113 ;; *************** function _LCD_write *****************
  5114 ;; Defined at:
  5115 ;;		line 47 in file "LCD.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;  dato            1    wreg     unsigned char 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  dato            1    0[COMRAM] unsigned char 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  1    wreg      void 
  5122 ;; Registers used:
  5123 ;;		wreg, status,2, status,0
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5129 ;;      Params:         0       0       0       0       0       0       0       0       0
  5130 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5132 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5133 ;;Total ram usage:        1 bytes
  5134 ;; Hardware stack levels used: 1
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_LCD_cmd
  5139 ;;		_LCD_dato
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text27
  5144  0021CC                     __ptext27:
  5145                           	callstack 0
  5146  0021CC                     _LCD_write:
  5147                           	callstack 27
  5148                           
  5149                           ;incstack = 0
  5150                           ;LCD_write@dato stored from wreg
  5151  0021CC  6E01               	movwf	LCD_write@dato^0,c
  5152                           
  5153                           ;LCD.c: 49: if (dato & (1<<4)) LATDbits.LATD4 = 1; else LATDbits.LATD4 = 0;
  5154  0021CE  A801               	btfss	LCD_write@dato^0,4,c
  5155  0021D0  D002               	goto	l72
  5156  0021D2  888C               	bsf	140,4,c	;volatile
  5157  0021D4  D001               	goto	l2171
  5158  0021D6                     l72:
  5159  0021D6  988C               	bcf	140,4,c	;volatile
  5160  0021D8                     l2171:
  5161                           
  5162                           ;LCD.c: 50: if (dato & (1<<5)) LATDbits.LATD5 = 1; else LATDbits.LATD5 = 0;
  5163  0021D8  AA01               	btfss	LCD_write@dato^0,5,c
  5164  0021DA  D002               	goto	l74
  5165  0021DC  8A8C               	bsf	140,5,c	;volatile
  5166  0021DE  D001               	goto	l2175
  5167  0021E0                     l74:
  5168  0021E0  9A8C               	bcf	140,5,c	;volatile
  5169  0021E2                     l2175:
  5170                           
  5171                           ;LCD.c: 51: if (dato & (1<<6)) LATDbits.LATD6 = 1; else LATDbits.LATD6 = 0;
  5172  0021E2  AC01               	btfss	LCD_write@dato^0,6,c
  5173  0021E4  D002               	goto	l76
  5174  0021E6  8C8C               	bsf	140,6,c	;volatile
  5175  0021E8  D001               	goto	l2179
  5176  0021EA                     l76:
  5177  0021EA  9C8C               	bcf	140,6,c	;volatile
  5178  0021EC                     l2179:
  5179                           
  5180                           ;LCD.c: 52: if (dato & (1<<7)) LATDbits.LATD7 = 1; else LATDbits.LATD7 = 0;
  5181  0021EC  AE01               	btfss	LCD_write@dato^0,7,c
  5182  0021EE  D002               	goto	l78
  5183  0021F0  8E8C               	bsf	140,7,c	;volatile
  5184  0021F2  D001               	goto	l79
  5185  0021F4                     l78:
  5186  0021F4  9E8C               	bcf	140,7,c	;volatile
  5187  0021F6                     l79:
  5188                           
  5189                           ;LCD.c: 53: LATDbits.LATD2 = 1;
  5190  0021F6  848C               	bsf	140,2,c	;volatile
  5191                           
  5192                           ;LCD.c: 54: __nop();
  5193  0021F8  F000               	nop	
  5194                           
  5195                           ;LCD.c: 55: LATDbits.LATD2 = 0;
  5196  0021FA  948C               	bcf	140,2,c	;volatile
  5197                           
  5198                           ;LCD.c: 57: dato = (dato << 4);
  5199  0021FC  3801               	swapf	LCD_write@dato^0,w,c
  5200  0021FE  0BF0               	andlw	240
  5201  002200  6E01               	movwf	LCD_write@dato^0,c
  5202                           
  5203                           ;LCD.c: 58: if (dato & (1<<4)) LATDbits.LATD4 = 1; else LATDbits.LATD4 = 0;
  5204  002202  A801               	btfss	LCD_write@dato^0,4,c
  5205  002204  D002               	goto	l80
  5206  002206  888C               	bsf	140,4,c	;volatile
  5207  002208  D001               	goto	l81
  5208  00220A                     l80:
  5209  00220A  988C               	bcf	140,4,c	;volatile
  5210  00220C                     l81:
  5211                           
  5212                           ;LCD.c: 59: if (dato & (1<<5)) LATDbits.LATD5 = 1; else LATDbits.LATD5 = 0;
  5213  00220C  AA01               	btfss	LCD_write@dato^0,5,c
  5214  00220E  D002               	goto	l82
  5215  002210  8A8C               	bsf	140,5,c	;volatile
  5216  002212  D001               	goto	l83
  5217  002214                     l82:
  5218  002214  9A8C               	bcf	140,5,c	;volatile
  5219  002216                     l83:
  5220                           
  5221                           ;LCD.c: 60: if (dato & (1<<6)) LATDbits.LATD6 = 1; else LATDbits.LATD6 = 0;
  5222  002216  AC01               	btfss	LCD_write@dato^0,6,c
  5223  002218  D002               	goto	l84
  5224  00221A  8C8C               	bsf	140,6,c	;volatile
  5225  00221C  D001               	goto	l85
  5226  00221E                     l84:
  5227  00221E  9C8C               	bcf	140,6,c	;volatile
  5228  002220                     l85:
  5229                           
  5230                           ;LCD.c: 61: if (dato & (1<<7)) LATDbits.LATD7 = 1; else LATDbits.LATD7 = 0;
  5231  002220  AE01               	btfss	LCD_write@dato^0,7,c
  5232  002222  D002               	goto	l86
  5233  002224  8E8C               	bsf	140,7,c	;volatile
  5234  002226  D001               	goto	l87
  5235  002228                     l86:
  5236  002228  9E8C               	bcf	140,7,c	;volatile
  5237  00222A                     l87:
  5238                           
  5239                           ;LCD.c: 62: LATDbits.LATD2 = 1;
  5240  00222A  848C               	bsf	140,2,c	;volatile
  5241                           
  5242                           ;LCD.c: 63: __nop();
  5243  00222C  F000               	nop	
  5244                           
  5245                           ;LCD.c: 64: LATDbits.LATD2 = 0;
  5246  00222E  948C               	bcf	140,2,c	;volatile
  5247                           
  5248                           ;LCD.c: 65: _delay((unsigned long)((50)*(8000000/4000000.0)));
  5249  002230  0E21               	movlw	33
  5250  002232                     u3547:
  5251  002232  2EE8               	decfsz	wreg,f,c
  5252  002234  D7FE               	bra	u3547
  5253  002236  F000               	nop	
  5254  002238  0012               	return		;funcret
  5255  00223A                     __end_of_LCD_write:
  5256                           	callstack 0
  5257                           
  5258 ;; *************** function _DHT22_read *****************
  5259 ;; Defined at:
  5260 ;;		line 10 in file "DHT22.h"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  dht_temperat    2   41[COMRAM] PTR float 
  5263 ;;		 -> main@temperatura(3), 
  5264 ;;  dht_humedad     2   43[COMRAM] PTR float 
  5265 ;;		 -> main@humedad(3), 
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;  result          1   49[COMRAM] unsigned char 
  5268 ;;  rawtemperatu    2   55[COMRAM] unsigned int 
  5269 ;;  rawhumidity     2   47[COMRAM] unsigned int 
  5270 ;;  bits            5   50[COMRAM] unsigned char [5]
  5271 ;;  j               1   58[COMRAM] unsigned char 
  5272 ;;  i               1   57[COMRAM] unsigned char 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  1    wreg      unsigned char 
  5275 ;; Registers used:
  5276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5282 ;;      Params:         4       0       0       0       0       0       0       0       0
  5283 ;;      Locals:        12       0       0       0       0       0       0       0       0
  5284 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5285 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5286 ;;Total ram usage:       18 bytes
  5287 ;; Hardware stack levels used: 1
  5288 ;; Hardware stack levels required when called: 2
  5289 ;; This function calls:
  5290 ;;		___ftdiv
  5291 ;;		___ftmul
  5292 ;;		___lwtoft
  5293 ;; This function is called by:
  5294 ;;		_main
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           	psect	text28
  5299  0016B0                     __ptext28:
  5300                           	callstack 0
  5301  0016B0                     _DHT22_read:
  5302                           	callstack 28
  5303                           
  5304                           ;DHT22.h: 15: LATCbits.LATC2 = 0;
  5305                           
  5306                           ;incstack = 0
  5307  0016B0  948B               	bcf	139,2,c	;volatile
  5308                           
  5309                           ;DHT22.h: 16: _delay((unsigned long)((18)*(8000000/4000.0)));
  5310  0016B2  0E2F               	movlw	47
  5311  0016B4  6E2E               	movwf	??_DHT22_read^0,c
  5312  0016B6  0EC0               	movlw	192
  5313  0016B8                     u3557:
  5314  0016B8  2EE8               	decfsz	wreg,f,c
  5315  0016BA  D7FE               	bra	u3557
  5316  0016BC  2E2E               	decfsz	??_DHT22_read^0,f,c
  5317  0016BE  D7FC               	bra	u3557
  5318                           
  5319                           ;DHT22.h: 18: LATCbits.LATC2 = 1;
  5320  0016C0  848B               	bsf	139,2,c	;volatile
  5321                           
  5322                           ;DHT22.h: 19: _delay((unsigned long)((40)*(8000000/4000000.0)));
  5323  0016C2  0E1A               	movlw	26
  5324  0016C4                     u3567:
  5325  0016C4  2EE8               	decfsz	wreg,f,c
  5326  0016C6  D7FE               	bra	u3567
  5327  0016C8  D000               	nop2	
  5328                           
  5329                           ;DHT22.h: 21: TRISCbits.TRISC2 = 1;
  5330  0016CA  8494               	bsf	148,2,c	;volatile
  5331                           
  5332                           ;DHT22.h: 23: if(PORTCbits.RC2){
  5333  0016CC  A482               	btfss	130,2,c	;volatile
  5334  0016CE  D004               	goto	l2867
  5335  0016D0                     u2850:
  5336                           
  5337                           ;DHT22.h: 24: TRISCbits.TRISC2 = 0;
  5338  0016D0  9494               	bcf	148,2,c	;volatile
  5339                           
  5340                           ;DHT22.h: 25: PORTCbits.RC2 = 1;
  5341  0016D2  8482               	bsf	130,2,c	;volatile
  5342  0016D4                     l2863:
  5343                           
  5344                           ;DHT22.h: 26: return 0;
  5345  0016D4  0E00               	movlw	0
  5346  0016D6  0012               	return	
  5347  0016D8                     l2867:
  5348                           
  5349                           ;DHT22.h: 27: };DHT22.h: 28: _delay((unsigned long)((80)*(8000000/4000000.0)));
  5350  0016D8  0E35               	movlw	53
  5351  0016DA                     u3577:
  5352  0016DA  2EE8               	decfsz	wreg,f,c
  5353  0016DC  D7FE               	bra	u3577
  5354  0016DE  F000               	nop	
  5355                           
  5356                           ;DHT22.h: 30: if(!PORTCbits.RC2){
  5357  0016E0  A482               	btfss	130,2,c	;volatile
  5358  0016E2  D7F6               	goto	u2850
  5359                           
  5360                           ;DHT22.h: 34: };DHT22.h: 35: _delay((unsigned long)((80)*(8000000/4000000.0)));
  5361                           
  5362                           ;DHT22.h: 32: PORTCbits.RC2 = 1;
  5363                           
  5364                           ;DHT22.h: 31: TRISCbits.TRISC2 = 0;
  5365  0016E4  0E35               	movlw	53
  5366  0016E6                     u3587:
  5367  0016E6  2EE8               	decfsz	wreg,f,c
  5368  0016E8  D7FE               	bra	u3587
  5369  0016EA  F000               	nop	
  5370                           
  5371                           ;DHT22.h: 37: for (j=0; j<5; j++)
  5372  0016EC  0E00               	movlw	0
  5373  0016EE  6E3B               	movwf	DHT22_read@j^0,c
  5374  0016F0                     l2885:
  5375                           
  5376                           ;DHT22.h: 38: {;DHT22.h: 39: uint8_t result=0;
  5377  0016F0  0E00               	movlw	0
  5378  0016F2  6E32               	movwf	DHT22_read@result^0,c
  5379                           
  5380                           ;DHT22.h: 40: for (i=0; i<8; i++)
  5381  0016F4  0E00               	movlw	0
  5382  0016F6  6E3A               	movwf	DHT22_read@i^0,c
  5383  0016F8                     l33:
  5384  0016F8  A482               	btfss	130,2,c	;volatile
  5385  0016FA  D7FE               	goto	l33
  5386                           
  5387                           ;DHT22.h: 43: _delay((unsigned long)((35)*(8000000/4000000.0)));
  5388  0016FC  0E17               	movlw	23
  5389  0016FE                     u3597:
  5390  0016FE  2EE8               	decfsz	wreg,f,c
  5391  001700  D7FE               	bra	u3597
  5392  001702  F000               	nop	
  5393                           
  5394                           ;DHT22.h: 45: if (PORTCbits.RC2)
  5395  001704  A482               	btfss	130,2,c	;volatile
  5396  001706  D00D               	goto	l37
  5397                           
  5398                           ;DHT22.h: 46: result |= (1<<(7-i));
  5399  001708  503A               	movf	DHT22_read@i^0,w,c
  5400  00170A  0807               	sublw	7
  5401  00170C  6E2E               	movwf	??_DHT22_read^0,c
  5402  00170E  0E01               	movlw	1
  5403  001710  6E2F               	movwf	(??_DHT22_read+1)^0,c
  5404  001712  2A2E               	incf	??_DHT22_read^0,f,c
  5405  001714  D002               	goto	u2894
  5406  001716                     u2895:
  5407  001716  90D8               	bcf	status,0,c
  5408  001718  362F               	rlcf	(??_DHT22_read+1)^0,f,c
  5409  00171A                     u2894:
  5410  00171A  2E2E               	decfsz	??_DHT22_read^0,f,c
  5411  00171C  D7FC               	goto	u2895
  5412  00171E  502F               	movf	(??_DHT22_read+1)^0,w,c
  5413  001720  1232               	iorwf	DHT22_read@result^0,f,c
  5414  001722                     l37:
  5415  001722  B482               	btfsc	130,2,c	;volatile
  5416  001724  D7FE               	goto	l37
  5417  001726  2A3A               	incf	DHT22_read@i^0,f,c
  5418  001728  0E07               	movlw	7
  5419  00172A  643A               	cpfsgt	DHT22_read@i^0,c
  5420  00172C  D7E5               	goto	l33
  5421                           
  5422                           ;DHT22.h: 49: };DHT22.h: 50: bits[j] = result;
  5423  00172E  0E33               	movlw	low DHT22_read@bits
  5424  001730  243B               	addwf	DHT22_read@j^0,w,c
  5425  001732  6ED9               	movwf	fsr2l,c
  5426  001734  6ADA               	clrf	fsr2h,c
  5427  001736  0E00               	movlw	high DHT22_read@bits
  5428  001738  22DA               	addwfc	fsr2h,f,c
  5429  00173A  C032  FFDF         	movff	DHT22_read@result,indf2
  5430  00173E  2A3B               	incf	DHT22_read@j^0,f,c
  5431  001740  0E04               	movlw	4
  5432  001742  643B               	cpfsgt	DHT22_read@j^0,c
  5433  001744  D7D5               	goto	l2885
  5434                           
  5435                           ;DHT22.h: 51: };DHT22.h: 53: TRISCbits.TRISC2 = 0;
  5436  001746  9494               	bcf	148,2,c	;volatile
  5437                           
  5438                           ;DHT22.h: 54: PORTCbits.RC2 = 1;
  5439  001748  8482               	bsf	130,2,c	;volatile
  5440                           
  5441                           ;DHT22.h: 57: if ((uint8_t) (bits[0] + bits[1] + bits[2] +bits[3]) == bits[4])
  5442  00174A  5034               	movf	(DHT22_read@bits+1)^0,w,c
  5443  00174C  2435               	addwf	(DHT22_read@bits+2)^0,w,c
  5444  00174E  2436               	addwf	(DHT22_read@bits+3)^0,w,c
  5445  001750  2433               	addwf	DHT22_read@bits^0,w,c
  5446  001752  1837               	xorwf	(DHT22_read@bits+4)^0,w,c
  5447  001754  A4D8               	btfss	status,2,c
  5448  001756  D7BE               	goto	l2863
  5449                           
  5450                           ;DHT22.h: 58: {;DHT22.h: 60: uint16_t rawhumidity = bits[0]<<8 | bits[1];
  5451  001758  5034               	movf	(DHT22_read@bits+1)^0,w,c
  5452  00175A  C033  F02E         	movff	DHT22_read@bits,??_DHT22_read
  5453  00175E  6A2F               	clrf	(??_DHT22_read+1)^0,c
  5454  001760  C02E  F02F         	movff	??_DHT22_read,??_DHT22_read+1
  5455  001764  6A2E               	clrf	??_DHT22_read^0,c
  5456  001766  102E               	iorwf	??_DHT22_read^0,w,c
  5457  001768  6E30               	movwf	DHT22_read@rawhumidity^0,c
  5458  00176A  502F               	movf	(??_DHT22_read+1)^0,w,c
  5459  00176C  6E31               	movwf	(DHT22_read@rawhumidity+1)^0,c
  5460                           
  5461                           ;DHT22.h: 61: uint16_t rawtemperature = bits[2] <<8 | bits[3];
  5462  00176E  5036               	movf	(DHT22_read@bits+3)^0,w,c
  5463  001770  C035  F02E         	movff	DHT22_read@bits+2,??_DHT22_read
  5464  001774  6A2F               	clrf	(??_DHT22_read+1)^0,c
  5465  001776  C02E  F02F         	movff	??_DHT22_read,??_DHT22_read+1
  5466  00177A  6A2E               	clrf	??_DHT22_read^0,c
  5467  00177C  102E               	iorwf	??_DHT22_read^0,w,c
  5468  00177E  6E38               	movwf	DHT22_read@rawtemperature^0,c
  5469  001780  502F               	movf	(??_DHT22_read+1)^0,w,c
  5470  001782  6E39               	movwf	(DHT22_read@rawtemperature+1)^0,c
  5471                           
  5472                           ;DHT22.h: 63: if (rawtemperature & 0x8000){
  5473  001784  AE39               	btfss	(DHT22_read@rawtemperature+1)^0,7,c
  5474  001786  D02F               	goto	l2915
  5475                           
  5476                           ;DHT22.h: 64: *dht_temperatura = (float)((rawtemperature & 0x7fff) / 10.0)* -1.0;
  5477  001788  0E00               	movlw	0
  5478  00178A  6E0F               	movwf	___ftdiv@f2^0,c
  5479  00178C  0E20               	movlw	32
  5480  00178E  6E10               	movwf	(___ftdiv@f2+1)^0,c
  5481  001790  0E41               	movlw	65
  5482  001792  6E11               	movwf	(___ftdiv@f2+2)^0,c
  5483  001794  0EFF               	movlw	255
  5484  001796  1438               	andwf	DHT22_read@rawtemperature^0,w,c
  5485  001798  6E09               	movwf	___lwtoft@c^0,c
  5486  00179A  0E7F               	movlw	127
  5487  00179C  1439               	andwf	(DHT22_read@rawtemperature+1)^0,w,c
  5488  00179E  6E0A               	movwf	(___lwtoft@c+1)^0,c
  5489  0017A0  EC56  F012         	call	___lwtoft	;wreg free
  5490  0017A4  C009  F00C         	movff	?___lwtoft,___ftdiv@f1
  5491  0017A8  C00A  F00D         	movff	?___lwtoft+1,___ftdiv@f1+1
  5492  0017AC  C00B  F00E         	movff	?___lwtoft+2,___ftdiv@f1+2
  5493  0017B0  EC78  F00E         	call	___ftdiv	;wreg free
  5494  0017B4  C00C  F01B         	movff	?___ftdiv,___ftmul@f1
  5495  0017B8  C00D  F01C         	movff	?___ftdiv+1,___ftmul@f1+1
  5496  0017BC  C00E  F01D         	movff	?___ftdiv+2,___ftmul@f1+2
  5497  0017C0  0E00               	movlw	0
  5498  0017C2  6E1E               	movwf	___ftmul@f2^0,c
  5499  0017C4  0E80               	movlw	128
  5500  0017C6  6E1F               	movwf	(___ftmul@f2+1)^0,c
  5501  0017C8  0EBF               	movlw	191
  5502  0017CA  6E20               	movwf	(___ftmul@f2+2)^0,c
  5503  0017CC  ECFE  F00D         	call	___ftmul	;wreg free
  5504  0017D0  C02A  FFD9         	movff	DHT22_read@dht_temperatura,fsr2l
  5505  0017D4  C02B  FFDA         	movff	DHT22_read@dht_temperatura+1,fsr2h
  5506  0017D8  C01B  FFDE         	movff	?___ftmul,postinc2
  5507  0017DC  C01C  FFDE         	movff	?___ftmul+1,postinc2
  5508  0017E0  C01D  FFDE         	movff	?___ftmul+2,postinc2
  5509                           
  5510                           ;DHT22.h: 65: }else{
  5511  0017E4  D01E               	goto	l42
  5512  0017E6                     l2915:
  5513                           
  5514                           ;DHT22.h: 66: *dht_temperatura = (float)(rawtemperature)/10.0;
  5515  0017E6  C038  F009         	movff	DHT22_read@rawtemperature,___lwtoft@c
  5516  0017EA  C039  F00A         	movff	DHT22_read@rawtemperature+1,___lwtoft@c+1
  5517  0017EE  EC56  F012         	call	___lwtoft	;wreg free
  5518  0017F2  C009  F00C         	movff	?___lwtoft,___ftdiv@f1
  5519  0017F6  C00A  F00D         	movff	?___lwtoft+1,___ftdiv@f1+1
  5520  0017FA  C00B  F00E         	movff	?___lwtoft+2,___ftdiv@f1+2
  5521  0017FE  0E00               	movlw	0
  5522  001800  6E0F               	movwf	___ftdiv@f2^0,c
  5523  001802  0E20               	movlw	32
  5524  001804  6E10               	movwf	(___ftdiv@f2+1)^0,c
  5525  001806  0E41               	movlw	65
  5526  001808  6E11               	movwf	(___ftdiv@f2+2)^0,c
  5527  00180A  EC78  F00E         	call	___ftdiv	;wreg free
  5528  00180E  C02A  FFD9         	movff	DHT22_read@dht_temperatura,fsr2l
  5529  001812  C02B  FFDA         	movff	DHT22_read@dht_temperatura+1,fsr2h
  5530  001816  C00C  FFDE         	movff	?___ftdiv,postinc2
  5531  00181A  C00D  FFDE         	movff	?___ftdiv+1,postinc2
  5532  00181E  C00E  FFDE         	movff	?___ftdiv+2,postinc2
  5533  001822                     l42:
  5534                           
  5535                           ;DHT22.h: 67: };DHT22.h: 69: *dht_humedad = (float)((rawhumidity)/10.0);
  5536  001822  C030  F009         	movff	DHT22_read@rawhumidity,___lwtoft@c
  5537  001826  C031  F00A         	movff	DHT22_read@rawhumidity+1,___lwtoft@c+1
  5538  00182A  EC56  F012         	call	___lwtoft	;wreg free
  5539  00182E  C009  F00C         	movff	?___lwtoft,___ftdiv@f1
  5540  001832  C00A  F00D         	movff	?___lwtoft+1,___ftdiv@f1+1
  5541  001836  C00B  F00E         	movff	?___lwtoft+2,___ftdiv@f1+2
  5542  00183A  0E00               	movlw	0
  5543  00183C  6E0F               	movwf	___ftdiv@f2^0,c
  5544  00183E  0E20               	movlw	32
  5545  001840  6E10               	movwf	(___ftdiv@f2+1)^0,c
  5546  001842  0E41               	movlw	65
  5547  001844  6E11               	movwf	(___ftdiv@f2+2)^0,c
  5548  001846  EC78  F00E         	call	___ftdiv	;wreg free
  5549  00184A  C02C  FFD9         	movff	DHT22_read@dht_humedad,fsr2l
  5550  00184E  C02D  FFDA         	movff	DHT22_read@dht_humedad+1,fsr2h
  5551  001852  C00C  FFDE         	movff	?___ftdiv,postinc2
  5552  001856  C00D  FFDE         	movff	?___ftdiv+1,postinc2
  5553  00185A  C00E  FFDE         	movff	?___ftdiv+2,postinc2
  5554                           
  5555                           ;DHT22.h: 70: return 1;
  5556  00185E  0E01               	movlw	1
  5557  001860  0012               	return		;funcret
  5558  001862                     __end_of_DHT22_read:
  5559                           	callstack 0
  5560                           
  5561 ;; *************** function ___lwtoft *****************
  5562 ;; Defined at:
  5563 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwtoft.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;  c               2    8[COMRAM] unsigned int 
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;		None
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  3    8[COMRAM] float 
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, status,0, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5577 ;;      Params:         3       0       0       0       0       0       0       0       0
  5578 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5580 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5581 ;;Total ram usage:        3 bytes
  5582 ;; Hardware stack levels used: 1
  5583 ;; Hardware stack levels required when called: 1
  5584 ;; This function calls:
  5585 ;;		___ftpack
  5586 ;; This function is called by:
  5587 ;;		_DHT22_read
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           	psect	text29
  5592  0024AC                     __ptext29:
  5593                           	callstack 0
  5594  0024AC                     ___lwtoft:
  5595                           	callstack 28
  5596                           
  5597                           ;incstack = 0
  5598  0024AC  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  5599  0024B0  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  5600  0024B4  6A03               	clrf	(___ftpack@arg+2)^0,c
  5601  0024B6  0E8E               	movlw	142
  5602  0024B8  6E04               	movwf	___ftpack@exp^0,c
  5603  0024BA  0E00               	movlw	0
  5604  0024BC  6E05               	movwf	___ftpack@sign^0,c
  5605  0024BE  EC54  F00F         	call	___ftpack	;wreg free
  5606  0024C2  C001  F009         	movff	?___ftpack,?___lwtoft
  5607  0024C6  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  5608  0024CA  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  5609  0024CE  0012               	return		;funcret
  5610  0024D0                     __end_of___lwtoft:
  5611                           	callstack 0
  5612                           
  5613 ;; *************** function ___ftmul *****************
  5614 ;; Defined at:
  5615 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftmul.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  f1              3   26[COMRAM] float 
  5618 ;;  f2              3   29[COMRAM] float 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  5621 ;;  sign            1   40[COMRAM] unsigned char 
  5622 ;;  cntr            1   39[COMRAM] unsigned char 
  5623 ;;  exp             1   35[COMRAM] unsigned char 
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  3   26[COMRAM] float 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2, status,0, cstack
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5633 ;;      Params:         6       0       0       0       0       0       0       0       0
  5634 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5635 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5636 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5637 ;;Total ram usage:       15 bytes
  5638 ;; Hardware stack levels used: 1
  5639 ;; Hardware stack levels required when called: 1
  5640 ;; This function calls:
  5641 ;;		___ftpack
  5642 ;; This function is called by:
  5643 ;;		_DHT22_read
  5644 ;;		_fround
  5645 ;;		_scale
  5646 ;;		_printf
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text30
  5651  001BFC                     __ptext30:
  5652                           	callstack 0
  5653  001BFC                     ___ftmul:
  5654                           	callstack 27
  5655                           
  5656                           ;incstack = 0
  5657  001BFC  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  5658  001C00  6A22               	clrf	(??___ftmul+1)^0,c
  5659  001C02  6A23               	clrf	(??___ftmul+2)^0,c
  5660  001C04  341C               	rlcf	(___ftmul@f1+1)^0,w,c
  5661  001C06  3621               	rlcf	??___ftmul^0,f,c
  5662  001C08  E301               	bnc	u2111
  5663  001C0A  8022               	bsf	(??___ftmul+1)^0,0,c
  5664  001C0C                     u2111:
  5665  001C0C  5021               	movf	??___ftmul^0,w,c
  5666  001C0E  6E24               	movwf	___ftmul@exp^0,c
  5667  001C10  5024               	movf	___ftmul@exp^0,w,c
  5668  001C12  A4D8               	btfss	status,2,c
  5669  001C14  D007               	goto	l2319
  5670  001C16  0E00               	movlw	0
  5671  001C18  6E1B               	movwf	?___ftmul^0,c
  5672  001C1A  0E00               	movlw	0
  5673  001C1C  6E1C               	movwf	(?___ftmul+1)^0,c
  5674  001C1E  0E00               	movlw	0
  5675  001C20  6E1D               	movwf	(?___ftmul+2)^0,c
  5676  001C22  0012               	return	
  5677  001C24                     l2319:
  5678  001C24  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  5679  001C28  6A22               	clrf	(??___ftmul+1)^0,c
  5680  001C2A  6A23               	clrf	(??___ftmul+2)^0,c
  5681  001C2C  341F               	rlcf	(___ftmul@f2+1)^0,w,c
  5682  001C2E  3621               	rlcf	??___ftmul^0,f,c
  5683  001C30  E301               	bnc	u2131
  5684  001C32  8022               	bsf	(??___ftmul+1)^0,0,c
  5685  001C34                     u2131:
  5686  001C34  5021               	movf	??___ftmul^0,w,c
  5687  001C36  6E29               	movwf	___ftmul@sign^0,c
  5688  001C38  5029               	movf	___ftmul@sign^0,w,c
  5689  001C3A  A4D8               	btfss	status,2,c
  5690  001C3C  D007               	goto	l2325
  5691  001C3E  0E00               	movlw	0
  5692  001C40  6E1B               	movwf	?___ftmul^0,c
  5693  001C42  0E00               	movlw	0
  5694  001C44  6E1C               	movwf	(?___ftmul+1)^0,c
  5695  001C46  0E00               	movlw	0
  5696  001C48  6E1D               	movwf	(?___ftmul+2)^0,c
  5697  001C4A  0012               	return	
  5698  001C4C                     l2325:
  5699  001C4C  5029               	movf	___ftmul@sign^0,w,c
  5700  001C4E  0F7B               	addlw	123
  5701  001C50  2624               	addwf	___ftmul@exp^0,f,c
  5702  001C52  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  5703  001C56  5020               	movf	(___ftmul@f2+2)^0,w,c
  5704  001C58  1A29               	xorwf	___ftmul@sign^0,f,c
  5705  001C5A  0E80               	movlw	128
  5706  001C5C  1629               	andwf	___ftmul@sign^0,f,c
  5707  001C5E  8E1C               	bsf	(___ftmul@f1+1)^0,7,c
  5708  001C60  8E1F               	bsf	(___ftmul@f2+1)^0,7,c
  5709  001C62  0EFF               	movlw	255
  5710  001C64  161E               	andwf	___ftmul@f2^0,f,c
  5711  001C66  0EFF               	movlw	255
  5712  001C68  161F               	andwf	(___ftmul@f2+1)^0,f,c
  5713  001C6A  0E00               	movlw	0
  5714  001C6C  1620               	andwf	(___ftmul@f2+2)^0,f,c
  5715  001C6E  0E00               	movlw	0
  5716  001C70  6E25               	movwf	___ftmul@f3_as_product^0,c
  5717  001C72  0E00               	movlw	0
  5718  001C74  6E26               	movwf	(___ftmul@f3_as_product+1)^0,c
  5719  001C76  0E00               	movlw	0
  5720  001C78  6E27               	movwf	(___ftmul@f3_as_product+2)^0,c
  5721  001C7A  0E07               	movlw	7
  5722  001C7C  6E28               	movwf	___ftmul@cntr^0,c
  5723  001C7E                     l2339:
  5724  001C7E  A01B               	btfss	___ftmul@f1^0,0,c
  5725  001C80  D006               	goto	l2343
  5726  001C82  501E               	movf	___ftmul@f2^0,w,c
  5727  001C84  2625               	addwf	___ftmul@f3_as_product^0,f,c
  5728  001C86  501F               	movf	(___ftmul@f2+1)^0,w,c
  5729  001C88  2226               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5730  001C8A  5020               	movf	(___ftmul@f2+2)^0,w,c
  5731  001C8C  2227               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5732  001C8E                     l2343:
  5733  001C8E  90D8               	bcf	status,0,c
  5734  001C90  321D               	rrcf	(___ftmul@f1+2)^0,f,c
  5735  001C92  321C               	rrcf	(___ftmul@f1+1)^0,f,c
  5736  001C94  321B               	rrcf	___ftmul@f1^0,f,c
  5737  001C96  90D8               	bcf	status,0,c
  5738  001C98  361E               	rlcf	___ftmul@f2^0,f,c
  5739  001C9A  361F               	rlcf	(___ftmul@f2+1)^0,f,c
  5740  001C9C  3620               	rlcf	(___ftmul@f2+2)^0,f,c
  5741  001C9E  2E28               	decfsz	___ftmul@cntr^0,f,c
  5742  001CA0  D7EE               	goto	l2339
  5743  001CA2  0E09               	movlw	9
  5744  001CA4  6E28               	movwf	___ftmul@cntr^0,c
  5745  001CA6                     l2349:
  5746  001CA6  A01B               	btfss	___ftmul@f1^0,0,c
  5747  001CA8  D006               	goto	l2353
  5748  001CAA  501E               	movf	___ftmul@f2^0,w,c
  5749  001CAC  2625               	addwf	___ftmul@f3_as_product^0,f,c
  5750  001CAE  501F               	movf	(___ftmul@f2+1)^0,w,c
  5751  001CB0  2226               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  5752  001CB2  5020               	movf	(___ftmul@f2+2)^0,w,c
  5753  001CB4  2227               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  5754  001CB6                     l2353:
  5755  001CB6  90D8               	bcf	status,0,c
  5756  001CB8  321D               	rrcf	(___ftmul@f1+2)^0,f,c
  5757  001CBA  321C               	rrcf	(___ftmul@f1+1)^0,f,c
  5758  001CBC  321B               	rrcf	___ftmul@f1^0,f,c
  5759  001CBE  90D8               	bcf	status,0,c
  5760  001CC0  3227               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  5761  001CC2  3226               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  5762  001CC4  3225               	rrcf	___ftmul@f3_as_product^0,f,c
  5763  001CC6  2E28               	decfsz	___ftmul@cntr^0,f,c
  5764  001CC8  D7EE               	goto	l2349
  5765  001CCA  C025  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  5766  001CCE  C026  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5767  001CD2  C027  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5768  001CD6  C024  F004         	movff	___ftmul@exp,___ftpack@exp
  5769  001CDA  C029  F005         	movff	___ftmul@sign,___ftpack@sign
  5770  001CDE  EC54  F00F         	call	___ftpack	;wreg free
  5771  001CE2  C001  F01B         	movff	?___ftpack,?___ftmul
  5772  001CE6  C002  F01C         	movff	?___ftpack+1,?___ftmul+1
  5773  001CEA  C003  F01D         	movff	?___ftpack+2,?___ftmul+2
  5774  001CEE  0012               	return		;funcret
  5775  001CF0                     __end_of___ftmul:
  5776                           	callstack 0
  5777                           
  5778 ;; *************** function ___ftdiv *****************
  5779 ;; Defined at:
  5780 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdiv.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  f1              3   11[COMRAM] float 
  5783 ;;  f2              3   14[COMRAM] float 
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  f3              3   21[COMRAM] float 
  5786 ;;  sign            1   25[COMRAM] unsigned char 
  5787 ;;  exp             1   24[COMRAM] unsigned char 
  5788 ;;  cntr            1   20[COMRAM] unsigned char 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  3   11[COMRAM] float 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0, cstack
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5798 ;;      Params:         6       0       0       0       0       0       0       0       0
  5799 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5800 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5801 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5802 ;;Total ram usage:       15 bytes
  5803 ;; Hardware stack levels used: 1
  5804 ;; Hardware stack levels required when called: 1
  5805 ;; This function calls:
  5806 ;;		___ftpack
  5807 ;; This function is called by:
  5808 ;;		_DHT22_read
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text31
  5813  001CF0                     __ptext31:
  5814                           	callstack 0
  5815  001CF0                     ___ftdiv:
  5816                           	callstack 28
  5817                           
  5818                           ;incstack = 0
  5819  001CF0  C00E  F012         	movff	___ftdiv@f1+2,??___ftdiv
  5820  001CF4  6A13               	clrf	(??___ftdiv+1)^0,c
  5821  001CF6  6A14               	clrf	(??___ftdiv+2)^0,c
  5822  001CF8  340D               	rlcf	(___ftdiv@f1+1)^0,w,c
  5823  001CFA  3612               	rlcf	??___ftdiv^0,f,c
  5824  001CFC  E301               	bnc	u2631
  5825  001CFE  8013               	bsf	(??___ftdiv+1)^0,0,c
  5826  001D00                     u2631:
  5827  001D00  5012               	movf	??___ftdiv^0,w,c
  5828  001D02  6E19               	movwf	___ftdiv@exp^0,c
  5829  001D04  5019               	movf	___ftdiv@exp^0,w,c
  5830  001D06  A4D8               	btfss	status,2,c
  5831  001D08  D007               	goto	l2701
  5832  001D0A  0E00               	movlw	0
  5833  001D0C  6E0C               	movwf	?___ftdiv^0,c
  5834  001D0E  0E00               	movlw	0
  5835  001D10  6E0D               	movwf	(?___ftdiv+1)^0,c
  5836  001D12  0E00               	movlw	0
  5837  001D14  6E0E               	movwf	(?___ftdiv+2)^0,c
  5838  001D16  0012               	return	
  5839  001D18                     l2701:
  5840  001D18  C011  F012         	movff	___ftdiv@f2+2,??___ftdiv
  5841  001D1C  6A13               	clrf	(??___ftdiv+1)^0,c
  5842  001D1E  6A14               	clrf	(??___ftdiv+2)^0,c
  5843  001D20  3410               	rlcf	(___ftdiv@f2+1)^0,w,c
  5844  001D22  3612               	rlcf	??___ftdiv^0,f,c
  5845  001D24  E301               	bnc	u2651
  5846  001D26  8013               	bsf	(??___ftdiv+1)^0,0,c
  5847  001D28                     u2651:
  5848  001D28  5012               	movf	??___ftdiv^0,w,c
  5849  001D2A  6E1A               	movwf	___ftdiv@sign^0,c
  5850  001D2C  501A               	movf	___ftdiv@sign^0,w,c
  5851  001D2E  A4D8               	btfss	status,2,c
  5852  001D30  D007               	goto	l2707
  5853  001D32  0E00               	movlw	0
  5854  001D34  6E0C               	movwf	?___ftdiv^0,c
  5855  001D36  0E00               	movlw	0
  5856  001D38  6E0D               	movwf	(?___ftdiv+1)^0,c
  5857  001D3A  0E00               	movlw	0
  5858  001D3C  6E0E               	movwf	(?___ftdiv+2)^0,c
  5859  001D3E  0012               	return	
  5860  001D40                     l2707:
  5861  001D40  0E00               	movlw	0
  5862  001D42  6E16               	movwf	___ftdiv@f3^0,c
  5863  001D44  0E00               	movlw	0
  5864  001D46  6E17               	movwf	(___ftdiv@f3+1)^0,c
  5865  001D48  0E00               	movlw	0
  5866  001D4A  6E18               	movwf	(___ftdiv@f3+2)^0,c
  5867  001D4C  501A               	movf	___ftdiv@sign^0,w,c
  5868  001D4E  0F89               	addlw	137
  5869  001D50  5E19               	subwf	___ftdiv@exp^0,f,c
  5870  001D52  C00E  F01A         	movff	___ftdiv@f1+2,___ftdiv@sign
  5871  001D56  5011               	movf	(___ftdiv@f2+2)^0,w,c
  5872  001D58  1A1A               	xorwf	___ftdiv@sign^0,f,c
  5873  001D5A  0E80               	movlw	128
  5874  001D5C  161A               	andwf	___ftdiv@sign^0,f,c
  5875  001D5E  8E0D               	bsf	(___ftdiv@f1+1)^0,7,c
  5876  001D60  0EFF               	movlw	255
  5877  001D62  160C               	andwf	___ftdiv@f1^0,f,c
  5878  001D64  0EFF               	movlw	255
  5879  001D66  160D               	andwf	(___ftdiv@f1+1)^0,f,c
  5880  001D68  0E00               	movlw	0
  5881  001D6A  160E               	andwf	(___ftdiv@f1+2)^0,f,c
  5882  001D6C  8E10               	bsf	(___ftdiv@f2+1)^0,7,c
  5883  001D6E  0EFF               	movlw	255
  5884  001D70  160F               	andwf	___ftdiv@f2^0,f,c
  5885  001D72  0EFF               	movlw	255
  5886  001D74  1610               	andwf	(___ftdiv@f2+1)^0,f,c
  5887  001D76  0E00               	movlw	0
  5888  001D78  1611               	andwf	(___ftdiv@f2+2)^0,f,c
  5889  001D7A  0E18               	movlw	24
  5890  001D7C  6E15               	movwf	___ftdiv@cntr^0,c
  5891  001D7E                     l2727:
  5892  001D7E  90D8               	bcf	status,0,c
  5893  001D80  3616               	rlcf	___ftdiv@f3^0,f,c
  5894  001D82  3617               	rlcf	(___ftdiv@f3+1)^0,f,c
  5895  001D84  3618               	rlcf	(___ftdiv@f3+2)^0,f,c
  5896  001D86  500F               	movf	___ftdiv@f2^0,w,c
  5897  001D88  5C0C               	subwf	___ftdiv@f1^0,w,c
  5898  001D8A  5010               	movf	(___ftdiv@f2+1)^0,w,c
  5899  001D8C  580D               	subwfb	(___ftdiv@f1+1)^0,w,c
  5900  001D8E  5011               	movf	(___ftdiv@f2+2)^0,w,c
  5901  001D90  580E               	subwfb	(___ftdiv@f1+2)^0,w,c
  5902  001D92  A0D8               	btfss	status,0,c
  5903  001D94  D007               	goto	l611
  5904  001D96  500F               	movf	___ftdiv@f2^0,w,c
  5905  001D98  5E0C               	subwf	___ftdiv@f1^0,f,c
  5906  001D9A  5010               	movf	(___ftdiv@f2+1)^0,w,c
  5907  001D9C  5A0D               	subwfb	(___ftdiv@f1+1)^0,f,c
  5908  001D9E  5011               	movf	(___ftdiv@f2+2)^0,w,c
  5909  001DA0  5A0E               	subwfb	(___ftdiv@f1+2)^0,f,c
  5910  001DA2  8016               	bsf	___ftdiv@f3^0,0,c
  5911  001DA4                     l611:
  5912  001DA4  90D8               	bcf	status,0,c
  5913  001DA6  360C               	rlcf	___ftdiv@f1^0,f,c
  5914  001DA8  360D               	rlcf	(___ftdiv@f1+1)^0,f,c
  5915  001DAA  360E               	rlcf	(___ftdiv@f1+2)^0,f,c
  5916  001DAC  2E15               	decfsz	___ftdiv@cntr^0,f,c
  5917  001DAE  D7E7               	goto	l2727
  5918  001DB0  C016  F001         	movff	___ftdiv@f3,___ftpack@arg
  5919  001DB4  C017  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5920  001DB8  C018  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5921  001DBC  C019  F004         	movff	___ftdiv@exp,___ftpack@exp
  5922  001DC0  C01A  F005         	movff	___ftdiv@sign,___ftpack@sign
  5923  001DC4  EC54  F00F         	call	___ftpack	;wreg free
  5924  001DC8  C001  F00C         	movff	?___ftpack,?___ftdiv
  5925  001DCC  C002  F00D         	movff	?___ftpack+1,?___ftdiv+1
  5926  001DD0  C003  F00E         	movff	?___ftpack+2,?___ftdiv+2
  5927  001DD4  0012               	return		;funcret
  5928  001DD6                     __end_of___ftdiv:
  5929                           	callstack 0
  5930                           
  5931 ;; *************** function ___ftpack *****************
  5932 ;; Defined at:
  5933 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\float.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  arg             3    0[COMRAM] unsigned um
  5936 ;;  exp             1    3[COMRAM] unsigned char 
  5937 ;;  sign            1    4[COMRAM] unsigned char 
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;		None
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  3    0[COMRAM] float 
  5942 ;; Registers used:
  5943 ;;		wreg, status,2, status,0
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5949 ;;      Params:         5       0       0       0       0       0       0       0       0
  5950 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5951 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5952 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5953 ;;Total ram usage:        8 bytes
  5954 ;; Hardware stack levels used: 1
  5955 ;; This function calls:
  5956 ;;		Nothing
  5957 ;; This function is called by:
  5958 ;;		___ftadd
  5959 ;;		___ftdiv
  5960 ;;		___ftmul
  5961 ;;		___lltoft
  5962 ;;		___lwtoft
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           	psect	text32
  5967  001EA8                     __ptext32:
  5968                           	callstack 0
  5969  001EA8                     ___ftpack:
  5970                           	callstack 27
  5971                           
  5972                           ;incstack = 0
  5973  001EA8  5004               	movf	___ftpack@exp^0,w,c
  5974  001EAA  B4D8               	btfsc	status,2,c
  5975  001EAC  D005               	goto	u1830
  5976  001EAE  5001               	movf	___ftpack@arg^0,w,c
  5977  001EB0  1002               	iorwf	(___ftpack@arg+1)^0,w,c
  5978  001EB2  1003               	iorwf	(___ftpack@arg+2)^0,w,c
  5979  001EB4  A4D8               	btfss	status,2,c
  5980  001EB6  D00C               	goto	l2207
  5981  001EB8                     u1830:
  5982  001EB8  0E00               	movlw	0
  5983  001EBA  6E01               	movwf	?___ftpack^0,c
  5984  001EBC  0E00               	movlw	0
  5985  001EBE  6E02               	movwf	(?___ftpack+1)^0,c
  5986  001EC0  0E00               	movlw	0
  5987  001EC2  6E03               	movwf	(?___ftpack+2)^0,c
  5988  001EC4  0012               	return	
  5989  001EC6                     l2205:
  5990  001EC6  2A04               	incf	___ftpack@exp^0,f,c
  5991  001EC8  90D8               	bcf	status,0,c
  5992  001ECA  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  5993  001ECC  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  5994  001ECE  3201               	rrcf	___ftpack@arg^0,f,c
  5995  001ED0                     l2207:
  5996  001ED0  0E00               	movlw	0
  5997  001ED2  1401               	andwf	___ftpack@arg^0,w,c
  5998  001ED4  6E06               	movwf	??___ftpack^0,c
  5999  001ED6  0E00               	movlw	0
  6000  001ED8  1402               	andwf	(___ftpack@arg+1)^0,w,c
  6001  001EDA  6E07               	movwf	(??___ftpack+1)^0,c
  6002  001EDC  0EFE               	movlw	254
  6003  001EDE  1403               	andwf	(___ftpack@arg+2)^0,w,c
  6004  001EE0  6E08               	movwf	(??___ftpack+2)^0,c
  6005  001EE2  5006               	movf	??___ftpack^0,w,c
  6006  001EE4  1007               	iorwf	(??___ftpack+1)^0,w,c
  6007  001EE6  1008               	iorwf	(??___ftpack+2)^0,w,c
  6008  001EE8  B4D8               	btfsc	status,2,c
  6009  001EEA  D00C               	goto	l2213
  6010  001EEC  D7EC               	goto	l2205
  6011  001EEE                     l2209:
  6012  001EEE  2A04               	incf	___ftpack@exp^0,f,c
  6013  001EF0  0E01               	movlw	1
  6014  001EF2  2601               	addwf	___ftpack@arg^0,f,c
  6015  001EF4  0E00               	movlw	0
  6016  001EF6  2202               	addwfc	(___ftpack@arg+1)^0,f,c
  6017  001EF8  0E00               	movlw	0
  6018  001EFA  2203               	addwfc	(___ftpack@arg+2)^0,f,c
  6019  001EFC  90D8               	bcf	status,0,c
  6020  001EFE  3203               	rrcf	(___ftpack@arg+2)^0,f,c
  6021  001F00  3202               	rrcf	(___ftpack@arg+1)^0,f,c
  6022  001F02  3201               	rrcf	___ftpack@arg^0,f,c
  6023  001F04                     l2213:
  6024  001F04  0E00               	movlw	0
  6025  001F06  1401               	andwf	___ftpack@arg^0,w,c
  6026  001F08  6E06               	movwf	??___ftpack^0,c
  6027  001F0A  0E00               	movlw	0
  6028  001F0C  1402               	andwf	(___ftpack@arg+1)^0,w,c
  6029  001F0E  6E07               	movwf	(??___ftpack+1)^0,c
  6030  001F10  0EFF               	movlw	255
  6031  001F12  1403               	andwf	(___ftpack@arg+2)^0,w,c
  6032  001F14  6E08               	movwf	(??___ftpack+2)^0,c
  6033  001F16  5006               	movf	??___ftpack^0,w,c
  6034  001F18  1007               	iorwf	(??___ftpack+1)^0,w,c
  6035  001F1A  1008               	iorwf	(??___ftpack+2)^0,w,c
  6036  001F1C  B4D8               	btfsc	status,2,c
  6037  001F1E  D006               	goto	l2217
  6038  001F20  D7E6               	goto	l2209
  6039  001F22                     l2215:
  6040  001F22  0604               	decf	___ftpack@exp^0,f,c
  6041  001F24  90D8               	bcf	status,0,c
  6042  001F26  3601               	rlcf	___ftpack@arg^0,f,c
  6043  001F28  3602               	rlcf	(___ftpack@arg+1)^0,f,c
  6044  001F2A  3603               	rlcf	(___ftpack@arg+2)^0,f,c
  6045  001F2C                     l2217:
  6046  001F2C  BE02               	btfsc	(___ftpack@arg+1)^0,7,c
  6047  001F2E  D003               	goto	u1870
  6048  001F30  0E02               	movlw	2
  6049  001F32  6004               	cpfslt	___ftpack@exp^0,c
  6050  001F34  D7F6               	goto	l2215
  6051  001F36                     u1870:
  6052  001F36  A004               	btfss	___ftpack@exp^0,0,c
  6053  001F38  9E02               	bcf	(___ftpack@arg+1)^0,7,c
  6054  001F3A  90D8               	bcf	status,0,c
  6055  001F3C  3204               	rrcf	___ftpack@exp^0,f,c
  6056  001F3E  5004               	movf	___ftpack@exp^0,w,c
  6057  001F40  1203               	iorwf	(___ftpack@arg+2)^0,f,c
  6058  001F42  5005               	movf	___ftpack@sign^0,w,c
  6059  001F44  A4D8               	btfss	status,2,c
  6060  001F46  8E03               	bsf	(___ftpack@arg+2)^0,7,c
  6061  001F48  C001  F001         	movff	___ftpack@arg,?___ftpack
  6062  001F4C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6063  001F50  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6064  001F54  0012               	return		;funcret
  6065  001F56                     __end_of___ftpack:
  6066                           	callstack 0
  6067                           
  6068 ;; *************** function _DHT22_init *****************
  6069 ;; Defined at:
  6070 ;;		line 5 in file "DHT22.h"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;		None
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;		None
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      void 
  6077 ;; Registers used:
  6078 ;;		None
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6084 ;;      Params:         0       0       0       0       0       0       0       0       0
  6085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6087 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6088 ;;Total ram usage:        0 bytes
  6089 ;; Hardware stack levels used: 1
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_main
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text33
  6098  002546                     __ptext33:
  6099                           	callstack 0
  6100  002546                     _DHT22_init:
  6101                           	callstack 30
  6102                           
  6103                           ;DHT22.h: 6: TRISCbits.TRISC2 = 0;
  6104                           
  6105                           ;incstack = 0
  6106  002546  9494               	bcf	148,2,c	;volatile
  6107                           
  6108                           ;DHT22.h: 7: LATCbits.LATC2 = 1;
  6109  002548  848B               	bsf	139,2,c	;volatile
  6110  00254A  0012               	return		;funcret
  6111  00254C                     __end_of_DHT22_init:
  6112                           	callstack 0
  6113                           
  6114                           	psect	rparam
  6115  0000                     
  6116                           	psect	idloc
  6117                           
  6118                           ;Config register IDLOC0 @ 0x200000
  6119                           ;	unspecified, using default values
  6120  200000                     	org	2097152
  6121  200000  FF                 	db	255
  6122                           
  6123                           ;Config register IDLOC1 @ 0x200001
  6124                           ;	unspecified, using default values
  6125  200001                     	org	2097153
  6126  200001  FF                 	db	255
  6127                           
  6128                           ;Config register IDLOC2 @ 0x200002
  6129                           ;	unspecified, using default values
  6130  200002                     	org	2097154
  6131  200002  FF                 	db	255
  6132                           
  6133                           ;Config register IDLOC3 @ 0x200003
  6134                           ;	unspecified, using default values
  6135  200003                     	org	2097155
  6136  200003  FF                 	db	255
  6137                           
  6138                           ;Config register IDLOC4 @ 0x200004
  6139                           ;	unspecified, using default values
  6140  200004                     	org	2097156
  6141  200004  FF                 	db	255
  6142                           
  6143                           ;Config register IDLOC5 @ 0x200005
  6144                           ;	unspecified, using default values
  6145  200005                     	org	2097157
  6146  200005  FF                 	db	255
  6147                           
  6148                           ;Config register IDLOC6 @ 0x200006
  6149                           ;	unspecified, using default values
  6150  200006                     	org	2097158
  6151  200006  FF                 	db	255
  6152                           
  6153                           ;Config register IDLOC7 @ 0x200007
  6154                           ;	unspecified, using default values
  6155  200007                     	org	2097159
  6156  200007  FF                 	db	255
  6157                           
  6158                           	psect	config
  6159                           
  6160                           ;Config register CONFIG1L @ 0x300000
  6161                           ;	PLL Prescaler Selection bits
  6162                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  6163                           ;	System Clock Postscaler Selection bits
  6164                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  6165                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  6166                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  6167  300000                     	org	3145728
  6168  300000  00                 	db	0
  6169                           
  6170                           ;Config register CONFIG1H @ 0x300001
  6171                           ;	Oscillator Selection bits
  6172                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  6173                           ;	Fail-Safe Clock Monitor Enable bit
  6174                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6175                           ;	Internal/External Oscillator Switchover bit
  6176                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6177  300001                     	org	3145729
  6178  300001  08                 	db	8
  6179                           
  6180                           ;Config register CONFIG2L @ 0x300002
  6181                           ;	Power-up Timer Enable bit
  6182                           ;	PWRT = OFF, PWRT disabled
  6183                           ;	Brown-out Reset Enable bits
  6184                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  6185                           ;	Brown-out Reset Voltage bits
  6186                           ;	BORV = 3, Minimum setting 2.05V
  6187                           ;	USB Voltage Regulator Enable bit
  6188                           ;	VREGEN = OFF, USB voltage regulator disabled
  6189  300002                     	org	3145730
  6190  300002  19                 	db	25
  6191                           
  6192                           ;Config register CONFIG2H @ 0x300003
  6193                           ;	Watchdog Timer Enable bit
  6194                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6195                           ;	Watchdog Timer Postscale Select bits
  6196                           ;	WDTPS = 32768, 1:32768
  6197  300003                     	org	3145731
  6198  300003  1E                 	db	30
  6199                           
  6200                           ; Padding undefined space
  6201  300004                     	org	3145732
  6202  300004  FF                 	db	255
  6203                           
  6204                           ;Config register CONFIG3H @ 0x300005
  6205                           ;	CCP2 MUX bit
  6206                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  6207                           ;	PORTB A/D Enable bit
  6208                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  6209                           ;	Low-Power Timer 1 Oscillator Enable bit
  6210                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6211                           ;	MCLR Pin Enable bit
  6212                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  6213  300005                     	org	3145733
  6214  300005  03                 	db	3
  6215                           
  6216                           ;Config register CONFIG4L @ 0x300006
  6217                           ;	Stack Full/Underflow Reset Enable bit
  6218                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6219                           ;	Single-Supply ICSP Enable bit
  6220                           ;	LVP = OFF, Single-Supply ICSP disabled
  6221                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  6222                           ;	ICPRT = OFF, ICPORT disabled
  6223                           ;	Extended Instruction Set Enable bit
  6224                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6225                           ;	Background Debugger Enable bit
  6226                           ;	DEBUG = 0x1, unprogrammed default
  6227  300006                     	org	3145734
  6228  300006  81                 	db	129
  6229                           
  6230                           ; Padding undefined space
  6231  300007                     	org	3145735
  6232  300007  FF                 	db	255
  6233                           
  6234                           ;Config register CONFIG5L @ 0x300008
  6235                           ;	Code Protection bit
  6236                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  6237                           ;	Code Protection bit
  6238                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  6239                           ;	Code Protection bit
  6240                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  6241                           ;	Code Protection bit
  6242                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  6243  300008                     	org	3145736
  6244  300008  0F                 	db	15
  6245                           
  6246                           ;Config register CONFIG5H @ 0x300009
  6247                           ;	Boot Block Code Protection bit
  6248                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  6249                           ;	Data EEPROM Code Protection bit
  6250                           ;	CPD = OFF, Data EEPROM is not code-protected
  6251  300009                     	org	3145737
  6252  300009  C0                 	db	192
  6253                           
  6254                           ;Config register CONFIG6L @ 0x30000A
  6255                           ;	Write Protection bit
  6256                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  6257                           ;	Write Protection bit
  6258                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  6259                           ;	Write Protection bit
  6260                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  6261                           ;	Write Protection bit
  6262                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  6263  30000A                     	org	3145738
  6264  30000A  0F                 	db	15
  6265                           
  6266                           ;Config register CONFIG6H @ 0x30000B
  6267                           ;	Configuration Register Write Protection bit
  6268                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  6269                           ;	Boot Block Write Protection bit
  6270                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  6271                           ;	Data EEPROM Write Protection bit
  6272                           ;	WRTD = OFF, Data EEPROM is not write-protected
  6273  30000B                     	org	3145739
  6274  30000B  E0                 	db	224
  6275                           
  6276                           ;Config register CONFIG7L @ 0x30000C
  6277                           ;	Table Read Protection bit
  6278                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6279                           ;	Table Read Protection bit
  6280                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6281                           ;	Table Read Protection bit
  6282                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6283                           ;	Table Read Protection bit
  6284                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6285  30000C                     	org	3145740
  6286  30000C  0F                 	db	15
  6287                           
  6288                           ;Config register CONFIG7H @ 0x30000D
  6289                           ;	Boot Block Table Read Protection bit
  6290                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  6291  30000D                     	org	3145741
  6292  30000D  40                 	db	64
  6293                           tosu	equ	0xFFF
  6294                           tosh	equ	0xFFE
  6295                           tosl	equ	0xFFD
  6296                           stkptr	equ	0xFFC
  6297                           pclatu	equ	0xFFB
  6298                           pclath	equ	0xFFA
  6299                           pcl	equ	0xFF9
  6300                           tblptru	equ	0xFF8
  6301                           tblptrh	equ	0xFF7
  6302                           tblptrl	equ	0xFF6
  6303                           tablat	equ	0xFF5
  6304                           prodh	equ	0xFF4
  6305                           prodl	equ	0xFF3
  6306                           indf0	equ	0xFEF
  6307                           postinc0	equ	0xFEE
  6308                           postdec0	equ	0xFED
  6309                           preinc0	equ	0xFEC
  6310                           plusw0	equ	0xFEB
  6311                           fsr0h	equ	0xFEA
  6312                           fsr0l	equ	0xFE9
  6313                           wreg	equ	0xFE8
  6314                           indf1	equ	0xFE7
  6315                           postinc1	equ	0xFE6
  6316                           postdec1	equ	0xFE5
  6317                           preinc1	equ	0xFE4
  6318                           plusw1	equ	0xFE3
  6319                           fsr1h	equ	0xFE2
  6320                           fsr1l	equ	0xFE1
  6321                           bsr	equ	0xFE0
  6322                           indf2	equ	0xFDF
  6323                           postinc2	equ	0xFDE
  6324                           postdec2	equ	0xFDD
  6325                           preinc2	equ	0xFDC
  6326                           plusw2	equ	0xFDB
  6327                           fsr2h	equ	0xFDA
  6328                           fsr2l	equ	0xFD9
  6329                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    118
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      89
    BANK0           160     25      33
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 8
		 -> LCD_integer@st(COMRAM[8]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 8
		 -> LCD_integer@st(COMRAM[8]), 

    LCD_printf@dato	PTR unsigned char  size(2) Largest target is 8
		 -> LCD_integer@st(COMRAM[8]), STR_3(CODE[6]), 

    DHT22_read@dht_humedad	PTR float  size(2) Largest target is 3
		 -> main@humedad(COMRAM[3]), 

    DHT22_read@dht_temperatura	PTR float  size(2) Largest target is 3
		 -> main@temperatura(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    ___awdiv->___awmod
    _putch->_LCD_dato
    _fround->___ftmul
    ___wmul->___lwdiv
    ___lwdiv->___lwmod
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _LCD_segunda_linea->_LCD_cmd
    _LCD_printf->_LCD_dato
    _LCD_dato->_LCD_write
    _LCD_init->_LCD_cmd
    _LCD_clear->_LCD_cmd
    _LCD_cmd->_LCD_write
    _DHT22_read->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   57854
                                             80 COMRAM     9     9      0
                         _DHT22_init
                         _DHT22_read
                          _LCD_clear
                           _LCD_init
                         _LCD_printf
                  _LCD_segunda_linea
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   43465
                                             69 COMRAM    11     6      5
                                              0 BANK0     25    25      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                7     4      3    8630
                                             41 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     243
                                              2 COMRAM     1     1      0
                           _LCD_dato
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              10     7      3    8852
                                             41 COMRAM    10     7      3
                            ___ftmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1375
                                             12 COMRAM     6     2      4
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     743
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     874
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     455
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     598
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3028
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     480
                                             48 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4498
                                             63 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4153
                                             51 COMRAM    12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     121
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     592
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _LCD_segunda_linea                                    0     0      0     221
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_printf                                           2     0      2     418
                                              2 COMRAM     2     0      2
                           _LCD_dato
 ---------------------------------------------------------------------------------
 (3) _LCD_dato                                             1     1      0     221
                                              1 COMRAM     1     1      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0     221
                                              2 COMRAM     1     1      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            1     1      0     221
                                              2 COMRAM     1     1      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0     221
                                              1 COMRAM     1     1      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (4) _LCD_write                                            1     1      0     199
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT22_read                                          18    14      4   13191
                                             41 COMRAM    18    14      4
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    3133
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    5615
                                             26 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3745
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2883
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _DHT22_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT22_init
   _DHT22_read
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___lwtoft (ARG)
       ___wmul (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
     ___lwtoft
   _LCD_clear
     _LCD_cmd
       _LCD_write
   _LCD_init
     _LCD_cmd
   _LCD_printf
     _LCD_dato
       _LCD_write
   _LCD_segunda_linea
     _LCD_cmd
   _printf
     ___awdiv
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___ftmul
         ___lwdiv
         ___lwmod
         ___wmul
     ___ftge
     ___ftmul
     ___ftneg
     ___ftsub
       ___ftadd
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___ftmul
     ___lldiv
     ___llmod
     ___lltoft
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _putch
       _LCD_dato
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     19      21       6       20.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      59       1       93.7%
BITBIGSFRhl         3D      0       0      22        0.0%
BITBIGSFRhh         2C      0       0      21        0.0%
BITBIGSFRlll        22      0       0      25        0.0%
BITBIGSFRllh         8      0       0      24        0.0%
BITBIGSFRlh          7      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7A       3        0.0%
DATA                 0      0      7A       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jul 18 11:57:03 2022

                       l33 16F8                         l42 1822                         l37 1722  
                       l80 220A                         l72 21D6                         l81 220C  
                       l82 2214                         l74 21E0                         l83 2216  
                       l84 221E                         l76 21EA                         l85 2220  
                       l86 2228                         l78 21F4                         l87 222A  
                       l79 21F6               ___awdiv@sign 000C        ___wmul@multiplicand 000F  
             ___ftadd@exp1 003F               ___ftadd@exp2 003E               ___ftadd@sign 003D  
                      l226 0E5E                        l600 1998                        l280 20D6  
                      l611 1DA4                        l650 249E                        l618 1A8A  
                      l619 1AB2                        l766 2344                        l695 228E  
                      l776 23D8               ___awmod@sign 0006                ?_LCD_printf 0003  
                      wreg 000FE8               ___ftdiv@cntr 0015            __end_of_LCD_cmd 2534  
             ___ftdiv@sign 001A                       l3001 0A56                       l2213 1F04  
                     l2205 1EC6                       l2215 1F22                       l2207 1ED0  
                     l3103 0E3A                       l2217 1F2C                       l2209 1EEE  
                     l2401 205C                       l3041 0BFE                       l3033 0BB4  
                     l3025 0B4E                       l3017 0AE8                       l2171 21D8  
                     l2251 18B2                       l3131 0FBA                       l3115 0E76  
                     l2325 1C4C                       l2309 19E4                       l2421 218A  
                     l2413 2170                       l3125 0FA0                       l3109 0E62  
                     l3045 0C24                       l3029 0B74                       l3133 0FC4  
                     l3205 1FB8                       l2343 1C8E                       l2319 1C24  
                     l2175 21E2                       l2503 1670                       l2423 2192  
                     l3143 0FFC                       l3127 0FAC                       l3119 0EC8  
                     l3055 0C7C                       l2353 1CB6                       l2281 1936  
                     l2257 18DA                       l2433 21B4                       l2417 217C  
                     l3161 1068                       l3153 103E                       l3081 0D64  
                     l3065 0CE6                       l3209 1FC8                       l2339 1C7E  
                     l2179 21EC                       l2291 196A                       l2283 1940  
                     l2611 1AF0                       l2603 1ADC                       l2523 127E  
                     l3147 101C                       l3139 0FDC                       l3091 0D96  
                     l3059 0CE2                       l2701 1D18                       l2349 1CA6  
                     l2293 1974                       l2381 201C                       l2437 21C2  
                     l2429 21AA                       l2541 142E                       l2517 11EE  
                     l3165 108C                       l3085 0D6C                       l3077 0D46  
                     l3183 2350                       l2279 192C                       l2447 2312  
                     l2383 2024                       l2375 2006                       l2535 139E  
                     l2527 12A2                       l3167 1094                       l3159 1060  
                     l2609 1AE4                       l2449 231A                       l2553 24E6  
                     l2393 2044                       l2369 1FF6                       l3097 0E20  
                     l3177 10CC                       l2707 1D40                       l3187 2378  
                     l2299 19B4                       l2619 1B26                       l2563 1A36  
                     l2459 233A                       l2475 23CE                       l2467 23AE  
                     l3099 0E2C                       l3195 1F62                       l2813 1E96  
                     l2805 1E6E                       l2821 224C                       l2469 23B6  
                     l2397 204E                       l2727 1D7E                       l2807 1E7A  
                     l2823 2258                       l2671 1BE4                       l2663 1BD0  
                     l2647 1BA4                       l2639 1B74                       l2495 15A0  
                     l2753 210A                       l2745 23F8                       l2681 2094  
                     l2915 17E6                       l2763 2158                       l2691 20C8  
                     l2835 22A6                       l2659 1BC0                       l2757 212C  
                     l2829 2280                       l2837 22B2                       l2669 1BD8  
                     l2863 16D4                       l2679 2088                       l2599 1ACC  
                     l2943 08A8                       l2777 1E02                       l2953 08E8  
                     l2867 16D8                       l2795 1E56                       l2947 08BA  
                     l2885 16F0                       l2973 09B4                       l2799 1E66  
                     l2991 0A14                       l2983 09DC                       l2967 096A  
                     l2975 09CA                       l2985 0A00                       l2979 09D8  
                     STR_1 0885                       STR_2 0877                       STR_3 0893  
                     u2000 190A                       u2111 1C0C                       u2040 1948  
                     u2200 2028                       u2131 1C34                       u2300 231E  
                     u2070 197C                       u3120 0BFE                       u3040 0A8E  
                     u2330 23BA                       u3210 0E48                       u2260 2196  
                     u3220 0E58                       u3045 0A84                       u3150 0D1C  
                     u3400 2398                       u2520 1AF6                       u3080 0B86  
                     u2441 1A1A                       u2610 2098                       u2530 1B14  
                     u2450 1A24                       u3170 0D5A                       u3090 0BC6  
                     u3180 0D7A                       u1901 1872                       u2461 1A46  
                     u1830 1EB8                       u3350 109C                       u2631 1D00  
                     u3407 238E                       u1911 1886                       u3360 10B2  
                     u2651 1D28                       u2731 1DE6               printf@tmpval 006D  
                     u1940 18A4                       u2740 1DF0                       u2820 225C  
                     u3517 1FD2                       u1870 1F36                       u3390 2370  
                     u2750 1E20                       u2590 1BEA                       u3527 2440  
                     u3537 24FA                       u2850 16D0                       u1970 18CC  
                     u3547 2232                       u2755 1E18                       u3557 16B8  
                     u3397 2366                       u2790 1E80                       u3567 16C4  
                     u3577 16DA                       u2970 0946                       u3587 16E6  
                     u3597 16FE                       u2894 171A                       u2895 1716  
              main@humedad 0054                       _main 1F56               ___ftpack@arg 0001  
             ___ftpack@exp 0004                       fsr0h 000FEA                       indf0 000FEF  
                     fsr2h 000FDA                       fsr0l 000FE9                       indf2 000FDF  
                     fsr2l 000FD9                       prodh 000FF4                       prodl 000FF3  
                     start 0000      DHT22_read@dht_humedad 002C               ___ftmul@cntr 0028  
             ___param_bank 000000               ___ftmul@sign 0029               ___fttol@exp1 003F  
             ___fttol@lval 003B           __end_of_LCD_dato 2528           __end_of_LCD_init 2462  
                    ?_main 0001            __end_of___awdiv 2066            __end_of___ftadd 1A0A  
          __end_of___awmod 21CC            __end_of___ftdiv 1DD6            __end_of___ftneg 24AC  
          __end_of___lldiv 20E8            __end_of___ftmul 1CF0            ___awdiv@divisor 0009  
          __end_of___llmod 22A0            __end_of___ftsub 2422            __end_of___fttol 1EA8  
          __end_of___lwdiv 234E            __end_of___lwmod 23E2            ___awdiv@counter 000B  
           DHT22_read@bits 0033               ___lltoft@exp 0011            __end_of_dpowers 0877  
              LCD_cmd@dato 0002                      _scale 10EA            __end_of_isdigit 24EE  
            ___ftpack@sign 0005                      _putch 2534                      tablat 000FF5  
                    status 000FD8            __initialization 2506               __end_of_main 1FE2  
                   ??_main 0051              ___fttol@sign1 003A              __activetblptr 000002  
                ??_LCD_cmd 0002          __end_of_LCD_clear 2506          __end_of_LCD_write 223A  
         ___llmod@dividend 0001                     ?_scale 002A           ___awdiv@dividend 0007  
                   ?_putch 0001           __end_of___ftpack 1F56           __end_of___lltoft 22FC  
         __end_of___lwtoft 24D0                     _OSCCON 000FD3               ??_DHT22_init 0001  
             ??_DHT22_read 002E           __end_of__powers_ 0828                     ___ftge 20E8  
                   ___wmul 2462                  ??___awdiv 000B                  ??___ftadd 003A  
                ??___awmod 0005                  ??___ftdiv 0012                  ??___ftneg 0004  
                ??___lldiv 0009                  ??___ftmul 0021                  ??___llmod 0009  
                ??___ftsub 0046                  ??___fttol 0035                  ??___lwdiv 000A  
                ??___lwmod 0005                     _fround 1452                     clear_0 250C  
         ___awdiv@quotient 000D            ___awmod@divisor 0003                     isa$std 000001  
          ___awmod@counter 0005                     _printf 089A      ___ftmul@f3_as_product 0025  
             LCD_dato@dato 0002                  ??_isdigit 0001               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
           LCD_printf@dato 0003         __end_of_DHT22_init 254C         __end_of_DHT22_read 1862  
               __accesstop 0060    __end_of__initialization 2512                 ___ftadd@f1 0034  
               ___ftadd@f2 0037                 ___ftge@ff1 0001                  ?_LCD_dato 0001  
               ___ftge@ff2 0004                  ?_LCD_init 0001              ___rparam_used 000001  
               ___ftdiv@f1 000C                 ___ftdiv@f2 000F                 ___ftdiv@f3 0016  
               ___ftneg@f1 0001                 ___ftmul@f1 001B                 ___ftmul@f2 001E  
               ___ftsub@f1 0040                 ___ftsub@f2 0043                 ___fttol@f1 0031  
           __pcstackCOMRAM 0001                 ___lltoft@c 0009              __end_of_scale 1452  
            __end_of_putch 253E      DHT22_read@rawhumidity 0030                 ___lwtoft@c 0009  
               __div_to_l_ 1B08               ??_LCD_printf 0005            __div_to_l_@exp1 000C  
          __div_to_l_@cntr 000B                    ??_scale 002D            __div_to_l_@quot 0007  
                  ??_putch 0003                 __pbssBANK0 0079                 ??_LCD_dato 0002  
               ??_LCD_init 0003              __div_to_l_@f1 0001              __div_to_l_@f2 0004  
 DHT22_read@rawtemperature 0038                    ?___ftge 0001         __end_of_LCD_printf 23A0  
                  ?___wmul 000D                    ?_fround 002A                  ?___ftpack 0001  
                  ?_printf 0046                  ?___lltoft 0009                  ?___lwtoft 0009  
                  _LCD_cmd 2528           DHT22_read@result 0032          __end_of__npowers_ 084F  
                  __Hparam 0000                 _scale$1101 002D                    __Lparam 0000  
         LCD_integer@F3205 0079                    ___awdiv 1FE2                    ___ftadd 1862  
                  ___awmod 215C                    ___ftdiv 1CF0                    ___ftneg 2488  
                  ___lldiv 2066                    ___ftmul 1BFC                    ___llmod 223A  
                  ___ftsub 23E2                    ___fttol 1DD6                    ___lwdiv 22FC  
                  ___lwmod 23A0               __psmallconst 0800                    __pcinit 2506  
               ??___ftpack 0006                    __ramtop 0800                 ??___lltoft 000D  
                  __ptext0 1F56                    __ptext1 089A                    __ptext2 10EA  
                  __ptext3 215C                    __ptext4 1FE2                    __ptext5 2534  
                  __ptext6 24D0                    __ptext7 1452                    __ptext8 2462  
                  __ptext9 23A0                 ??___lwtoft 000C                ?__div_to_l_ 0001  
                  _dpowers 084F                    _isdigit 24D0           ___awmod@dividend 0001  
                _LCD_clear 24EE       end_of_initialization 2512                  _LCD_write 21CC  
            __Lmediumconst 0000            ___lldiv@divisor 0005            ___lldiv@counter 000D  
                  printf@c 0078                    printf@f 0046                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE             __tdiv_to_l_@f1 0001  
           __tdiv_to_l_@f2 0004              ??__tdiv_to_l_ 0007                  _PORTCbits 000F82  
                _TRISCbits 000F94                  _TRISDbits 000F95                 ?_LCD_clear 0001  
               ?_LCD_write 0001                ___ftdiv@exp 0019                printf@width 006B  
               main@status 0053                ___ftmul@exp 0024             __end_of___ftge 215C  
           __end_of___wmul 2488             __end_of_fround 16B0             __end_of_printf 10EA  
      start_initialization 2506        __end_of__tdiv_to_l_ 1B08          _LCD_segunda_linea 253E  
       ?_LCD_segunda_linea 0001            ___llmod@divisor 0005            ___llmod@counter 0009  
      ??_LCD_segunda_linea 0003                   ??___ftge 0007                   ??___wmul 0011  
                 ??_fround 002D                   ??_printf 004B                 fround@prec 0033  
                 ?_LCD_cmd 0001              __pcstackBANK0 0060  __end_of_LCD_segunda_linea 2546  
              ??_LCD_clear 0003                ??_LCD_write 0001           ___lwdiv@dividend 0006  
            LCD_write@dato 0001                   ?___awdiv 0007                   ?___ftadd 0034  
                 ?___awmod 0001                   ?___ftdiv 000C                   ?___ftneg 0001  
                 ?___lldiv 0001                   ?___ftmul 001B                   ?___llmod 0001  
                 ?___ftsub 0040                  __npowers_ 0828                   ?___fttol 0031  
                 ?___lwdiv 0006                   ?___lwmod 0001  DHT22_read@dht_temperatura 002A  
              __tdiv_to_l_ 1A0A               ??__div_to_l_ 0007                __smallconst 0800  
                 ?_isdigit 0001           ___lwdiv@quotient 000A             ___wmul@product 0011  
                 _LATCbits 000F8B                   _LATDbits 000F8C                   _LCD_dato 251C  
                 _LCD_init 2422         __end_of__div_to_l_ 1BFC          ___wmul@multiplier 000D  
               printf@flag 0069                 printf@eexp 0071                 printf@fval 0073  
               printf@prec 0076                DHT22_read@i 003A                DHT22_read@j 003B  
                 __Hrparam 0000                 _DHT22_init 2546                 _DHT22_read 16B0  
                 __Lrparam 0000                   ___ftpack 1EA8                _fround$1100 002D  
              _fround$1099 0030                   ___lltoft 22A0                _isdigit$882 0002  
                 ___lwtoft 24AC            ___lwdiv@divisor 0008            ___lwdiv@counter 000C  
                 __ptext10 22FC                   __ptext11 1A0A                   __ptext20 20E8  
                 __ptext12 1B08                   __ptext21 253E                   __ptext13 22A0  
                 __ptext30 1BFC                   __ptext22 234E                   __ptext14 223A  
                 __ptext31 1CF0                   __ptext23 251C                   __ptext15 2066  
                 __ptext32 1EA8                   __ptext24 2422                   __ptext16 1DD6  
                 __ptext33 2546                   __ptext25 24EE                   __ptext17 23E2  
                 __ptext26 2528                   __ptext18 1862                   __ptext27 21CC  
                 __ptext19 2488                   __ptext28 16B0                   __ptext29 24AC  
                 __powers_ 0801                   isa$xinst 000000                  printf@val 0065  
          main@temperatura 0057                  putch@dato 0003                 _LCD_printf 234E  
                 isdigit@c 0003                   scale@scl 0030           __tdiv_to_l_@exp1 000F  
         __tdiv_to_l_@cntr 000E           __tdiv_to_l_@quot 000A           ___lwmod@dividend 0001  
         ___lldiv@dividend 0001                ?_DHT22_init 0001                ?_DHT22_read 002A  
                 printf@ap 0063               ?__tdiv_to_l_ 0001                _printf$1102 0060  
         ___lldiv@quotient 0009            ___lwmod@divisor 0003            ___lwmod@counter 0005  
